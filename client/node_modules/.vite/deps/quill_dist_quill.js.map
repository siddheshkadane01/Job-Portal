{
  "version": 3,
  "sources": ["webpack://Quill/webpack/universalModuleDefinition", "webpack://Quill/src/blots/block.ts", "webpack://Quill/src/blots/break.ts", "webpack://Quill/src/blots/container.ts", "webpack://Quill/src/blots/cursor.ts", "webpack://Quill/src/blots/embed.ts", "webpack://Quill/src/blots/inline.ts", "webpack://Quill/src/blots/text.ts", "webpack://Quill/src/blots/scroll.ts", "webpack://Quill/src/modules/history.ts", "webpack://Quill/src/modules/uploader.ts", "webpack://Quill/src/modules/input.ts", "webpack://Quill/src/modules/uiNode.ts", "webpack://Quill/src/core.ts", "webpack://Quill/src/core/emitter.ts", "webpack://Quill/src/core/instances.ts", "webpack://Quill/src/core/logger.ts", "webpack://Quill/src/core/module.ts", "webpack://Quill/src/core/editor.ts", "webpack://Quill/src/core/composition.ts", "webpack://Quill/src/core/utils/scrollRectIntoView.ts", "webpack://Quill/src/core/utils/createRegistryWithFormats.ts", "webpack://Quill/src/core/quill.ts", "webpack://Quill/src/core/selection.ts", "webpack://Quill/src/core/theme.ts", "webpack://Quill/src/formats/align.ts", "webpack://Quill/src/formats/background.ts", "webpack://Quill/src/formats/code.ts", "webpack://Quill/src/formats/color.ts", "webpack://Quill/src/formats/direction.ts", "webpack://Quill/src/formats/font.ts", "webpack://Quill/src/formats/size.ts", "webpack://Quill/src/modules/normalizeExternalHTML/normalizers/googleDocs.ts", "webpack://Quill/src/modules/normalizeExternalHTML/normalizers/msWord.ts", "webpack://Quill/src/modules/normalizeExternalHTML/index.ts", "webpack://Quill/src/modules/clipboard.ts", "webpack://Quill/src/modules/keyboard.ts", "webpack://Quill/node_modules/eventemitter3/index.js", "webpack://Quill/node_modules/fast-diff/diff.js", "webpack://Quill/node_modules/lodash.clonedeep/index.js", "webpack://Quill/node_modules/lodash.isequal/index.js", "webpack://Quill/node_modules/quill-delta/src/AttributeMap.ts", "webpack://Quill/node_modules/quill-delta/src/Delta.ts", "webpack://Quill/node_modules/quill-delta/src/Op.ts", "webpack://Quill/node_modules/quill-delta/src/OpIterator.ts", "webpack://Quill/node_modules/lodash-es/_listCacheClear.js", "webpack://Quill/node_modules/lodash-es/_assocIndexOf.js", "webpack://Quill/node_modules/lodash-es/_listCacheDelete.js", "webpack://Quill/node_modules/lodash-es/_ListCache.js", "webpack://Quill/node_modules/lodash-es/_listCacheGet.js", "webpack://Quill/node_modules/lodash-es/_listCacheHas.js", "webpack://Quill/node_modules/lodash-es/_listCacheSet.js", "webpack://Quill/node_modules/lodash-es/_Map.js", "webpack://Quill/node_modules/lodash-es/_nativeCreate.js", "webpack://Quill/node_modules/lodash-es/_hashGet.js", "webpack://Quill/node_modules/lodash-es/_hashHas.js", "webpack://Quill/node_modules/lodash-es/_Hash.js", "webpack://Quill/node_modules/lodash-es/_hashClear.js", "webpack://Quill/node_modules/lodash-es/_hashDelete.js", "webpack://Quill/node_modules/lodash-es/_hashSet.js", "webpack://Quill/node_modules/lodash-es/_getMapData.js", "webpack://Quill/node_modules/lodash-es/_isKeyable.js", "webpack://Quill/node_modules/lodash-es/_MapCache.js", "webpack://Quill/node_modules/lodash-es/_mapCacheClear.js", "webpack://Quill/node_modules/lodash-es/_mapCacheDelete.js", "webpack://Quill/node_modules/lodash-es/_mapCacheGet.js", "webpack://Quill/node_modules/lodash-es/_mapCacheHas.js", "webpack://Quill/node_modules/lodash-es/_mapCacheSet.js", "webpack://Quill/node_modules/lodash-es/_Stack.js", "webpack://Quill/node_modules/lodash-es/_stackClear.js", "webpack://Quill/node_modules/lodash-es/_stackDelete.js", "webpack://Quill/node_modules/lodash-es/_stackGet.js", "webpack://Quill/node_modules/lodash-es/_stackHas.js", "webpack://Quill/node_modules/lodash-es/_stackSet.js", "webpack://Quill/node_modules/lodash-es/_Symbol.js", "webpack://Quill/node_modules/lodash-es/_Uint8Array.js", "webpack://Quill/node_modules/lodash-es/_baseTimes.js", "webpack://Quill/node_modules/lodash-es/_arrayLikeKeys.js", "webpack://Quill/node_modules/lodash-es/_arrayPush.js", "webpack://Quill/node_modules/lodash-es/_assignValue.js", "webpack://Quill/node_modules/lodash-es/_baseAssignValue.js", "webpack://Quill/node_modules/lodash-es/_baseGetAllKeys.js", "webpack://Quill/node_modules/lodash-es/_getRawTag.js", "webpack://Quill/node_modules/lodash-es/_objectToString.js", "webpack://Quill/node_modules/lodash-es/_baseGetTag.js", "webpack://Quill/node_modules/lodash-es/_baseUnary.js", "webpack://Quill/node_modules/lodash-es/_cloneArrayBuffer.js", "webpack://Quill/node_modules/lodash-es/_cloneBuffer.js", "webpack://Quill/node_modules/lodash-es/_cloneTypedArray.js", "webpack://Quill/node_modules/lodash-es/_copyArray.js", "webpack://Quill/node_modules/lodash-es/_copyObject.js", "webpack://Quill/node_modules/lodash-es/_defineProperty.js", "webpack://Quill/node_modules/lodash-es/_freeGlobal.js", "webpack://Quill/node_modules/lodash-es/_getAllKeys.js", "webpack://Quill/node_modules/lodash-es/_isMasked.js", "webpack://Quill/node_modules/lodash-es/_coreJsData.js", "webpack://Quill/node_modules/lodash-es/_baseIsNative.js", "webpack://Quill/node_modules/lodash-es/_getNative.js", "webpack://Quill/node_modules/lodash-es/_getValue.js", "webpack://Quill/node_modules/lodash-es/_getPrototype.js", "webpack://Quill/node_modules/lodash-es/_arrayFilter.js", "webpack://Quill/node_modules/lodash-es/_getSymbols.js", "webpack://Quill/node_modules/lodash-es/_DataView.js", "webpack://Quill/node_modules/lodash-es/_Promise.js", "webpack://Quill/node_modules/lodash-es/_Set.js", "webpack://Quill/node_modules/lodash-es/_WeakMap.js", "webpack://Quill/node_modules/lodash-es/_getTag.js", "webpack://Quill/node_modules/lodash-es/_baseCreate.js", "webpack://Quill/node_modules/lodash-es/_initCloneObject.js", "webpack://Quill/node_modules/lodash-es/_isIndex.js", "webpack://Quill/node_modules/lodash-es/_isPrototype.js", "webpack://Quill/node_modules/lodash-es/_nodeUtil.js", "webpack://Quill/node_modules/lodash-es/_overArg.js", "webpack://Quill/node_modules/lodash-es/_root.js", "webpack://Quill/node_modules/lodash-es/_toSource.js", "webpack://Quill/node_modules/lodash-es/_getSymbolsIn.js", "webpack://Quill/node_modules/lodash-es/_getAllKeysIn.js", "webpack://Quill/node_modules/lodash-es/_initCloneArray.js", "webpack://Quill/node_modules/lodash-es/_cloneRegExp.js", "webpack://Quill/node_modules/lodash-es/_cloneSymbol.js", "webpack://Quill/node_modules/lodash-es/_initCloneByTag.js", "webpack://Quill/node_modules/lodash-es/_cloneDataView.js", "webpack://Quill/node_modules/lodash-es/isMap.js", "webpack://Quill/node_modules/lodash-es/_baseIsMap.js", "webpack://Quill/node_modules/lodash-es/isSet.js", "webpack://Quill/node_modules/lodash-es/_baseIsSet.js", "webpack://Quill/node_modules/lodash-es/_baseClone.js", "webpack://Quill/node_modules/lodash-es/_copySymbolsIn.js", "webpack://Quill/node_modules/lodash-es/_baseAssignIn.js", "webpack://Quill/node_modules/lodash-es/_copySymbols.js", "webpack://Quill/node_modules/lodash-es/_baseAssign.js", "webpack://Quill/node_modules/lodash-es/_arrayEach.js", "webpack://Quill/node_modules/lodash-es/cloneDeep.js", "webpack://Quill/node_modules/lodash-es/eq.js", "webpack://Quill/node_modules/lodash-es/_baseIsArguments.js", "webpack://Quill/node_modules/lodash-es/isArguments.js", "webpack://Quill/node_modules/lodash-es/isArray.js", "webpack://Quill/node_modules/lodash-es/isArrayLike.js", "webpack://Quill/node_modules/lodash-es/isBuffer.js", "webpack://Quill/node_modules/lodash-es/stubFalse.js", "webpack://Quill/node_modules/lodash-es/_SetCache.js", "webpack://Quill/node_modules/lodash-es/_setCacheAdd.js", "webpack://Quill/node_modules/lodash-es/_setCacheHas.js", "webpack://Quill/node_modules/lodash-es/_arraySome.js", "webpack://Quill/node_modules/lodash-es/_equalArrays.js", "webpack://Quill/node_modules/lodash-es/_cacheHas.js", "webpack://Quill/node_modules/lodash-es/_mapToArray.js", "webpack://Quill/node_modules/lodash-es/_setToArray.js", "webpack://Quill/node_modules/lodash-es/_equalByTag.js", "webpack://Quill/node_modules/lodash-es/_equalObjects.js", "webpack://Quill/node_modules/lodash-es/_baseIsEqualDeep.js", "webpack://Quill/node_modules/lodash-es/_baseIsEqual.js", "webpack://Quill/node_modules/lodash-es/isEqual.js", "webpack://Quill/node_modules/lodash-es/isFunction.js", "webpack://Quill/node_modules/lodash-es/isLength.js", "webpack://Quill/node_modules/lodash-es/isObject.js", "webpack://Quill/node_modules/lodash-es/isObjectLike.js", "webpack://Quill/node_modules/lodash-es/_baseIsTypedArray.js", "webpack://Quill/node_modules/lodash-es/isTypedArray.js", "webpack://Quill/node_modules/lodash-es/_nativeKeys.js", "webpack://Quill/node_modules/lodash-es/_baseKeys.js", "webpack://Quill/node_modules/lodash-es/keys.js", "webpack://Quill/node_modules/lodash-es/_baseKeysIn.js", "webpack://Quill/node_modules/lodash-es/_nativeKeysIn.js", "webpack://Quill/node_modules/lodash-es/keysIn.js", "webpack://Quill/node_modules/lodash-es/_shortOut.js", "webpack://Quill/node_modules/lodash-es/_createAssigner.js", "webpack://Quill/node_modules/lodash-es/_assignMergeValue.js", "webpack://Quill/node_modules/lodash-es/_baseFor.js", "webpack://Quill/node_modules/lodash-es/_createBaseFor.js", "webpack://Quill/node_modules/lodash-es/isPlainObject.js", "webpack://Quill/node_modules/lodash-es/_safeGet.js", "webpack://Quill/node_modules/lodash-es/_baseMergeDeep.js", "webpack://Quill/node_modules/lodash-es/isArrayLikeObject.js", "webpack://Quill/node_modules/lodash-es/toPlainObject.js", "webpack://Quill/node_modules/lodash-es/_baseMerge.js", "webpack://Quill/node_modules/lodash-es/identity.js", "webpack://Quill/node_modules/lodash-es/_overRest.js", "webpack://Quill/node_modules/lodash-es/_baseSetToString.js", "webpack://Quill/node_modules/lodash-es/constant.js", "webpack://Quill/node_modules/lodash-es/_setToString.js", "webpack://Quill/node_modules/lodash-es/_baseRest.js", "webpack://Quill/node_modules/lodash-es/_apply.js", "webpack://Quill/node_modules/lodash-es/merge.js", "webpack://Quill/node_modules/lodash-es/_isIterateeCall.js", "webpack://Quill/node_modules/lodash-es/stubArray.js", "webpack://Quill/node_modules/parchment/src/scope.ts", "webpack://Quill/node_modules/parchment/src/attributor/attributor.ts", "webpack://Quill/node_modules/parchment/src/error.ts", "webpack://Quill/node_modules/parchment/src/registry.ts", "webpack://Quill/node_modules/parchment/src/attributor/class.ts", "webpack://Quill/node_modules/parchment/src/attributor/style.ts", "webpack://Quill/node_modules/parchment/src/attributor/store.ts", "webpack://Quill/node_modules/parchment/src/blot/abstract/shadow.ts", "webpack://Quill/node_modules/parchment/src/blot/abstract/leaf.ts", "webpack://Quill/node_modules/parchment/src/collection/linked-list.ts", "webpack://Quill/node_modules/parchment/src/blot/abstract/parent.ts", "webpack://Quill/node_modules/parchment/src/blot/inline.ts", "webpack://Quill/node_modules/parchment/src/blot/block.ts", "webpack://Quill/node_modules/parchment/src/blot/abstract/container.ts", "webpack://Quill/node_modules/parchment/src/blot/embed.ts", "webpack://Quill/node_modules/parchment/src/blot/scroll.ts", "webpack://Quill/node_modules/parchment/src/blot/text.ts", "webpack://Quill/webpack/bootstrap", "webpack://Quill/webpack/runtime/compat%20get%20default%20export", "webpack://Quill/webpack/runtime/define%20property%20getters", "webpack://Quill/webpack/runtime/global", "webpack://Quill/webpack/runtime/hasOwnProperty%20shorthand", "webpack://Quill/webpack/runtime/make%20namespace%20object", "webpack://Quill/webpack/runtime/node%20module%20decorator", "webpack://Quill/src/formats/indent.ts", "webpack://Quill/src/formats/blockquote.ts", "webpack://Quill/src/formats/header.ts", "webpack://Quill/src/formats/list.ts", "webpack://Quill/src/formats/bold.ts", "webpack://Quill/src/formats/link.ts", "webpack://Quill/src/formats/script.ts", "webpack://Quill/src/formats/underline.ts", "webpack://Quill/src/formats/formula.ts", "webpack://Quill/src/formats/image.ts", "webpack://Quill/src/formats/video.ts", "webpack://Quill/src/modules/syntax.ts", "webpack://Quill/src/formats/table.ts", "webpack://Quill/src/modules/table.ts", "webpack://Quill/src/modules/toolbar.ts", "webpack://Quill/src/ui/icons.ts", "webpack://Quill/src/ui/picker.ts", "webpack://Quill/src/ui/color-picker.ts", "webpack://Quill/src/ui/icon-picker.ts", "webpack://Quill/src/ui/tooltip.ts", "webpack://Quill/src/themes/base.ts", "webpack://Quill/src/themes/bubble.ts", "webpack://Quill/src/themes/snow.ts", "webpack://Quill/src/quill.ts", "webpack://Quill/src/formats/italic.ts", "webpack://Quill/src/formats/strike.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Quill\"] = factory();\n\telse\n\t\troot[\"Quill\"] = factory();\n})(self, function() {\nreturn ", "import {\n  AttributorStore,\n  BlockBlot,\n  EmbedBlot,\n  LeafBlot,\n  Scope,\n} from 'parchment';\nimport type { Blot, Parent } from 'parchment';\nimport Delta from 'quill-delta';\nimport Break from './break.js';\nimport Inline from './inline.js';\nimport TextBlot from './text.js';\n\nconst NEWLINE_LENGTH = 1;\n\nclass Block extends BlockBlot {\n  cache: { delta?: Delta | null; length?: number } = {};\n\n  delta(): Delta {\n    if (this.cache.delta == null) {\n      this.cache.delta = blockDelta(this);\n    }\n    return this.cache.delta;\n  }\n\n  deleteAt(index: number, length: number) {\n    super.deleteAt(index, length);\n    this.cache = {};\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (length <= 0) return;\n    if (this.scroll.query(name, Scope.BLOCK)) {\n      if (index + length === this.length()) {\n        this.format(name, value);\n      }\n    } else {\n      super.formatAt(\n        index,\n        Math.min(length, this.length() - index - 1),\n        name,\n        value,\n      );\n    }\n    this.cache = {};\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      this.cache = {};\n      return;\n    }\n    if (value.length === 0) return;\n    const lines = value.split('\\n');\n    const text = lines.shift() as string;\n    if (text.length > 0) {\n      if (index < this.length() - 1 || this.children.tail == null) {\n        super.insertAt(Math.min(index, this.length() - 1), text);\n      } else {\n        this.children.tail.insertAt(this.children.tail.length(), text);\n      }\n      this.cache = {};\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let block: Blot | this = this;\n    lines.reduce((lineIndex, line) => {\n      // @ts-expect-error Fix me later\n      block = block.split(lineIndex, true);\n      block.insertAt(0, line);\n      return line.length;\n    }, index + text.length);\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    const { head } = this.children;\n    super.insertBefore(blot, ref);\n    if (head instanceof Break) {\n      head.remove();\n    }\n    this.cache = {};\n  }\n\n  length() {\n    if (this.cache.length == null) {\n      this.cache.length = super.length() + NEWLINE_LENGTH;\n    }\n    return this.cache.length;\n  }\n\n  moveChildren(target: Parent, ref?: Blot | null) {\n    super.moveChildren(target, ref);\n    this.cache = {};\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.cache = {};\n  }\n\n  path(index: number) {\n    return super.path(index, true);\n  }\n\n  removeChild(child: Blot) {\n    super.removeChild(child);\n    this.cache = {};\n  }\n\n  split(index: number, force: boolean | undefined = false): Blot | null {\n    if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {\n      const clone = this.clone();\n      if (index === 0) {\n        this.parent.insertBefore(clone, this);\n        return this;\n      }\n      this.parent.insertBefore(clone, this.next);\n      return clone;\n    }\n    const next = super.split(index, force);\n    this.cache = {};\n    return next;\n  }\n}\nBlock.blotName = 'block';\nBlock.tagName = 'P';\nBlock.defaultChild = Break;\nBlock.allowedChildren = [Break, Inline, EmbedBlot, TextBlot];\n\nclass BlockEmbed extends EmbedBlot {\n  attributes: AttributorStore;\n  domNode: HTMLElement;\n\n  attach() {\n    super.attach();\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  delta() {\n    return new Delta().insert(this.value(), {\n      ...this.formats(),\n      ...this.attributes.values(),\n    });\n  }\n\n  format(name: string, value: unknown) {\n    const attribute = this.scroll.query(name, Scope.BLOCK_ATTRIBUTE);\n    if (attribute != null) {\n      // @ts-expect-error TODO: Scroll#query() should return Attributor when scope is attribute\n      this.attributes.attribute(attribute, value);\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    this.format(name, value);\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      return;\n    }\n    const lines = value.split('\\n');\n    const text = lines.pop();\n    const blocks = lines.map((line) => {\n      const block = this.scroll.create(Block.blotName);\n      block.insertAt(0, line);\n      return block;\n    });\n    const ref = this.split(index);\n    blocks.forEach((block) => {\n      this.parent.insertBefore(block, ref);\n    });\n    if (text) {\n      this.parent.insertBefore(this.scroll.create('text', text), ref);\n    }\n  }\n}\nBlockEmbed.scope = Scope.BLOCK_BLOT;\n// It is important for cursor behavior BlockEmbeds use tags that are block level elements\n\nfunction blockDelta(blot: BlockBlot, filter = true) {\n  return blot\n    .descendants(LeafBlot)\n    .reduce((delta, leaf) => {\n      if (leaf.length() === 0) {\n        return delta;\n      }\n      return delta.insert(leaf.value(), bubbleFormats(leaf, {}, filter));\n    }, new Delta())\n    .insert('\\n', bubbleFormats(blot));\n}\n\nfunction bubbleFormats(\n  blot: Blot | null,\n  formats: Record<string, unknown> = {},\n  filter = true,\n): Record<string, unknown> {\n  if (blot == null) return formats;\n  if ('formats' in blot && typeof blot.formats === 'function') {\n    formats = {\n      ...formats,\n      ...blot.formats(),\n    };\n    if (filter) {\n      // exclude syntax highlighting from deltas and getFormat()\n      delete formats['code-token'];\n    }\n  }\n  if (\n    blot.parent == null ||\n    blot.parent.statics.blotName === 'scroll' ||\n    blot.parent.statics.scope !== blot.statics.scope\n  ) {\n    return formats;\n  }\n  return bubbleFormats(blot.parent, formats, filter);\n}\n\nexport { blockDelta, bubbleFormats, BlockEmbed, Block as default };\n", "import { EmbedBlot } from 'parchment';\n\nclass Break extends EmbedBlot {\n  static value() {\n    return undefined;\n  }\n\n  optimize() {\n    if (this.prev || this.next) {\n      this.remove();\n    }\n  }\n\n  length() {\n    return 0;\n  }\n\n  value() {\n    return '';\n  }\n}\nBreak.blotName = 'break';\nBreak.tagName = 'BR';\n\nexport default Break;\n", "import { ContainerBlot } from 'parchment';\n\nclass Container extends ContainerBlot {}\n\nexport default Container;\n", "import { EmbedBlot, Scope } from 'parchment';\nimport type { Parent, ScrollBlot } from 'parchment';\nimport type Selection from '../core/selection.js';\nimport TextBlot from './text.js';\nimport type { EmbedContextRange } from './embed.js';\n\nclass Cursor extends EmbedBlot {\n  static blotName = 'cursor';\n  static className = 'ql-cursor';\n  static tagName = 'span';\n  static CONTENTS = '\\uFEFF'; // Zero width no break space\n\n  static value() {\n    return undefined;\n  }\n\n  selection: Selection;\n  textNode: Text;\n  savedLength: number;\n\n  constructor(scroll: ScrollBlot, domNode: HTMLElement, selection: Selection) {\n    super(scroll, domNode);\n    this.selection = selection;\n    this.textNode = document.createTextNode(Cursor.CONTENTS);\n    this.domNode.appendChild(this.textNode);\n    this.savedLength = 0;\n  }\n\n  detach() {\n    // super.detach() will also clear domNode.__blot\n    if (this.parent != null) this.parent.removeChild(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (this.savedLength !== 0) {\n      super.format(name, value);\n      return;\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let target: Parent | this = this;\n    let index = 0;\n    while (target != null && target.statics.scope !== Scope.BLOCK_BLOT) {\n      index += target.offset(target.parent);\n      target = target.parent;\n    }\n    if (target != null) {\n      this.savedLength = Cursor.CONTENTS.length;\n      // @ts-expect-error TODO: allow empty context in Parchment\n      target.optimize();\n      target.formatAt(index, Cursor.CONTENTS.length, name, value);\n      this.savedLength = 0;\n    }\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.textNode) return 0;\n    return super.index(node, offset);\n  }\n\n  length() {\n    return this.savedLength;\n  }\n\n  position(): [Text, number] {\n    return [this.textNode, this.textNode.data.length];\n  }\n\n  remove() {\n    super.remove();\n    // @ts-expect-error Fix me later\n    this.parent = null;\n  }\n\n  restore(): EmbedContextRange | null {\n    if (this.selection.composing || this.parent == null) return null;\n    const range = this.selection.getNativeRange();\n    // Browser may push down styles/nodes inside the cursor blot.\n    // https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#push-down-values\n    while (\n      this.domNode.lastChild != null &&\n      this.domNode.lastChild !== this.textNode\n    ) {\n      // @ts-expect-error Fix me later\n      this.domNode.parentNode.insertBefore(\n        this.domNode.lastChild,\n        this.domNode,\n      );\n    }\n\n    const prevTextBlot = this.prev instanceof TextBlot ? this.prev : null;\n    const prevTextLength = prevTextBlot ? prevTextBlot.length() : 0;\n    const nextTextBlot = this.next instanceof TextBlot ? this.next : null;\n    // @ts-expect-error TODO: make TextBlot.text public\n    const nextText = nextTextBlot ? nextTextBlot.text : '';\n    const { textNode } = this;\n    // take text from inside this blot and reset it\n    const newText = textNode.data.split(Cursor.CONTENTS).join('');\n    textNode.data = Cursor.CONTENTS;\n\n    // proactively merge TextBlots around cursor so that optimization\n    // doesn't lose the cursor.  the reason we are here in cursor.restore\n    // could be that the user clicked in prevTextBlot or nextTextBlot, or\n    // the user typed something.\n    let mergedTextBlot;\n    if (prevTextBlot) {\n      mergedTextBlot = prevTextBlot;\n      if (newText || nextTextBlot) {\n        prevTextBlot.insertAt(prevTextBlot.length(), newText + nextText);\n        if (nextTextBlot) {\n          nextTextBlot.remove();\n        }\n      }\n    } else if (nextTextBlot) {\n      mergedTextBlot = nextTextBlot;\n      nextTextBlot.insertAt(0, newText);\n    } else {\n      const newTextNode = document.createTextNode(newText);\n      mergedTextBlot = this.scroll.create(newTextNode);\n      this.parent.insertBefore(mergedTextBlot, this);\n    }\n\n    this.remove();\n    if (range) {\n      // calculate selection to restore\n      const remapOffset = (node: Node, offset: number) => {\n        if (prevTextBlot && node === prevTextBlot.domNode) {\n          return offset;\n        }\n        if (node === textNode) {\n          return prevTextLength + offset - 1;\n        }\n        if (nextTextBlot && node === nextTextBlot.domNode) {\n          return prevTextLength + newText.length + offset;\n        }\n        return null;\n      };\n\n      const start = remapOffset(range.start.node, range.start.offset);\n      const end = remapOffset(range.end.node, range.end.offset);\n      if (start !== null && end !== null) {\n        return {\n          startNode: mergedTextBlot.domNode,\n          startOffset: start,\n          endNode: mergedTextBlot.domNode,\n          endOffset: end,\n        };\n      }\n    }\n    return null;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.textNode\n        );\n      })\n    ) {\n      const range = this.restore();\n      if (range) context.range = range;\n    }\n  }\n\n  // Avoid .ql-cursor being a descendant of `<a/>`.\n  // The reason is Safari pushes down `<a/>` on text insertion.\n  // That will cause DOM nodes not sync with the model.\n  //\n  // For example ({I} is the caret), given the markup:\n  //    <a><span class=\"ql-cursor\">\\uFEFF{I}</span></a>\n  // When typing a char \"x\", `<a/>` will be pushed down inside the `<span>` first:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF{I}</a></span>\n  // And then \"x\" will be inserted after `<a/>`:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF</a>d{I}</span>\n  optimize(context?: unknown) {\n    // @ts-expect-error Fix me later\n    super.optimize(context);\n\n    let { parent } = this;\n    while (parent) {\n      if (parent.domNode.tagName === 'A') {\n        this.savedLength = Cursor.CONTENTS.length;\n        // @ts-expect-error TODO: make isolate generic\n        parent.isolate(this.offset(parent), this.length()).unwrap();\n        this.savedLength = 0;\n        break;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  value() {\n    return '';\n  }\n}\n\nexport default Cursor;\n", "import type { ScrollBlot } from 'parchment';\nimport { EmbedBlot } from 'parchment';\nimport TextBlot from './text.js';\n\nconst GUARD_TEXT = '\\uFEFF';\n\nexport interface EmbedContextRange {\n  startNode: Node | Text;\n  startOffset: number;\n  endNode?: Node | Text;\n  endOffset?: number;\n}\n\nclass Embed extends EmbedBlot {\n  contentNode: HTMLSpanElement;\n  leftGuard: Text;\n  rightGuard: Text;\n\n  constructor(scroll: ScrollBlot, node: Node) {\n    super(scroll, node);\n    this.contentNode = document.createElement('span');\n    this.contentNode.setAttribute('contenteditable', 'false');\n    Array.from(this.domNode.childNodes).forEach((childNode) => {\n      this.contentNode.appendChild(childNode);\n    });\n    this.leftGuard = document.createTextNode(GUARD_TEXT);\n    this.rightGuard = document.createTextNode(GUARD_TEXT);\n    this.domNode.appendChild(this.leftGuard);\n    this.domNode.appendChild(this.contentNode);\n    this.domNode.appendChild(this.rightGuard);\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.leftGuard) return 0;\n    if (node === this.rightGuard) return 1;\n    return super.index(node, offset);\n  }\n\n  restore(node: Text): EmbedContextRange | null {\n    let range: EmbedContextRange | null = null;\n    let textNode: Text;\n    const text = node.data.split(GUARD_TEXT).join('');\n    if (node === this.leftGuard) {\n      if (this.prev instanceof TextBlot) {\n        const prevLength = this.prev.length();\n        this.prev.insertAt(prevLength, text);\n        range = {\n          startNode: this.prev.domNode,\n          startOffset: prevLength + text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    } else if (node === this.rightGuard) {\n      if (this.next instanceof TextBlot) {\n        this.next.insertAt(0, text);\n        range = {\n          startNode: this.next.domNode,\n          startOffset: text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this.next);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    }\n    node.data = GUARD_TEXT;\n    return range;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    mutations.forEach((mutation) => {\n      if (\n        mutation.type === 'characterData' &&\n        (mutation.target === this.leftGuard ||\n          mutation.target === this.rightGuard)\n      ) {\n        const range = this.restore(mutation.target as Text);\n        if (range) context.range = range;\n      }\n    });\n  }\n}\n\nexport default Embed;\n", "import { EmbedBlot, InlineBlot, Scope } from 'parchment';\nimport type { BlotConstructor } from 'parchment';\nimport Break from './break.js';\nimport Text from './text.js';\n\nclass Inline extends InlineBlot {\n  static allowedChildren: BlotConstructor[] = [Inline, Break, EmbedBlot, Text];\n  // Lower index means deeper in the DOM tree, since not found (-1) is for embeds\n  static order = [\n    'cursor',\n    'inline', // Must be lower\n    'link', // Chrome wants <a> to be lower\n    'underline',\n    'strike',\n    'italic',\n    'bold',\n    'script',\n    'code', // Must be higher\n  ];\n\n  static compare(self: string, other: string) {\n    const selfIndex = Inline.order.indexOf(self);\n    const otherIndex = Inline.order.indexOf(other);\n    if (selfIndex >= 0 || otherIndex >= 0) {\n      return selfIndex - otherIndex;\n    }\n    if (self === other) {\n      return 0;\n    }\n    if (self < other) {\n      return -1;\n    }\n    return 1;\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (\n      Inline.compare(this.statics.blotName, name) < 0 &&\n      this.scroll.query(name, Scope.BLOT)\n    ) {\n      const blot = this.isolate(index, length);\n      if (value) {\n        blot.wrap(name, value);\n      }\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (\n      this.parent instanceof Inline &&\n      Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0\n    ) {\n      const parent = this.parent.isolate(this.offset(), this.length());\n      // @ts-expect-error TODO: make isolate generic\n      this.moveChildren(parent);\n      parent.wrap(this);\n    }\n  }\n}\n\nexport default Inline;\n", "import { TextBlot } from 'parchment';\n\nclass Text extends TextBlot {}\n\n// https://lodash.com/docs#escape\nconst entityMap: Record<string, string> = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\n\nfunction escapeText(text: string) {\n  return text.replace(/[&<>\"']/g, (s) => entityMap[s]);\n}\n\nexport { Text as default, escapeText };\n", "import { ContainerBlot, LeafBlot, Scope, ScrollBlot } from 'parchment';\nimport type { Blot, Parent, EmbedBlot, ParentBlot, Registry } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta';\nimport Emitter from '../core/emitter.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport Block, { BlockEmbed, bubbleFormats } from './block.js';\nimport Break from './break.js';\nimport Container from './container.js';\n\ntype RenderBlock =\n  | {\n      type: 'blockEmbed';\n      attributes: AttributeMap;\n      key: string;\n      value: unknown;\n    }\n  | { type: 'block'; attributes: AttributeMap; delta: Delta };\n\nfunction isLine(blot: unknown): blot is Block | BlockEmbed {\n  return blot instanceof Block || blot instanceof BlockEmbed;\n}\n\ninterface UpdatableEmbed {\n  updateContent(change: unknown): void;\n}\n\nfunction isUpdatable(blot: Blot): blot is Blot & UpdatableEmbed {\n  return typeof (blot as unknown as any).updateContent === 'function';\n}\n\nclass Scroll extends ScrollBlot {\n  static blotName = 'scroll';\n  static className = 'ql-editor';\n  static tagName = 'DIV';\n  static defaultChild = Block;\n  static allowedChildren = [Block, BlockEmbed, Container];\n\n  emitter: Emitter;\n  batch: false | MutationRecord[];\n\n  constructor(\n    registry: Registry,\n    domNode: HTMLDivElement,\n    { emitter }: { emitter: Emitter },\n  ) {\n    super(registry, domNode);\n    this.emitter = emitter;\n    this.batch = false;\n    this.optimize();\n    this.enable();\n    this.domNode.addEventListener('dragstart', (e) => this.handleDragStart(e));\n  }\n\n  batchStart() {\n    if (!Array.isArray(this.batch)) {\n      this.batch = [];\n    }\n  }\n\n  batchEnd() {\n    if (!this.batch) return;\n    const mutations = this.batch;\n    this.batch = false;\n    this.update(mutations);\n  }\n\n  emitMount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_MOUNT, blot);\n  }\n\n  emitUnmount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_UNMOUNT, blot);\n  }\n\n  emitEmbedUpdate(blot: Blot, change: unknown) {\n    this.emitter.emit(Emitter.events.SCROLL_EMBED_UPDATE, blot, change);\n  }\n\n  deleteAt(index: number, length: number) {\n    const [first, offset] = this.line(index);\n    const [last] = this.line(index + length);\n    super.deleteAt(index, length);\n    if (last != null && first !== last && offset > 0) {\n      if (first instanceof BlockEmbed || last instanceof BlockEmbed) {\n        this.optimize();\n        return;\n      }\n      const ref =\n        last.children.head instanceof Break ? null : last.children.head;\n      // @ts-expect-error\n      first.moveChildren(last, ref);\n      // @ts-expect-error\n      first.remove();\n    }\n    this.optimize();\n  }\n\n  enable(enabled = true) {\n    this.domNode.setAttribute('contenteditable', enabled ? 'true' : 'false');\n  }\n\n  formatAt(index: number, length: number, format: string, value: unknown) {\n    super.formatAt(index, length, format, value);\n    this.optimize();\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (index >= this.length()) {\n      if (def == null || this.scroll.query(value, Scope.BLOCK) == null) {\n        const blot = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(blot);\n        if (def == null && value.endsWith('\\n')) {\n          blot.insertAt(0, value.slice(0, -1), def);\n        } else {\n          blot.insertAt(0, value, def);\n        }\n      } else {\n        const embed = this.scroll.create(value, def);\n        this.appendChild(embed);\n      }\n    } else {\n      super.insertAt(index, value, def);\n    }\n    this.optimize();\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    if (blot.statics.scope === Scope.INLINE_BLOT) {\n      const wrapper = this.scroll.create(\n        this.statics.defaultChild.blotName,\n      ) as Parent;\n      wrapper.appendChild(blot);\n      super.insertBefore(wrapper, ref);\n    } else {\n      super.insertBefore(blot, ref);\n    }\n  }\n\n  insertContents(index: number, delta: Delta) {\n    const renderBlocks = this.deltaToRenderBlocks(\n      delta.concat(new Delta().insert('\\n')),\n    );\n    const last = renderBlocks.pop();\n    if (last == null) return;\n\n    this.batchStart();\n\n    const first = renderBlocks.shift();\n    if (first) {\n      const shouldInsertNewlineChar =\n        first.type === 'block' &&\n        (first.delta.length() === 0 ||\n          (!this.descendant(BlockEmbed, index)[0] && index < this.length()));\n      const delta =\n        first.type === 'block'\n          ? first.delta\n          : new Delta().insert({ [first.key]: first.value });\n      insertInlineContents(this, index, delta);\n      const newlineCharLength = first.type === 'block' ? 1 : 0;\n      const lineEndIndex = index + delta.length() + newlineCharLength;\n      if (shouldInsertNewlineChar) {\n        this.insertAt(lineEndIndex - 1, '\\n');\n      }\n\n      const formats = bubbleFormats(this.line(index)[0]);\n      const attributes = AttributeMap.diff(formats, first.attributes) || {};\n      Object.keys(attributes).forEach((name) => {\n        this.formatAt(lineEndIndex - 1, 1, name, attributes[name]);\n      });\n\n      index = lineEndIndex;\n    }\n\n    let [refBlot, refBlotOffset] = this.children.find(index);\n    if (renderBlocks.length) {\n      if (refBlot) {\n        refBlot = refBlot.split(refBlotOffset);\n        refBlotOffset = 0;\n      }\n\n      renderBlocks.forEach((renderBlock) => {\n        if (renderBlock.type === 'block') {\n          const block = this.createBlock(\n            renderBlock.attributes,\n            refBlot || undefined,\n          );\n          insertInlineContents(block, 0, renderBlock.delta);\n        } else {\n          const blockEmbed = this.create(\n            renderBlock.key,\n            renderBlock.value,\n          ) as EmbedBlot;\n          this.insertBefore(blockEmbed, refBlot || undefined);\n          Object.keys(renderBlock.attributes).forEach((name) => {\n            blockEmbed.format(name, renderBlock.attributes[name]);\n          });\n        }\n      });\n    }\n\n    if (last.type === 'block' && last.delta.length()) {\n      const offset = refBlot\n        ? refBlot.offset(refBlot.scroll) + refBlotOffset\n        : this.length();\n      insertInlineContents(this, offset, last.delta);\n    }\n\n    this.batchEnd();\n    this.optimize();\n  }\n\n  isEnabled() {\n    return this.domNode.getAttribute('contenteditable') === 'true';\n  }\n\n  leaf(index: number): [LeafBlot | null, number] {\n    const last = this.path(index).pop();\n    if (!last) {\n      return [null, -1];\n    }\n\n    const [blot, offset] = last;\n    return blot instanceof LeafBlot ? [blot, offset] : [null, -1];\n  }\n\n  line(index: number): [Block | BlockEmbed | null, number] {\n    if (index === this.length()) {\n      return this.line(index - 1);\n    }\n    // @ts-expect-error TODO: make descendant() generic\n    return this.descendant(isLine, index);\n  }\n\n  lines(index = 0, length = Number.MAX_VALUE): (Block | BlockEmbed)[] {\n    const getLines = (\n      blot: ParentBlot,\n      blotIndex: number,\n      blotLength: number,\n    ) => {\n      let lines: (Block | BlockEmbed)[] = [];\n      let lengthLeft = blotLength;\n      blot.children.forEachAt(\n        blotIndex,\n        blotLength,\n        (child, childIndex, childLength) => {\n          if (isLine(child)) {\n            lines.push(child);\n          } else if (child instanceof ContainerBlot) {\n            lines = lines.concat(getLines(child, childIndex, lengthLeft));\n          }\n          lengthLeft -= childLength;\n        },\n      );\n      return lines;\n    };\n    return getLines(this, index, length);\n  }\n\n  optimize(context?: { [key: string]: any }): void;\n  optimize(\n    mutations?: MutationRecord[],\n    context?: { [key: string]: any },\n  ): void;\n  optimize(mutations = [], context = {}) {\n    if (this.batch) return;\n    super.optimize(mutations, context);\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_OPTIMIZE, mutations, context);\n    }\n  }\n\n  path(index: number) {\n    return super.path(index).slice(1); // Exclude self\n  }\n\n  remove() {\n    // Never remove self\n  }\n\n  update(source?: EmitterSource): void;\n  update(mutations?: MutationRecord[]): void;\n  update(mutations?: MutationRecord[] | EmitterSource): void {\n    if (this.batch) {\n      if (Array.isArray(mutations)) {\n        this.batch = this.batch.concat(mutations);\n      }\n      return;\n    }\n    let source: EmitterSource = Emitter.sources.USER;\n    if (typeof mutations === 'string') {\n      source = mutations;\n    }\n    if (!Array.isArray(mutations)) {\n      mutations = this.observer.takeRecords();\n    }\n    mutations = mutations.filter(({ target }) => {\n      const blot = this.find(target, true);\n      return blot && !isUpdatable(blot);\n    });\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_BEFORE_UPDATE, source, mutations);\n    }\n    super.update(mutations.concat([])); // pass copy\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_UPDATE, source, mutations);\n    }\n  }\n\n  updateEmbedAt(index: number, key: string, change: unknown) {\n    // Currently it only supports top-level embeds (BlockEmbed).\n    // We can update `ParentBlot` in parchment to support inline embeds.\n    const [blot] = this.descendant((b: Blot) => b instanceof BlockEmbed, index);\n    if (blot && blot.statics.blotName === key && isUpdatable(blot)) {\n      blot.updateContent(change);\n    }\n  }\n\n  protected handleDragStart(event: DragEvent) {\n    event.preventDefault();\n  }\n\n  private deltaToRenderBlocks(delta: Delta) {\n    const renderBlocks: RenderBlock[] = [];\n\n    let currentBlockDelta = new Delta();\n    delta.forEach((op) => {\n      const insert = op?.insert;\n      if (!insert) return;\n      if (typeof insert === 'string') {\n        const splitted = insert.split('\\n');\n        splitted.slice(0, -1).forEach((text) => {\n          currentBlockDelta.insert(text, op.attributes);\n          renderBlocks.push({\n            type: 'block',\n            delta: currentBlockDelta,\n            attributes: op.attributes ?? {},\n          });\n          currentBlockDelta = new Delta();\n        });\n        const last = splitted[splitted.length - 1];\n        if (last) {\n          currentBlockDelta.insert(last, op.attributes);\n        }\n      } else {\n        const key = Object.keys(insert)[0];\n        if (!key) return;\n        if (this.query(key, Scope.INLINE)) {\n          currentBlockDelta.push(op);\n        } else {\n          if (currentBlockDelta.length()) {\n            renderBlocks.push({\n              type: 'block',\n              delta: currentBlockDelta,\n              attributes: {},\n            });\n          }\n          currentBlockDelta = new Delta();\n          renderBlocks.push({\n            type: 'blockEmbed',\n            key,\n            value: insert[key],\n            attributes: op.attributes ?? {},\n          });\n        }\n      }\n    });\n\n    if (currentBlockDelta.length()) {\n      renderBlocks.push({\n        type: 'block',\n        delta: currentBlockDelta,\n        attributes: {},\n      });\n    }\n\n    return renderBlocks;\n  }\n\n  private createBlock(attributes: AttributeMap, refBlot?: Blot) {\n    let blotName: string | undefined;\n    const formats: AttributeMap = {};\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      const isBlockBlot = this.query(key, Scope.BLOCK & Scope.BLOT) != null;\n      if (isBlockBlot) {\n        blotName = key;\n      } else {\n        formats[key] = value;\n      }\n    });\n\n    const block = this.create(\n      blotName || this.statics.defaultChild.blotName,\n      blotName ? attributes[blotName] : undefined,\n    ) as ParentBlot;\n\n    this.insertBefore(block, refBlot || undefined);\n\n    const length = block.length();\n    Object.entries(formats).forEach(([key, value]) => {\n      block.formatAt(0, length, key, value);\n    });\n\n    return block;\n  }\n}\n\nfunction insertInlineContents(\n  parent: ParentBlot,\n  index: number,\n  inlineContents: Delta,\n) {\n  inlineContents.reduce((index, op) => {\n    const length = Op.length(op);\n    let attributes = op.attributes || {};\n    if (op.insert != null) {\n      if (typeof op.insert === 'string') {\n        const text = op.insert;\n        parent.insertAt(index, text);\n        const [leaf] = parent.descendant(LeafBlot, index);\n        const formats = bubbleFormats(leaf);\n        attributes = AttributeMap.diff(formats, attributes) || {};\n      } else if (typeof op.insert === 'object') {\n        const key = Object.keys(op.insert)[0]; // There should only be one key\n        if (key == null) return index;\n        parent.insertAt(index, key, op.insert[key]);\n        const isInlineEmbed = parent.scroll.query(key, Scope.INLINE) != null;\n        if (isInlineEmbed) {\n          const [leaf] = parent.descendant(LeafBlot, index);\n          const formats = bubbleFormats(leaf);\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        }\n      }\n    }\n    Object.keys(attributes).forEach((key) => {\n      parent.formatAt(index, length, key, attributes[key]);\n    });\n    return index + length;\n  }, index);\n}\n\nexport default Scroll;\n", "import { Scope } from 'parchment';\nimport type Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type Scroll from '../blots/scroll.js';\nimport type { Range } from '../core/selection.js';\n\nexport interface HistoryOptions {\n  userOnly: boolean;\n  delay: number;\n  maxStack: number;\n}\n\nexport interface StackItem {\n  delta: Delta;\n  range: Range | null;\n}\n\ninterface Stack {\n  undo: StackItem[];\n  redo: StackItem[];\n}\n\nclass History extends Module<HistoryOptions> {\n  static DEFAULTS: HistoryOptions = {\n    delay: 1000,\n    maxStack: 100,\n    userOnly: false,\n  };\n\n  lastRecorded = 0;\n  ignoreChange = false;\n  stack: Stack = { undo: [], redo: [] };\n  currentRange: Range | null = null;\n\n  constructor(quill: Quill, options: Partial<HistoryOptions>) {\n    super(quill, options);\n    this.quill.on(\n      Quill.events.EDITOR_CHANGE,\n      (eventName, value, oldValue, source) => {\n        if (eventName === Quill.events.SELECTION_CHANGE) {\n          if (value && source !== Quill.sources.SILENT) {\n            this.currentRange = value;\n          }\n        } else if (eventName === Quill.events.TEXT_CHANGE) {\n          if (!this.ignoreChange) {\n            if (!this.options.userOnly || source === Quill.sources.USER) {\n              this.record(value, oldValue);\n            } else {\n              this.transform(value);\n            }\n          }\n\n          this.currentRange = transformRange(this.currentRange, value);\n        }\n      },\n    );\n\n    this.quill.keyboard.addBinding(\n      { key: 'z', shortKey: true },\n      this.undo.bind(this),\n    );\n    this.quill.keyboard.addBinding(\n      { key: ['z', 'Z'], shortKey: true, shiftKey: true },\n      this.redo.bind(this),\n    );\n    if (/Win/i.test(navigator.platform)) {\n      this.quill.keyboard.addBinding(\n        { key: 'y', shortKey: true },\n        this.redo.bind(this),\n      );\n    }\n\n    this.quill.root.addEventListener('beforeinput', (event) => {\n      if (event.inputType === 'historyUndo') {\n        this.undo();\n        event.preventDefault();\n      } else if (event.inputType === 'historyRedo') {\n        this.redo();\n        event.preventDefault();\n      }\n    });\n  }\n\n  change(source: 'undo' | 'redo', dest: 'redo' | 'undo') {\n    if (this.stack[source].length === 0) return;\n    const item = this.stack[source].pop();\n    if (!item) return;\n    const base = this.quill.getContents();\n    const inverseDelta = item.delta.invert(base);\n    this.stack[dest].push({\n      delta: inverseDelta,\n      range: transformRange(item.range, inverseDelta),\n    });\n    this.lastRecorded = 0;\n    this.ignoreChange = true;\n    this.quill.updateContents(item.delta, Quill.sources.USER);\n    this.ignoreChange = false;\n\n    this.restoreSelection(item);\n  }\n\n  clear() {\n    this.stack = { undo: [], redo: [] };\n  }\n\n  cutoff() {\n    this.lastRecorded = 0;\n  }\n\n  record(changeDelta: Delta, oldDelta: Delta) {\n    if (changeDelta.ops.length === 0) return;\n    this.stack.redo = [];\n    let undoDelta = changeDelta.invert(oldDelta);\n    let undoRange = this.currentRange;\n    const timestamp = Date.now();\n    if (\n      // @ts-expect-error Fix me later\n      this.lastRecorded + this.options.delay > timestamp &&\n      this.stack.undo.length > 0\n    ) {\n      const item = this.stack.undo.pop();\n      if (item) {\n        undoDelta = undoDelta.compose(item.delta);\n        undoRange = item.range;\n      }\n    } else {\n      this.lastRecorded = timestamp;\n    }\n    if (undoDelta.length() === 0) return;\n    this.stack.undo.push({ delta: undoDelta, range: undoRange });\n    // @ts-expect-error Fix me later\n    if (this.stack.undo.length > this.options.maxStack) {\n      this.stack.undo.shift();\n    }\n  }\n\n  redo() {\n    this.change('redo', 'undo');\n  }\n\n  transform(delta: Delta) {\n    transformStack(this.stack.undo, delta);\n    transformStack(this.stack.redo, delta);\n  }\n\n  undo() {\n    this.change('undo', 'redo');\n  }\n\n  protected restoreSelection(stackItem: StackItem) {\n    if (stackItem.range) {\n      this.quill.setSelection(stackItem.range, Quill.sources.USER);\n    } else {\n      const index = getLastChangeIndex(this.quill.scroll, stackItem.delta);\n      this.quill.setSelection(index, Quill.sources.USER);\n    }\n  }\n}\n\nfunction transformStack(stack: StackItem[], delta: Delta) {\n  let remoteDelta = delta;\n  for (let i = stack.length - 1; i >= 0; i -= 1) {\n    const oldItem = stack[i];\n    stack[i] = {\n      delta: remoteDelta.transform(oldItem.delta, true),\n      range: oldItem.range && transformRange(oldItem.range, remoteDelta),\n    };\n    remoteDelta = oldItem.delta.transform(remoteDelta);\n    if (stack[i].delta.length() === 0) {\n      stack.splice(i, 1);\n    }\n  }\n}\n\nfunction endsWithNewlineChange(scroll: Scroll, delta: Delta) {\n  const lastOp = delta.ops[delta.ops.length - 1];\n  if (lastOp == null) return false;\n  if (lastOp.insert != null) {\n    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\n');\n  }\n  if (lastOp.attributes != null) {\n    return Object.keys(lastOp.attributes).some((attr) => {\n      return scroll.query(attr, Scope.BLOCK) != null;\n    });\n  }\n  return false;\n}\n\nfunction getLastChangeIndex(scroll: Scroll, delta: Delta) {\n  const deleteLength = delta.reduce((length, op) => {\n    return length + (op.delete || 0);\n  }, 0);\n  let changeIndex = delta.length() - deleteLength;\n  if (endsWithNewlineChange(scroll, delta)) {\n    changeIndex -= 1;\n  }\n  return changeIndex;\n}\n\nfunction transformRange(range: Range | null, delta: Delta) {\n  if (!range) return range;\n  const start = delta.transformPosition(range.index);\n  const end = delta.transformPosition(range.index + range.length);\n  return { index: start, length: end - start };\n}\n\nexport { History as default, getLastChangeIndex };\n", "import Delta from 'quill-delta';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\ninterface UploaderOptions {\n  mimetypes: string[];\n  handler: (this: { quill: Quill }, range: Range, files: File[]) => void;\n}\n\nclass Uploader extends Module<UploaderOptions> {\n  static DEFAULTS: UploaderOptions;\n\n  constructor(quill: Quill, options: Partial<UploaderOptions>) {\n    super(quill, options);\n    quill.root.addEventListener('drop', (e) => {\n      e.preventDefault();\n      let native: ReturnType<typeof document.createRange> | null = null;\n      if (document.caretRangeFromPoint) {\n        native = document.caretRangeFromPoint(e.clientX, e.clientY);\n        // @ts-expect-error\n      } else if (document.caretPositionFromPoint) {\n        // @ts-expect-error\n        const position = document.caretPositionFromPoint(e.clientX, e.clientY);\n        native = document.createRange();\n        native.setStart(position.offsetNode, position.offset);\n        native.setEnd(position.offsetNode, position.offset);\n      }\n\n      const normalized = native && quill.selection.normalizeNative(native);\n      if (normalized) {\n        const range = quill.selection.normalizedToRange(normalized);\n        if (e.dataTransfer?.files) {\n          this.upload(range, e.dataTransfer.files);\n        }\n      }\n    });\n  }\n\n  upload(range: Range, files: FileList | File[]) {\n    const uploads: File[] = [];\n    Array.from(files).forEach((file) => {\n      if (file && this.options.mimetypes?.includes(file.type)) {\n        uploads.push(file);\n      }\n    });\n    if (uploads.length > 0) {\n      // @ts-expect-error Fix me later\n      this.options.handler.call(this, range, uploads);\n    }\n  }\n}\n\nUploader.DEFAULTS = {\n  mimetypes: ['image/png', 'image/jpeg'],\n  handler(range: Range, files: File[]) {\n    if (!this.quill.scroll.query('image')) {\n      return;\n    }\n    const promises = files.map<Promise<string>>((file) => {\n      return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result as string);\n        };\n        reader.readAsDataURL(file);\n      });\n    });\n    Promise.all(promises).then((images) => {\n      const update = images.reduce((delta: Delta, image) => {\n        return delta.insert({ image });\n      }, new Delta().retain(range.index).delete(range.length)) as Delta;\n      this.quill.updateContents(update, Emitter.sources.USER);\n      this.quill.setSelection(\n        range.index + images.length,\n        Emitter.sources.SILENT,\n      );\n    });\n  },\n};\n\nexport default Uploader;\n", "import Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { deleteRange } from './keyboard.js';\n\nconst INSERT_TYPES = ['insertText', 'insertReplacementText'];\n\nclass Input extends Module {\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    quill.root.addEventListener('beforeinput', (event) => {\n      this.handleBeforeInput(event);\n    });\n\n    // Gboard with English input on Android triggers `compositionstart` sometimes even\n    // users are not going to type anything.\n    if (!/Android/i.test(navigator.userAgent)) {\n      quill.on(Quill.events.COMPOSITION_BEFORE_START, () => {\n        this.handleCompositionStart();\n      });\n    }\n  }\n\n  private deleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n  }\n\n  private replaceText(range: Range, text = '') {\n    if (range.length === 0) return false;\n\n    if (text) {\n      // Follow the native behavior that inherits the formats of the first character\n      const formats = this.quill.getFormat(range.index, 1);\n      this.deleteRange(range);\n      this.quill.updateContents(\n        new Delta().retain(range.index).insert(text, formats),\n        Quill.sources.USER,\n      );\n    } else {\n      this.deleteRange(range);\n    }\n\n    this.quill.setSelection(range.index + text.length, 0, Quill.sources.SILENT);\n    return true;\n  }\n\n  private handleBeforeInput(event: InputEvent) {\n    if (\n      this.quill.composition.isComposing ||\n      event.defaultPrevented ||\n      !INSERT_TYPES.includes(event.inputType)\n    ) {\n      return;\n    }\n\n    const staticRange = event.getTargetRanges\n      ? event.getTargetRanges()[0]\n      : null;\n    if (!staticRange || staticRange.collapsed === true) {\n      return;\n    }\n\n    const text = getPlainTextFromInputEvent(event);\n    if (text == null) {\n      return;\n    }\n    const normalized = this.quill.selection.normalizeNative(staticRange);\n    const range = normalized\n      ? this.quill.selection.normalizedToRange(normalized)\n      : null;\n    if (range && this.replaceText(range, text)) {\n      event.preventDefault();\n    }\n  }\n\n  private handleCompositionStart() {\n    const range = this.quill.getSelection();\n    if (range) {\n      this.replaceText(range);\n    }\n  }\n}\n\nfunction getPlainTextFromInputEvent(event: InputEvent) {\n  // When `inputType` is \"insertText\":\n  // - `event.data` should be string (Safari uses `event.dataTransfer`).\n  // - `event.dataTransfer` should be null.\n  // When `inputType` is \"insertReplacementText\":\n  // - `event.data` should be null.\n  // - `event.dataTransfer` should contain \"text/plain\" data.\n\n  if (typeof event.data === 'string') {\n    return event.data;\n  }\n  if (event.dataTransfer?.types.includes('text/plain')) {\n    return event.dataTransfer.getData('text/plain');\n  }\n  return null;\n}\n\nexport default Input;\n", "import { ParentBlot } from 'parchment';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\n\nconst isMac = /Mac/i.test(navigator.platform);\n\n// Export for testing\nexport const TTL_FOR_VALID_SELECTION_CHANGE = 100;\n\n// A loose check to determine if the shortcut can move the caret before a UI node:\n// <ANY_PARENT>[CARET]<div class=\"ql-ui\"></div>[CONTENT]</ANY_PARENT>\nconst canMoveCaretBeforeUINode = (event: KeyboardEvent) => {\n  if (\n    event.key === 'ArrowLeft' ||\n    event.key === 'ArrowRight' || // RTL scripts or moving from the end of the previous line\n    event.key === 'ArrowUp' ||\n    event.key === 'ArrowDown' ||\n    event.key === 'Home'\n  ) {\n    return true;\n  }\n\n  if (isMac && event.key === 'a' && event.ctrlKey === true) {\n    return true;\n  }\n\n  return false;\n};\n\nclass UINode extends Module {\n  isListening = false;\n  selectionChangeDeadline = 0;\n\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    this.handleArrowKeys();\n    this.handleNavigationShortcuts();\n  }\n\n  private handleArrowKeys() {\n    this.quill.keyboard.addBinding({\n      key: ['ArrowLeft', 'ArrowRight'],\n      offset: 0,\n      shiftKey: null,\n      handler(range, { line, event }) {\n        if (!(line instanceof ParentBlot) || !line.uiNode) {\n          return true;\n        }\n\n        const isRTL = getComputedStyle(line.domNode)['direction'] === 'rtl';\n        if (\n          (isRTL && event.key !== 'ArrowRight') ||\n          (!isRTL && event.key !== 'ArrowLeft')\n        ) {\n          return true;\n        }\n\n        this.quill.setSelection(\n          range.index - 1,\n          range.length + (event.shiftKey ? 1 : 0),\n          Quill.sources.USER,\n        );\n        return false;\n      },\n    });\n  }\n\n  private handleNavigationShortcuts() {\n    this.quill.root.addEventListener('keydown', (event) => {\n      if (!event.defaultPrevented && canMoveCaretBeforeUINode(event)) {\n        this.ensureListeningToSelectionChange();\n      }\n    });\n  }\n\n  /**\n   * We only listen to the `selectionchange` event when\n   * there is an intention of moving the caret to the beginning using shortcuts.\n   * This is primarily implemented to prevent infinite loops, as we are changing\n   * the selection within the handler of a `selectionchange` event.\n   */\n  private ensureListeningToSelectionChange() {\n    this.selectionChangeDeadline = Date.now() + TTL_FOR_VALID_SELECTION_CHANGE;\n\n    if (this.isListening) return;\n    this.isListening = true;\n\n    const listener = () => {\n      this.isListening = false;\n\n      if (Date.now() <= this.selectionChangeDeadline) {\n        this.handleSelectionChange();\n      }\n    };\n\n    document.addEventListener('selectionchange', listener, {\n      once: true,\n    });\n  }\n\n  private handleSelectionChange() {\n    const selection = document.getSelection();\n    if (!selection) return;\n    const range = selection.getRangeAt(0);\n    if (range.collapsed !== true || range.startOffset !== 0) return;\n\n    const line = this.quill.scroll.find(range.startContainer);\n    if (!(line instanceof ParentBlot) || !line.uiNode) return;\n\n    const newRange = document.createRange();\n    newRange.setStartAfter(line.uiNode);\n    newRange.setEndAfter(line.uiNode);\n    selection.removeAllRanges();\n    selection.addRange(newRange);\n  }\n}\n\nexport default UINode;\n", "import Quill, { Parchment, Range } from './core/quill.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core/quill.js';\n\nimport Block, { BlockEmbed } from './blots/block.js';\nimport Break from './blots/break.js';\nimport Container from './blots/container.js';\nimport Cursor from './blots/cursor.js';\nimport Embed from './blots/embed.js';\nimport Inline from './blots/inline.js';\nimport Scroll from './blots/scroll.js';\nimport TextBlot from './blots/text.js';\n\nimport Clipboard from './modules/clipboard.js';\nimport History from './modules/history.js';\nimport Keyboard from './modules/keyboard.js';\nimport Uploader from './modules/uploader.js';\nimport Delta, { Op, OpIterator, AttributeMap } from 'quill-delta';\nimport Input from './modules/input.js';\nimport UINode from './modules/uiNode.js';\n\nexport { default as Module } from './core/module.js';\nexport { Delta, Op, OpIterator, AttributeMap, Parchment, Range };\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\n\nQuill.register({\n  'blots/block': Block,\n  'blots/block/embed': BlockEmbed,\n  'blots/break': Break,\n  'blots/container': Container,\n  'blots/cursor': Cursor,\n  'blots/embed': Embed,\n  'blots/inline': Inline,\n  'blots/scroll': Scroll,\n  'blots/text': TextBlot,\n\n  'modules/clipboard': Clipboard,\n  'modules/history': History,\n  'modules/keyboard': Keyboard,\n  'modules/uploader': Uploader,\n  'modules/input': Input,\n  'modules/uiNode': UINode,\n});\n\nexport default Quill;\n", "import { EventEmitter } from 'eventemitter3';\nimport instances from './instances.js';\nimport logger from './logger.js';\n\nconst debug = logger('quill:events');\nconst EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];\n\nEVENTS.forEach((eventName) => {\n  document.addEventListener(eventName, (...args) => {\n    Array.from(document.querySelectorAll('.ql-container')).forEach((node) => {\n      const quill = instances.get(node);\n      if (quill && quill.emitter) {\n        quill.emitter.handleDOM(...args);\n      }\n    });\n  });\n});\n\nclass Emitter extends EventEmitter<string> {\n  static events = {\n    EDITOR_CHANGE: 'editor-change',\n    SCROLL_BEFORE_UPDATE: 'scroll-before-update',\n    SCROLL_BLOT_MOUNT: 'scroll-blot-mount',\n    SCROLL_BLOT_UNMOUNT: 'scroll-blot-unmount',\n    SCROLL_OPTIMIZE: 'scroll-optimize',\n    SCROLL_UPDATE: 'scroll-update',\n    SCROLL_EMBED_UPDATE: 'scroll-embed-update',\n    SELECTION_CHANGE: 'selection-change',\n    TEXT_CHANGE: 'text-change',\n    COMPOSITION_BEFORE_START: 'composition-before-start',\n    COMPOSITION_START: 'composition-start',\n    COMPOSITION_BEFORE_END: 'composition-before-end',\n    COMPOSITION_END: 'composition-end',\n  } as const;\n\n  static sources = {\n    API: 'api',\n    SILENT: 'silent',\n    USER: 'user',\n  } as const;\n\n  protected domListeners: Record<string, { node: Node; handler: Function }[]>;\n\n  constructor() {\n    super();\n    this.domListeners = {};\n    this.on('error', debug.error);\n  }\n\n  emit(...args: unknown[]): boolean {\n    debug.log.call(debug, ...args);\n    // @ts-expect-error\n    return super.emit(...args);\n  }\n\n  handleDOM(event: Event, ...args: unknown[]) {\n    (this.domListeners[event.type] || []).forEach(({ node, handler }) => {\n      if (event.target === node || node.contains(event.target as Node)) {\n        handler(event, ...args);\n      }\n    });\n  }\n\n  listenDOM(eventName: string, node: Node, handler: EventListener) {\n    if (!this.domListeners[eventName]) {\n      this.domListeners[eventName] = [];\n    }\n    this.domListeners[eventName].push({ node, handler });\n  }\n}\n\nexport type EmitterSource =\n  (typeof Emitter.sources)[keyof typeof Emitter.sources];\n\nexport default Emitter;\n", "import type Quill from '../core.js';\n\nexport default new WeakMap<Node, Quill>();\n", "const levels = ['error', 'warn', 'log', 'info'] as const;\nexport type DebugLevel = (typeof levels)[number];\nlet level: DebugLevel | false = 'warn';\n\nfunction debug(method: DebugLevel, ...args: unknown[]) {\n  if (level) {\n    if (levels.indexOf(method) <= levels.indexOf(level)) {\n      console[method](...args); // eslint-disable-line no-console\n    }\n  }\n}\n\nfunction namespace(\n  ns: string,\n): Record<DebugLevel, (...args: unknown[]) => void> {\n  return levels.reduce(\n    (logger, method) => {\n      logger[method] = debug.bind(console, method, ns);\n      return logger;\n    },\n    {} as Record<DebugLevel, (...args: unknown[]) => void>,\n  );\n}\n\nnamespace.level = (newLevel: DebugLevel | false) => {\n  level = newLevel;\n};\ndebug.level = namespace.level;\n\nexport default namespace;\n", "import type Quill from './quill.js';\n\nabstract class Module<T extends {} = {}> {\n  static DEFAULTS = {};\n\n  constructor(\n    public quill: Quill,\n    protected options: Partial<T> = {},\n  ) {}\n}\n\nexport default Module;\n", "import { cloneDeep, isEqual, merge } from 'lodash-es';\nimport { LeafBlot, EmbedBlot, Scope, ParentBlot } from 'parchment';\nimport type { Blot } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta';\nimport Block, { BlockEmbed, bubbleFormats } from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport type Scroll from '../blots/scroll.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport { Range } from './selection.js';\n\nconst ASCII = /^[ -~]*$/;\n\ntype SelectionInfo = {\n  newRange: Range;\n  oldRange: Range;\n};\n\nclass Editor {\n  scroll: Scroll;\n  delta: Delta;\n\n  constructor(scroll: Scroll) {\n    this.scroll = scroll;\n    this.delta = this.getDelta();\n  }\n\n  applyDelta(delta: Delta): Delta {\n    this.scroll.update();\n    let scrollLength = this.scroll.length();\n    this.scroll.batchStart();\n    const normalizedDelta = normalizeDelta(delta);\n    const deleteDelta = new Delta();\n    const normalizedOps = splitOpLines(normalizedDelta.ops.slice());\n    normalizedOps.reduce((index, op) => {\n      const length = Op.length(op);\n      let attributes = op.attributes || {};\n      let isImplicitNewlinePrepended = false;\n      let isImplicitNewlineAppended = false;\n      if (op.insert != null) {\n        deleteDelta.retain(length);\n        if (typeof op.insert === 'string') {\n          const text = op.insert;\n          isImplicitNewlineAppended =\n            !text.endsWith('\\n') &&\n            (scrollLength <= index ||\n              !!this.scroll.descendant(BlockEmbed, index)[0]);\n          this.scroll.insertAt(index, text);\n          const [line, offset] = this.scroll.line(index);\n          let formats = merge({}, bubbleFormats(line));\n          if (line instanceof Block) {\n            const [leaf] = line.descendant(LeafBlot, offset);\n            if (leaf) {\n              formats = merge(formats, bubbleFormats(leaf));\n            }\n          }\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        } else if (typeof op.insert === 'object') {\n          const key = Object.keys(op.insert)[0]; // There should only be one key\n          if (key == null) return index;\n          const isInlineEmbed = this.scroll.query(key, Scope.INLINE) != null;\n          if (isInlineEmbed) {\n            if (\n              scrollLength <= index ||\n              !!this.scroll.descendant(BlockEmbed, index)[0]\n            ) {\n              isImplicitNewlineAppended = true;\n            }\n          } else if (index > 0) {\n            const [leaf, offset] = this.scroll.descendant(LeafBlot, index - 1);\n            if (leaf instanceof TextBlot) {\n              const text = leaf.value();\n              if (text[offset] !== '\\n') {\n                isImplicitNewlinePrepended = true;\n              }\n            } else if (\n              leaf instanceof EmbedBlot &&\n              leaf.statics.scope === Scope.INLINE_BLOT\n            ) {\n              isImplicitNewlinePrepended = true;\n            }\n          }\n          this.scroll.insertAt(index, key, op.insert[key]);\n\n          if (isInlineEmbed) {\n            const [leaf] = this.scroll.descendant(LeafBlot, index);\n            if (leaf) {\n              const formats = merge({}, bubbleFormats(leaf));\n              attributes = AttributeMap.diff(formats, attributes) || {};\n            }\n          }\n        }\n        scrollLength += length;\n      } else {\n        deleteDelta.push(op);\n\n        if (op.retain !== null && typeof op.retain === 'object') {\n          const key = Object.keys(op.retain)[0];\n          if (key == null) return index;\n          this.scroll.updateEmbedAt(index, key, op.retain[key]);\n        }\n      }\n      Object.keys(attributes).forEach((name) => {\n        this.scroll.formatAt(index, length, name, attributes[name]);\n      });\n      const prependedLength = isImplicitNewlinePrepended ? 1 : 0;\n      const addedLength = isImplicitNewlineAppended ? 1 : 0;\n      scrollLength += prependedLength + addedLength;\n      deleteDelta.retain(prependedLength);\n      deleteDelta.delete(addedLength);\n      return index + length + prependedLength + addedLength;\n    }, 0);\n    deleteDelta.reduce((index, op) => {\n      if (typeof op.delete === 'number') {\n        this.scroll.deleteAt(index, op.delete);\n        return index;\n      }\n      return index + Op.length(op);\n    }, 0);\n    this.scroll.batchEnd();\n    this.scroll.optimize();\n    return this.update(normalizedDelta);\n  }\n\n  deleteText(index: number, length: number): Delta {\n    this.scroll.deleteAt(index, length);\n    return this.update(new Delta().retain(index).delete(length));\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    this.scroll.update();\n    Object.keys(formats).forEach((format) => {\n      this.scroll.lines(index, Math.max(length, 1)).forEach((line) => {\n        line.format(format, formats[format]);\n      });\n    });\n    this.scroll.optimize();\n    const delta = new Delta().retain(index).retain(length, cloneDeep(formats));\n    return this.update(delta);\n  }\n\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    Object.keys(formats).forEach((format) => {\n      this.scroll.formatAt(index, length, format, formats[format]);\n    });\n    const delta = new Delta().retain(index).retain(length, cloneDeep(formats));\n    return this.update(delta);\n  }\n\n  getContents(index: number, length: number): Delta {\n    return this.delta.slice(index, index + length);\n  }\n\n  getDelta(): Delta {\n    return this.scroll.lines().reduce((delta, line) => {\n      return delta.concat(line.delta());\n    }, new Delta());\n  }\n\n  getFormat(index: number, length = 0): Record<string, unknown> {\n    let lines: (Block | BlockEmbed)[] = [];\n    let leaves: LeafBlot[] = [];\n    if (length === 0) {\n      this.scroll.path(index).forEach((path) => {\n        const [blot] = path;\n        if (blot instanceof Block) {\n          lines.push(blot);\n        } else if (blot instanceof LeafBlot) {\n          leaves.push(blot);\n        }\n      });\n    } else {\n      lines = this.scroll.lines(index, length);\n      leaves = this.scroll.descendants(LeafBlot, index, length);\n    }\n    const [lineFormats, leafFormats] = [lines, leaves].map((blots) => {\n      const blot = blots.shift();\n      if (blot == null) return {};\n      let formats = bubbleFormats(blot);\n      while (Object.keys(formats).length > 0) {\n        const blot = blots.shift();\n        if (blot == null) return formats;\n        formats = combineFormats(bubbleFormats(blot), formats);\n      }\n      return formats;\n    });\n    return { ...lineFormats, ...leafFormats };\n  }\n\n  getHTML(index: number, length: number): string {\n    const [line, lineOffset] = this.scroll.line(index);\n    if (line) {\n      const lineLength = line.length();\n      const isWithinLine = line.length() >= lineOffset + length;\n      if (isWithinLine && !(lineOffset === 0 && length === lineLength)) {\n        return convertHTML(line, lineOffset, length, true);\n      }\n      return convertHTML(this.scroll, index, length, true);\n    }\n    return '';\n  }\n\n  getText(index: number, length: number): string {\n    return this.getContents(index, length)\n      .filter((op) => typeof op.insert === 'string')\n      .map((op) => op.insert)\n      .join('');\n  }\n\n  insertContents(index: number, contents: Delta): Delta {\n    const normalizedDelta = normalizeDelta(contents);\n    const change = new Delta().retain(index).concat(normalizedDelta);\n    this.scroll.insertContents(index, normalizedDelta);\n    return this.update(change);\n  }\n\n  insertEmbed(index: number, embed: string, value: unknown): Delta {\n    this.scroll.insertAt(index, embed, value);\n    return this.update(new Delta().retain(index).insert({ [embed]: value }));\n  }\n\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    this.scroll.insertAt(index, text);\n    Object.keys(formats).forEach((format) => {\n      this.scroll.formatAt(index, text.length, format, formats[format]);\n    });\n    return this.update(\n      new Delta().retain(index).insert(text, cloneDeep(formats)),\n    );\n  }\n\n  isBlank(): boolean {\n    if (this.scroll.children.length === 0) return true;\n    if (this.scroll.children.length > 1) return false;\n    const blot = this.scroll.children.head;\n    if (blot?.statics.blotName !== Block.blotName) return false;\n    const block = blot as Block;\n    if (block.children.length > 1) return false;\n    return block.children.head instanceof Break;\n  }\n\n  removeFormat(index: number, length: number): Delta {\n    const text = this.getText(index, length);\n    const [line, offset] = this.scroll.line(index + length);\n    let suffixLength = 0;\n    let suffix = new Delta();\n    if (line != null) {\n      suffixLength = line.length() - offset;\n      suffix = line\n        .delta()\n        .slice(offset, offset + suffixLength - 1)\n        .insert('\\n');\n    }\n    const contents = this.getContents(index, length + suffixLength);\n    const diff = contents.diff(new Delta().insert(text).concat(suffix));\n    const delta = new Delta().retain(index).concat(diff);\n    return this.applyDelta(delta);\n  }\n\n  update(\n    change: Delta | null,\n    mutations: MutationRecord[] = [],\n    selectionInfo: SelectionInfo | undefined = undefined,\n  ): Delta {\n    const oldDelta = this.delta;\n    if (\n      mutations.length === 1 &&\n      mutations[0].type === 'characterData' &&\n      // @ts-expect-error Fix me later\n      mutations[0].target.data.match(ASCII) &&\n      this.scroll.find(mutations[0].target)\n    ) {\n      // Optimization for character changes\n      const textBlot = this.scroll.find(mutations[0].target) as Blot;\n      const formats = bubbleFormats(textBlot);\n      const index = textBlot.offset(this.scroll);\n      // @ts-expect-error Fix me later\n      const oldValue = mutations[0].oldValue.replace(CursorBlot.CONTENTS, '');\n      const oldText = new Delta().insert(oldValue);\n      // @ts-expect-error\n      const newText = new Delta().insert(textBlot.value());\n      const relativeSelectionInfo = selectionInfo && {\n        oldRange: shiftRange(selectionInfo.oldRange, -index),\n        newRange: shiftRange(selectionInfo.newRange, -index),\n      };\n      const diffDelta = new Delta()\n        .retain(index)\n        .concat(oldText.diff(newText, relativeSelectionInfo));\n      change = diffDelta.reduce((delta, op) => {\n        if (op.insert) {\n          return delta.insert(op.insert, formats);\n        }\n        return delta.push(op);\n      }, new Delta());\n      this.delta = oldDelta.compose(change);\n    } else {\n      this.delta = this.getDelta();\n      if (!change || !isEqual(oldDelta.compose(change), this.delta)) {\n        change = oldDelta.diff(this.delta, selectionInfo);\n      }\n    }\n    return change;\n  }\n}\n\ninterface ListItem {\n  child: Blot;\n  offset: number;\n  length: number;\n  indent: number;\n  type: string;\n}\nfunction convertListHTML(\n  items: ListItem[],\n  lastIndent: number,\n  types: string[],\n): string {\n  if (items.length === 0) {\n    const [endTag] = getListType(types.pop());\n    if (lastIndent <= 0) {\n      return `</li></${endTag}>`;\n    }\n    return `</li></${endTag}>${convertListHTML([], lastIndent - 1, types)}`;\n  }\n  const [{ child, offset, length, indent, type }, ...rest] = items;\n  const [tag, attribute] = getListType(type);\n  if (indent > lastIndent) {\n    types.push(type);\n    if (indent === lastIndent + 1) {\n      return `<${tag}><li${attribute}>${convertHTML(\n        child,\n        offset,\n        length,\n      )}${convertListHTML(rest, indent, types)}`;\n    }\n    return `<${tag}><li>${convertListHTML(items, lastIndent + 1, types)}`;\n  }\n  const previousType = types[types.length - 1];\n  if (indent === lastIndent && type === previousType) {\n    return `</li><li${attribute}>${convertHTML(\n      child,\n      offset,\n      length,\n    )}${convertListHTML(rest, indent, types)}`;\n  }\n  const [endTag] = getListType(types.pop());\n  return `</li></${endTag}>${convertListHTML(items, lastIndent - 1, types)}`;\n}\n\nfunction convertHTML(\n  blot: Blot,\n  index: number,\n  length: number,\n  isRoot = false,\n): string {\n  if ('html' in blot && typeof blot.html === 'function') {\n    return blot.html(index, length);\n  }\n  if (blot instanceof TextBlot) {\n    const escapedText = escapeText(blot.value().slice(index, index + length));\n    return escapedText.replaceAll(' ', '&nbsp;');\n  }\n  if (blot instanceof ParentBlot) {\n    // TODO fix API\n    if (blot.statics.blotName === 'list-container') {\n      const items: any[] = [];\n      blot.children.forEachAt(index, length, (child, offset, childLength) => {\n        const formats =\n          'formats' in child && typeof child.formats === 'function'\n            ? child.formats()\n            : {};\n        items.push({\n          child,\n          offset,\n          length: childLength,\n          indent: formats.indent || 0,\n          type: formats.list,\n        });\n      });\n      return convertListHTML(items, -1, []);\n    }\n    const parts: string[] = [];\n    blot.children.forEachAt(index, length, (child, offset, childLength) => {\n      parts.push(convertHTML(child, offset, childLength));\n    });\n    if (isRoot || blot.statics.blotName === 'list') {\n      return parts.join('');\n    }\n    const { outerHTML, innerHTML } = blot.domNode as Element;\n    const [start, end] = outerHTML.split(`>${innerHTML}<`);\n    // TODO cleanup\n    if (start === '<table') {\n      return `<table style=\"border: 1px solid #000;\">${parts.join('')}<${end}`;\n    }\n    return `${start}>${parts.join('')}<${end}`;\n  }\n  return blot.domNode instanceof Element ? blot.domNode.outerHTML : '';\n}\n\nfunction combineFormats(\n  formats: Record<string, unknown>,\n  combined: Record<string, unknown>,\n): Record<string, unknown> {\n  return Object.keys(combined).reduce(\n    (merged, name) => {\n      if (formats[name] == null) return merged;\n      const combinedValue = combined[name];\n      if (combinedValue === formats[name]) {\n        merged[name] = combinedValue;\n      } else if (Array.isArray(combinedValue)) {\n        if (combinedValue.indexOf(formats[name]) < 0) {\n          merged[name] = combinedValue.concat([formats[name]]);\n        } else {\n          // If style already exists, don't add to an array, but don't lose other styles\n          merged[name] = combinedValue;\n        }\n      } else {\n        merged[name] = [combinedValue, formats[name]];\n      }\n      return merged;\n    },\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction getListType(type: string | undefined) {\n  const tag = type === 'ordered' ? 'ol' : 'ul';\n  switch (type) {\n    case 'checked':\n      return [tag, ' data-list=\"checked\"'];\n    case 'unchecked':\n      return [tag, ' data-list=\"unchecked\"'];\n    default:\n      return [tag, ''];\n  }\n}\n\nfunction normalizeDelta(delta: Delta) {\n  return delta.reduce((normalizedDelta, op) => {\n    if (typeof op.insert === 'string') {\n      const text = op.insert.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      return normalizedDelta.insert(text, op.attributes);\n    }\n    return normalizedDelta.push(op);\n  }, new Delta());\n}\n\nfunction shiftRange({ index, length }: Range, amount: number) {\n  return new Range(index + amount, length);\n}\n\nfunction splitOpLines(ops: Op[]) {\n  const split: Op[] = [];\n  ops.forEach((op) => {\n    if (typeof op.insert === 'string') {\n      const lines = op.insert.split('\\n');\n      lines.forEach((line, index) => {\n        if (index) split.push({ insert: '\\n', attributes: op.attributes });\n        if (line) split.push({ insert: line, attributes: op.attributes });\n      });\n    } else {\n      split.push(op);\n    }\n  });\n\n  return split;\n}\n\nexport default Editor;\n", "import Embed from '../blots/embed.js';\nimport type Scroll from '../blots/scroll.js';\nimport Emitter from './emitter.js';\n\nclass Composition {\n  isComposing = false;\n\n  constructor(\n    private scroll: Scroll,\n    private emitter: Emitter,\n  ) {\n    this.setupListeners();\n  }\n\n  private setupListeners() {\n    this.scroll.domNode.addEventListener('compositionstart', (event) => {\n      if (!this.isComposing) {\n        this.handleCompositionStart(event);\n      }\n    });\n\n    this.scroll.domNode.addEventListener('compositionend', (event) => {\n      if (this.isComposing) {\n        // Webkit makes DOM changes after compositionend, so we use microtask to\n        // ensure the order.\n        // https://bugs.webkit.org/show_bug.cgi?id=31902\n        queueMicrotask(() => {\n          this.handleCompositionEnd(event);\n        });\n      }\n    });\n  }\n\n  private handleCompositionStart(event: CompositionEvent) {\n    const blot =\n      event.target instanceof Node\n        ? this.scroll.find(event.target, true)\n        : null;\n\n    if (blot && !(blot instanceof Embed)) {\n      this.emitter.emit(Emitter.events.COMPOSITION_BEFORE_START, event);\n      this.scroll.batchStart();\n      this.emitter.emit(Emitter.events.COMPOSITION_START, event);\n      this.isComposing = true;\n    }\n  }\n\n  private handleCompositionEnd(event: CompositionEvent) {\n    this.emitter.emit(Emitter.events.COMPOSITION_BEFORE_END, event);\n    this.scroll.batchEnd();\n    this.emitter.emit(Emitter.events.COMPOSITION_END, event);\n    this.isComposing = false;\n  }\n}\n\nexport default Composition;\n", "export type Rect = {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n};\n\nconst getParentElement = (element: Node): Element | null =>\n  element.parentElement || (element.getRootNode() as ShadowRoot).host || null;\n\nconst getElementRect = (element: Element): Rect => {\n  const rect = element.getBoundingClientRect();\n  const scaleX =\n    ('offsetWidth' in element &&\n      Math.abs(rect.width) / (element as HTMLElement).offsetWidth) ||\n    1;\n  const scaleY =\n    ('offsetHeight' in element &&\n      Math.abs(rect.height) / (element as HTMLElement).offsetHeight) ||\n    1;\n  return {\n    top: rect.top,\n    right: rect.left + element.clientWidth * scaleX,\n    bottom: rect.top + element.clientHeight * scaleY,\n    left: rect.left,\n  };\n};\n\nconst paddingValueToInt = (value: string) => {\n  const number = parseInt(value, 10);\n  return Number.isNaN(number) ? 0 : number;\n};\n\n// Follow the steps described in https://www.w3.org/TR/cssom-view-1/#element-scrolling-members,\n// assuming that the scroll option is set to 'nearest'.\nconst getScrollDistance = (\n  targetStart: number,\n  targetEnd: number,\n  scrollStart: number,\n  scrollEnd: number,\n  scrollPaddingStart: number,\n  scrollPaddingEnd: number,\n) => {\n  if (targetStart < scrollStart && targetEnd > scrollEnd) {\n    return 0;\n  }\n\n  if (targetStart < scrollStart) {\n    return -(scrollStart - targetStart + scrollPaddingStart);\n  }\n\n  if (targetEnd > scrollEnd) {\n    return targetEnd - targetStart > scrollEnd - scrollStart\n      ? targetStart + scrollPaddingStart - scrollStart\n      : targetEnd - scrollEnd + scrollPaddingEnd;\n  }\n  return 0;\n};\n\nconst scrollRectIntoView = (root: HTMLElement, targetRect: Rect) => {\n  const document = root.ownerDocument;\n\n  let rect = targetRect;\n\n  let current: Element | null = root;\n  while (current) {\n    const isDocumentBody: boolean = current === document.body;\n    const bounding = isDocumentBody\n      ? {\n          top: 0,\n          right:\n            window.visualViewport?.width ??\n            document.documentElement.clientWidth,\n          bottom:\n            window.visualViewport?.height ??\n            document.documentElement.clientHeight,\n          left: 0,\n        }\n      : getElementRect(current);\n\n    const style = getComputedStyle(current);\n    const scrollDistanceX = getScrollDistance(\n      rect.left,\n      rect.right,\n      bounding.left,\n      bounding.right,\n      paddingValueToInt(style.scrollPaddingLeft),\n      paddingValueToInt(style.scrollPaddingRight),\n    );\n    const scrollDistanceY = getScrollDistance(\n      rect.top,\n      rect.bottom,\n      bounding.top,\n      bounding.bottom,\n      paddingValueToInt(style.scrollPaddingTop),\n      paddingValueToInt(style.scrollPaddingBottom),\n    );\n    if (scrollDistanceX || scrollDistanceY) {\n      if (isDocumentBody) {\n        document.defaultView?.scrollBy(scrollDistanceX, scrollDistanceY);\n      } else {\n        const { scrollLeft, scrollTop } = current;\n        if (scrollDistanceY) {\n          current.scrollTop += scrollDistanceY;\n        }\n        if (scrollDistanceX) {\n          current.scrollLeft += scrollDistanceX;\n        }\n        const scrolledLeft = current.scrollLeft - scrollLeft;\n        const scrolledTop = current.scrollTop - scrollTop;\n        rect = {\n          left: rect.left - scrolledLeft,\n          top: rect.top - scrolledTop,\n          right: rect.right - scrolledLeft,\n          bottom: rect.bottom - scrolledTop,\n        };\n      }\n    }\n\n    current =\n      isDocumentBody || style.position === 'fixed'\n        ? null\n        : getParentElement(current);\n  }\n};\n\nexport default scrollRectIntoView;\n", "import { Registry } from 'parchment';\n\nconst MAX_REGISTER_ITERATIONS = 100;\nconst CORE_FORMATS = ['block', 'break', 'cursor', 'inline', 'scroll', 'text'];\n\nconst createRegistryWithFormats = (\n  formats: string[],\n  sourceRegistry: Registry,\n  debug: { error: (errorMessage: string) => void },\n) => {\n  const registry = new Registry();\n  CORE_FORMATS.forEach((name) => {\n    const coreBlot = sourceRegistry.query(name);\n    if (coreBlot) registry.register(coreBlot);\n  });\n\n  formats.forEach((name) => {\n    let format = sourceRegistry.query(name);\n    if (!format) {\n      debug.error(\n        `Cannot register \"${name}\" specified in \"formats\" config. Are you sure it was registered?`,\n      );\n    }\n    let iterations = 0;\n    while (format) {\n      registry.register(format);\n      format = 'blotName' in format ? format.requiredContainer ?? null : null;\n\n      iterations += 1;\n      if (iterations > MAX_REGISTER_ITERATIONS) {\n        debug.error(\n          `Cycle detected in registering blot requiredContainer: \"${name}\"`,\n        );\n        break;\n      }\n    }\n  });\n\n  return registry;\n};\n\nexport default createRegistryWithFormats;\n", "import { merge } from 'lodash-es';\nimport * as Parchment from 'parchment';\nimport type { Op } from 'quill-delta';\nimport Delta from 'quill-delta';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type Block from '../blots/block.js';\nimport type Scroll from '../blots/scroll.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport Editor from './editor.js';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport instances from './instances.js';\nimport logger from './logger.js';\nimport type { DebugLevel } from './logger.js';\nimport Module from './module.js';\nimport Selection, { Range } from './selection.js';\nimport type { Bounds } from './selection.js';\nimport Composition from './composition.js';\nimport Theme from './theme.js';\nimport type { ThemeConstructor } from './theme.js';\nimport scrollRectIntoView from './utils/scrollRectIntoView.js';\nimport type { Rect } from './utils/scrollRectIntoView.js';\nimport createRegistryWithFormats from './utils/createRegistryWithFormats.js';\n\nconst debug = logger('quill');\n\nconst globalRegistry = new Parchment.Registry();\nParchment.ParentBlot.uiClass = 'ql-ui';\n\n/**\n * Options for initializing a Quill instance\n */\nexport interface QuillOptions {\n  theme?: string;\n  debug?: DebugLevel | boolean;\n  registry?: Parchment.Registry;\n  /**\n   * Whether to disable the editing\n   * @default false\n   */\n  readOnly?: boolean;\n\n  /**\n   * Placeholder text to display when the editor is empty\n   * @default \"\"\n   */\n  placeholder?: string;\n  bounds?: HTMLElement | string | null;\n  modules?: Record<string, unknown>;\n\n  /**\n   * A list of formats that are recognized and can exist within the editor contents.\n   * `null` means all formats are allowed.\n   * @default null\n   */\n  formats?: string[] | null;\n}\n\n/**\n * Similar to QuillOptions, but with all properties expanded to their default values,\n * and all selectors resolved to HTMLElements.\n */\nexport interface ExpandedQuillOptions\n  extends Omit<QuillOptions, 'theme' | 'formats'> {\n  theme: ThemeConstructor;\n  registry: Parchment.Registry;\n  container: HTMLElement;\n  modules: Record<string, unknown>;\n  bounds?: HTMLElement | null;\n  readOnly: boolean;\n}\n\nclass Quill {\n  static DEFAULTS = {\n    bounds: null,\n    modules: {\n      clipboard: true,\n      keyboard: true,\n      history: true,\n      uploader: true,\n    },\n    placeholder: '',\n    readOnly: false,\n    registry: globalRegistry,\n    theme: 'default',\n  } satisfies Partial<QuillOptions>;\n  static events = Emitter.events;\n  static sources = Emitter.sources;\n  static version = typeof QUILL_VERSION === 'undefined' ? 'dev' : QUILL_VERSION;\n\n  static imports: Record<string, unknown> = {\n    delta: Delta,\n    parchment: Parchment,\n    'core/module': Module,\n    'core/theme': Theme,\n  };\n\n  static debug(limit: DebugLevel | boolean) {\n    if (limit === true) {\n      limit = 'log';\n    }\n    logger.level(limit);\n  }\n\n  static find(node: Node, bubble = false) {\n    return instances.get(node) || globalRegistry.find(node, bubble);\n  }\n\n  static import(name: 'core/module'): typeof Module;\n  static import(name: `themes/${string}`): typeof Theme;\n  static import(name: 'parchment'): typeof Parchment;\n  static import(name: 'delta'): typeof Delta;\n  static import(name: string): unknown;\n  static import(name: string) {\n    if (this.imports[name] == null) {\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\n    }\n    return this.imports[name];\n  }\n\n  static register(\n    targets: Record<\n      string,\n      | Parchment.RegistryDefinition\n      | Record<string, unknown> // any objects\n      | Theme\n      | Module\n      | Function // ES5 constructors\n    >,\n    overwrite?: boolean,\n  ): void;\n  static register(\n    target: Parchment.RegistryDefinition,\n    overwrite?: boolean,\n  ): void;\n  static register(path: string, target: any, overwrite?: boolean): void;\n  static register(...args: any[]): void {\n    if (typeof args[0] !== 'string') {\n      const target = args[0];\n      const overwrite = !!args[1];\n\n      const name = 'attrName' in target ? target.attrName : target.blotName;\n      if (typeof name === 'string') {\n        // Shortcut for formats:\n        // register(Blot | Attributor, overwrite)\n        this.register(`formats/${name}`, target, overwrite);\n      } else {\n        Object.keys(target).forEach((key) => {\n          this.register(key, target[key], overwrite);\n        });\n      }\n    } else {\n      const path = args[0];\n      const target = args[1];\n      const overwrite = !!args[2];\n\n      if (this.imports[path] != null && !overwrite) {\n        debug.warn(`Overwriting ${path} with`, target);\n      }\n      this.imports[path] = target;\n      if (\n        (path.startsWith('blots/') || path.startsWith('formats/')) &&\n        target &&\n        typeof target !== 'boolean' &&\n        target.blotName !== 'abstract'\n      ) {\n        globalRegistry.register(target);\n      }\n      if (typeof target.register === 'function') {\n        target.register(globalRegistry);\n      }\n    }\n  }\n\n  container: HTMLElement;\n  root: HTMLDivElement;\n  scroll: Scroll;\n  emitter: Emitter;\n  protected allowReadOnlyEdits: boolean;\n  editor: Editor;\n  composition: Composition;\n  selection: Selection;\n\n  theme: Theme;\n  keyboard: Keyboard;\n  clipboard: Clipboard;\n  history: History;\n  uploader: Uploader;\n\n  options: ExpandedQuillOptions;\n\n  constructor(container: HTMLElement | string, options: QuillOptions = {}) {\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      debug.error('Invalid Quill container', container);\n      return;\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    const html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    instances.set(this.container, this);\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.emitter = new Emitter();\n    const scrollBlotName = Parchment.ScrollBlot.blotName;\n    const ScrollBlot = this.options.registry.query(scrollBlotName);\n    if (!ScrollBlot || !('blotName' in ScrollBlot)) {\n      throw new Error(\n        `Cannot initialize Quill without \"${scrollBlotName}\" blot`,\n      );\n    }\n    this.scroll = new ScrollBlot(this.options.registry, this.root, {\n      emitter: this.emitter,\n    }) as Scroll;\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.composition = new Composition(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options); // eslint-disable-line new-cap\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.uploader = this.theme.addModule('uploader');\n    this.theme.addModule('input');\n    this.theme.addModule('uiNode');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, (type) => {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, (source, mutations) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => this.editor.update(null, mutations, selectionInfo),\n        source,\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_EMBED_UPDATE, (blot, delta) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => {\n          const change = new Delta()\n            .retain(blot.offset(this))\n            .retain({ [blot.statics.blotName]: delta });\n          return this.editor.update(change, [], selectionInfo);\n        },\n        Quill.sources.USER,\n      );\n    });\n    if (html) {\n      const contents = this.clipboard.convert({\n        html: `${html}<p><br></p>`,\n        text: '\\n',\n      });\n      this.setContents(contents);\n    }\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n    this.allowReadOnlyEdits = false;\n  }\n\n  addContainer(container: string, refNode?: Node | null): HTMLDivElement;\n  addContainer(container: HTMLElement, refNode?: Node | null): HTMLElement;\n  addContainer(\n    container: string | HTMLElement,\n    refNode: Node | null = null,\n  ): HTMLDivElement | HTMLElement {\n    if (typeof container === 'string') {\n      const className = container;\n      container = document.createElement('div');\n      container.classList.add(className);\n    }\n    this.container.insertBefore(container, refNode);\n    return container;\n  }\n\n  blur() {\n    this.selection.setRange(null);\n  }\n\n  deleteText(range: Range, source?: EmitterSource): Delta;\n  deleteText(index: number, length: number, source?: EmitterSource): Delta;\n  deleteText(\n    index: number | Range,\n    length?: number | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    // @ts-expect-error\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.deleteText(index, length);\n      },\n      source,\n      index,\n      -1 * length,\n    );\n  }\n\n  disable() {\n    this.enable(false);\n  }\n\n  editReadOnly<T>(modifier: () => T): T {\n    this.allowReadOnlyEdits = true;\n    const value = modifier();\n    this.allowReadOnlyEdits = false;\n    return value;\n  }\n\n  enable(enabled = true) {\n    this.scroll.enable(enabled);\n    this.container.classList.toggle('ql-disabled', !enabled);\n  }\n\n  focus(options: { preventScroll?: boolean } = {}) {\n    this.selection.focus();\n    if (!options.preventScroll) {\n      this.scrollSelectionIntoView();\n    }\n  }\n\n  format(\n    name: string,\n    value: unknown,\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        const range = this.getSelection(true);\n        let change = new Delta();\n        if (range == null) return change;\n        if (this.scroll.query(name, Parchment.Scope.BLOCK)) {\n          change = this.editor.formatLine(range.index, range.length, {\n            [name]: value,\n          });\n        } else if (range.length === 0) {\n          this.selection.format(name, value);\n          return change;\n        } else {\n          change = this.editor.formatText(range.index, range.length, {\n            [name]: value,\n          });\n        }\n        this.setSelection(range, Emitter.sources.SILENT);\n        return change;\n      },\n      source,\n    );\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string | Record<string, unknown>,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      index,\n      length,\n      // @ts-expect-error\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatLine(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  formatText(\n    range: Range,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number | Range,\n    length: number | string,\n    name: string | unknown,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      // @ts-expect-error\n      index,\n      length,\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatText(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  getBounds(index: number | Range, length = 0): Bounds | null {\n    let bounds: Bounds | null = null;\n    if (typeof index === 'number') {\n      bounds = this.selection.getBounds(index, length);\n    } else {\n      bounds = this.selection.getBounds(index.index, index.length);\n    }\n    if (!bounds) return null;\n    const containerBounds = this.container.getBoundingClientRect();\n    return {\n      bottom: bounds.bottom - containerBounds.top,\n      height: bounds.height,\n      left: bounds.left - containerBounds.left,\n      right: bounds.right - containerBounds.left,\n      top: bounds.top - containerBounds.top,\n      width: bounds.width,\n    };\n  }\n\n  getContents(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getContents(index, length);\n  }\n\n  getFormat(index?: number, length?: number): { [format: string]: unknown };\n  getFormat(range?: Range): {\n    [format: string]: unknown;\n  };\n  getFormat(\n    index: Range | number = this.getSelection(true),\n    length = 0,\n  ): { [format: string]: unknown } {\n    if (typeof index === 'number') {\n      return this.editor.getFormat(index, length);\n    }\n    return this.editor.getFormat(index.index, index.length);\n  }\n\n  getIndex(blot: Parchment.Blot) {\n    return blot.offset(this.scroll);\n  }\n\n  getLength() {\n    return this.scroll.length();\n  }\n\n  getLeaf(index: number) {\n    return this.scroll.leaf(index);\n  }\n\n  getLine(index: number) {\n    return this.scroll.line(index);\n  }\n\n  getLines(range: Range): (Block | BlockEmbed)[];\n  getLines(index?: number, length?: number): (Block | BlockEmbed)[];\n  getLines(\n    index: Range | number = 0,\n    length = Number.MAX_VALUE,\n  ): (Block | BlockEmbed)[] {\n    if (typeof index !== 'number') {\n      return this.scroll.lines(index.index, index.length);\n    }\n    return this.scroll.lines(index, length);\n  }\n\n  getModule(name: string) {\n    return this.theme.modules[name];\n  }\n\n  getSelection(focus: true): Range;\n  getSelection(focus?: boolean): Range | null;\n  getSelection(focus = false): Range | null {\n    if (focus) this.focus();\n    this.update(); // Make sure we access getRange with editor in consistent state\n    return this.selection.getRange()[0];\n  }\n\n  getSemanticHTML(range: Range): string;\n  getSemanticHTML(index?: number, length?: number): string;\n  getSemanticHTML(index: Range | number = 0, length?: number) {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getHTML(index, length);\n  }\n\n  getText(range?: Range): string;\n  getText(index?: number, length?: number): string;\n  getText(index: Range | number = 0, length?: number): string {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getText(index, length);\n  }\n\n  hasFocus() {\n    return this.selection.hasFocus();\n  }\n\n  insertEmbed(\n    index: number,\n    embed: string,\n    value: unknown,\n    source: EmitterSource = Quill.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertEmbed(index, embed, value);\n      },\n      source,\n      index,\n    );\n  }\n\n  insertText(index: number, text: string, source?: EmitterSource): Delta;\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name?: string | Record<string, unknown> | EmitterSource,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    // @ts-expect-error\n    [index, , formats, source] = overload(index, 0, name, value, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertText(index, text, formats);\n      },\n      source,\n      index,\n      text.length,\n    );\n  }\n\n  isEnabled() {\n    return this.scroll.isEnabled();\n  }\n\n  off(...args: Parameters<(typeof Emitter)['prototype']['off']>) {\n    return this.emitter.off(...args);\n  }\n\n  on(\n    event: (typeof Emitter)['events']['TEXT_CHANGE'],\n    handler: (delta: Delta, oldContent: Delta, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['SELECTION_CHANGE'],\n    handler: (range: Range, oldRange: Range, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['EDITOR_CHANGE'],\n    handler: (\n      ...args:\n        | [\n            (typeof Emitter)['events']['TEXT_CHANGE'],\n            Delta,\n            Delta,\n            EmitterSource,\n          ]\n        | [\n            (typeof Emitter)['events']['SELECTION_CHANGE'],\n            Range,\n            Range,\n            EmitterSource,\n          ]\n    ) => void,\n  ): Emitter;\n  on(event: string, ...args: unknown[]): Emitter;\n  on(...args: Parameters<(typeof Emitter)['prototype']['on']>): Emitter {\n    return this.emitter.on(...args);\n  }\n\n  once(...args: Parameters<(typeof Emitter)['prototype']['once']>) {\n    return this.emitter.once(...args);\n  }\n\n  removeFormat(index: number, length: number, source?: EmitterSource): Delta {\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.removeFormat(index, length);\n      },\n      source,\n      index,\n    );\n  }\n\n  scrollRectIntoView(rect: Rect) {\n    scrollRectIntoView(this.root, rect);\n  }\n\n  /**\n   * @deprecated Use Quill#scrollSelectionIntoView() instead.\n   */\n  scrollIntoView() {\n    console.warn(\n      'Quill#scrollIntoView() has been deprecated and will be removed in the near future. Please use Quill#scrollSelectionIntoView() instead.',\n    );\n    this.scrollSelectionIntoView();\n  }\n\n  /**\n   * Scroll the current selection into the visible area.\n   * If the selection is already visible, no scrolling will occur.\n   */\n  scrollSelectionIntoView() {\n    const range = this.selection.lastRange;\n    const bounds = range && this.selection.getBounds(range.index, range.length);\n    if (bounds) {\n      this.scrollRectIntoView(bounds);\n    }\n  }\n\n  setContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        const length = this.getLength();\n        // Quill will set empty editor to \\n\n        const delete1 = this.editor.deleteText(0, length);\n        const applied = this.editor.insertContents(0, delta);\n        // Remove extra \\n from empty editor initialization\n        const delete2 = this.editor.deleteText(this.getLength() - 1, 1);\n        return delete1.compose(applied).compose(delete2);\n      },\n      source,\n    );\n  }\n  setSelection(range: Range | null, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(index: number, length?: number, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(\n    index: Range | null | number,\n    length?: EmitterSource | number,\n    source?: EmitterSource,\n  ): void {\n    if (index == null) {\n      // @ts-expect-error https://github.com/microsoft/TypeScript/issues/22609\n      this.selection.setRange(null, length || Quill.sources.API);\n    } else {\n      // @ts-expect-error\n      [index, length, , source] = overload(index, length, source);\n      this.selection.setRange(new Range(Math.max(0, index), length), source);\n      if (source !== Emitter.sources.SILENT) {\n        this.scrollSelectionIntoView();\n      }\n    }\n  }\n\n  setText(text: string, source: EmitterSource = Emitter.sources.API) {\n    const delta = new Delta().insert(text);\n    return this.setContents(delta, source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n    this.selection.update(source);\n    // TODO this is usually undefined\n    return change;\n  }\n\n  updateContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        return this.editor.applyDelta(delta);\n      },\n      source,\n      true,\n    );\n  }\n}\n\nfunction resolveSelector(selector: string | HTMLElement | null | undefined) {\n  return typeof selector === 'string'\n    ? document.querySelector<HTMLElement>(selector)\n    : selector;\n}\n\nfunction expandModuleConfig(config: Record<string, unknown> | undefined) {\n  return Object.entries(config ?? {}).reduce(\n    (expanded, [key, value]) => ({\n      ...expanded,\n      [key]: value === true ? {} : value,\n    }),\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction omitUndefinedValuesFromOptions(obj: QuillOptions) {\n  return Object.fromEntries(\n    Object.entries(obj).filter((entry) => entry[1] !== undefined),\n  );\n}\n\nfunction expandConfig(\n  containerOrSelector: HTMLElement | string,\n  options: QuillOptions,\n): ExpandedQuillOptions {\n  const container = resolveSelector(containerOrSelector);\n  if (!container) {\n    throw new Error('Invalid Quill container');\n  }\n\n  const shouldUseDefaultTheme =\n    !options.theme || options.theme === Quill.DEFAULTS.theme;\n  const theme = shouldUseDefaultTheme\n    ? Theme\n    : Quill.import(`themes/${options.theme}`);\n  if (!theme) {\n    throw new Error(`Invalid theme ${options.theme}. Did you register it?`);\n  }\n\n  const { modules: quillModuleDefaults, ...quillDefaults } = Quill.DEFAULTS;\n  const { modules: themeModuleDefaults, ...themeDefaults } = theme.DEFAULTS;\n\n  let userModuleOptions = expandModuleConfig(options.modules);\n  // Special case toolbar shorthand\n  if (\n    userModuleOptions != null &&\n    userModuleOptions.toolbar &&\n    userModuleOptions.toolbar.constructor !== Object\n  ) {\n    userModuleOptions = {\n      ...userModuleOptions,\n      toolbar: { container: userModuleOptions.toolbar },\n    };\n  }\n\n  const modules: ExpandedQuillOptions['modules'] = merge(\n    {},\n    expandModuleConfig(quillModuleDefaults),\n    expandModuleConfig(themeModuleDefaults),\n    userModuleOptions,\n  );\n\n  const config = {\n    ...quillDefaults,\n    ...omitUndefinedValuesFromOptions(themeDefaults),\n    ...omitUndefinedValuesFromOptions(options),\n  };\n\n  let registry = options.registry;\n  if (registry) {\n    if (options.formats) {\n      debug.warn('Ignoring \"formats\" option because \"registry\" is specified');\n    }\n  } else {\n    registry = options.formats\n      ? createRegistryWithFormats(options.formats, config.registry, debug)\n      : config.registry;\n  }\n\n  return {\n    ...config,\n    registry,\n    container,\n    theme,\n    modules: Object.entries(modules).reduce(\n      (modulesWithDefaults, [name, value]) => {\n        if (!value) return modulesWithDefaults;\n\n        const moduleClass = Quill.import(`modules/${name}`);\n        if (moduleClass == null) {\n          debug.error(\n            `Cannot load ${name} module. Are you sure you registered it?`,\n          );\n          return modulesWithDefaults;\n        }\n        return {\n          ...modulesWithDefaults,\n          // @ts-expect-error\n          [name]: merge({}, moduleClass.DEFAULTS || {}, value),\n        };\n      },\n      {},\n    ),\n    bounds: resolveSelector(config.bounds),\n  };\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(\n  modifier: () => Delta,\n  source: EmitterSource,\n  index: number | boolean,\n  shift: number | null,\n) {\n  if (\n    !this.isEnabled() &&\n    source === Emitter.sources.USER &&\n    !this.allowReadOnlyEdits\n  ) {\n    return new Delta();\n  }\n  let range = index == null ? null : this.getSelection();\n  const oldDelta = this.editor.delta;\n  const change = modifier();\n  if (range != null) {\n    if (index === true) {\n      index = range.index; // eslint-disable-line prefer-destructuring\n    }\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      // @ts-expect-error index should always be number\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    const args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n    if (source !== Emitter.sources.SILENT) {\n      this.emitter.emit(...args);\n    }\n  }\n  return change;\n}\n\ntype NormalizedIndexLength = [\n  number,\n  number,\n  Record<string, unknown>,\n  EmitterSource,\n];\nfunction overload(index: number, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(range: Range, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: Range | number,\n  length?: number | string | Record<string, unknown> | EmitterSource,\n  name?: string | unknown | Record<string, unknown> | EmitterSource,\n  value?: unknown | EmitterSource,\n  source?: EmitterSource,\n): NormalizedIndexLength {\n  let formats: Record<string, unknown> = {};\n  // @ts-expect-error\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      // @ts-expect-error\n      source = value;\n      value = name;\n      name = length;\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    } else {\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    }\n  } else if (typeof length !== 'number') {\n    // @ts-expect-error\n    source = value;\n    value = name;\n    name = length;\n    length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if (typeof name === 'object') {\n    // @ts-expect-error Fix me later\n    formats = name;\n    // @ts-expect-error\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      // @ts-expect-error\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || Emitter.sources.API;\n  // @ts-expect-error\n  return [index, length, formats, source];\n}\n\nfunction shiftRange(range: Range, change: Delta, source?: EmitterSource): Range;\nfunction shiftRange(\n  range: Range,\n  index: number,\n  length?: number,\n  source?: EmitterSource,\n): Range;\nfunction shiftRange(\n  range: Range,\n  index: number | Delta,\n  lengthOrSource?: number | EmitterSource,\n  source?: EmitterSource,\n) {\n  const length = typeof lengthOrSource === 'number' ? lengthOrSource : 0;\n  if (range == null) return null;\n  let start;\n  let end;\n  // @ts-expect-error -- TODO: add a better type guard around `index`\n  if (index && typeof index.transformPosition === 'function') {\n    [start, end] = [range.index, range.index + range.length].map((pos) =>\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      index.transformPosition(pos, source !== Emitter.sources.USER),\n    );\n  } else {\n    [start, end] = [range.index, range.index + range.length].map((pos) => {\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      if (pos < index || (pos === index && source === Emitter.sources.USER))\n        return pos;\n      if (length >= 0) {\n        return pos + length;\n      }\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      return Math.max(index, pos + length);\n    });\n  }\n  return new Range(start, end - start);\n}\n\nexport type { Bounds, DebugLevel, EmitterSource };\nexport { Parchment, Range };\n\nexport { globalRegistry, expandConfig, overload, Quill as default };\n", "import { LeafBlot, Scope } from 'parchment';\nimport { cloneDeep, isEqual } from 'lodash-es';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport logger from './logger.js';\nimport type Cursor from '../blots/cursor.js';\nimport type Scroll from '../blots/scroll.js';\n\nconst debug = logger('quill:selection');\n\ntype NativeRange = AbstractRange;\n\ninterface NormalizedRange {\n  start: {\n    node: NativeRange['startContainer'];\n    offset: NativeRange['startOffset'];\n  };\n  end: { node: NativeRange['endContainer']; offset: NativeRange['endOffset'] };\n  native: NativeRange;\n}\n\nexport interface Bounds {\n  bottom: number;\n  height: number;\n  left: number;\n  right: number;\n  top: number;\n  width: number;\n}\n\nexport class Range {\n  constructor(\n    public index: number,\n    public length = 0,\n  ) {}\n}\n\nclass Selection {\n  scroll: Scroll;\n  emitter: Emitter;\n  composing: boolean;\n  mouseDown: boolean;\n\n  root: HTMLElement;\n  cursor: Cursor;\n  savedRange: Range;\n  lastRange: Range | null;\n  lastNative: NormalizedRange | null;\n\n  constructor(scroll: Scroll, emitter: Emitter) {\n    this.emitter = emitter;\n    this.scroll = scroll;\n    this.composing = false;\n    this.mouseDown = false;\n    this.root = this.scroll.domNode;\n    // @ts-expect-error\n    this.cursor = this.scroll.create('cursor', this);\n    // savedRange is last non-null range\n    this.savedRange = new Range(0, 0);\n    this.lastRange = this.savedRange;\n    this.lastNative = null;\n    this.handleComposition();\n    this.handleDragging();\n    this.emitter.listenDOM('selectionchange', document, () => {\n      if (!this.mouseDown && !this.composing) {\n        setTimeout(this.update.bind(this, Emitter.sources.USER), 1);\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_BEFORE_UPDATE, () => {\n      if (!this.hasFocus()) return;\n      const native = this.getNativeRange();\n      if (native == null) return;\n      if (native.start.node === this.cursor.textNode) return; // cursor.restore() will handle\n      this.emitter.once(\n        Emitter.events.SCROLL_UPDATE,\n        (source, mutations: MutationRecord[]) => {\n          try {\n            if (\n              this.root.contains(native.start.node) &&\n              this.root.contains(native.end.node)\n            ) {\n              this.setNativeRange(\n                native.start.node,\n                native.start.offset,\n                native.end.node,\n                native.end.offset,\n              );\n            }\n            const triggeredByTyping = mutations.some(\n              (mutation) =>\n                mutation.type === 'characterData' ||\n                mutation.type === 'childList' ||\n                (mutation.type === 'attributes' &&\n                  mutation.target === this.root),\n            );\n            this.update(triggeredByTyping ? Emitter.sources.SILENT : source);\n          } catch (ignored) {\n            // ignore\n          }\n        },\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_OPTIMIZE, (mutations, context) => {\n      if (context.range) {\n        const { startNode, startOffset, endNode, endOffset } = context.range;\n        this.setNativeRange(startNode, startOffset, endNode, endOffset);\n        this.update(Emitter.sources.SILENT);\n      }\n    });\n    this.update(Emitter.sources.SILENT);\n  }\n\n  handleComposition() {\n    this.emitter.on(Emitter.events.COMPOSITION_BEFORE_START, () => {\n      this.composing = true;\n    });\n    this.emitter.on(Emitter.events.COMPOSITION_END, () => {\n      this.composing = false;\n      if (this.cursor.parent) {\n        const range = this.cursor.restore();\n        if (!range) return;\n        setTimeout(() => {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }, 1);\n      }\n    });\n  }\n\n  handleDragging() {\n    this.emitter.listenDOM('mousedown', document.body, () => {\n      this.mouseDown = true;\n    });\n    this.emitter.listenDOM('mouseup', document.body, () => {\n      this.mouseDown = false;\n      this.update(Emitter.sources.USER);\n    });\n  }\n\n  focus() {\n    if (this.hasFocus()) return;\n    this.root.focus({ preventScroll: true });\n    this.setRange(this.savedRange);\n  }\n\n  format(format: string, value: unknown) {\n    this.scroll.update();\n    const nativeRange = this.getNativeRange();\n    if (\n      nativeRange == null ||\n      !nativeRange.native.collapsed ||\n      this.scroll.query(format, Scope.BLOCK)\n    )\n      return;\n    if (nativeRange.start.node !== this.cursor.textNode) {\n      const blot = this.scroll.find(nativeRange.start.node, false);\n      if (blot == null) return;\n      // TODO Give blot ability to not split\n      if (blot instanceof LeafBlot) {\n        const after = blot.split(nativeRange.start.offset);\n        blot.parent.insertBefore(this.cursor, after);\n      } else {\n        // @ts-expect-error TODO: nativeRange.start.node doesn't seem to match function signature\n        blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen\n      }\n      this.cursor.attach();\n    }\n    this.cursor.format(format, value);\n    this.scroll.optimize();\n    this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);\n    this.update();\n  }\n\n  getBounds(index: number, length = 0) {\n    const scrollLength = this.scroll.length();\n    index = Math.min(index, scrollLength - 1);\n    length = Math.min(index + length, scrollLength - 1) - index;\n    let node: Node;\n    let [leaf, offset] = this.scroll.leaf(index);\n    if (leaf == null) return null;\n    if (length > 0 && offset === leaf.length()) {\n      const [next] = this.scroll.leaf(index + 1);\n      if (next) {\n        const [line] = this.scroll.line(index);\n        const [nextLine] = this.scroll.line(index + 1);\n        if (line === nextLine) {\n          leaf = next;\n          offset = 0;\n        }\n      }\n    }\n    [node, offset] = leaf.position(offset, true);\n    const range = document.createRange();\n    if (length > 0) {\n      range.setStart(node, offset);\n      [leaf, offset] = this.scroll.leaf(index + length);\n      if (leaf == null) return null;\n      [node, offset] = leaf.position(offset, true);\n      range.setEnd(node, offset);\n      return range.getBoundingClientRect();\n    }\n    let side: 'left' | 'right' = 'left';\n    let rect: DOMRect;\n    if (node instanceof Text) {\n      // Return null if the text node is empty because it is\n      // not able to get a useful client rect:\n      // https://github.com/w3c/csswg-drafts/issues/2514.\n      // Empty text nodes are most likely caused by TextBlot#optimize()\n      // not getting called when editor content changes.\n      if (!node.data.length) {\n        return null;\n      }\n      if (offset < node.data.length) {\n        range.setStart(node, offset);\n        range.setEnd(node, offset + 1);\n      } else {\n        range.setStart(node, offset - 1);\n        range.setEnd(node, offset);\n        side = 'right';\n      }\n      rect = range.getBoundingClientRect();\n    } else {\n      if (!(leaf.domNode instanceof Element)) return null;\n      rect = leaf.domNode.getBoundingClientRect();\n      if (offset > 0) side = 'right';\n    }\n    return {\n      bottom: rect.top + rect.height,\n      height: rect.height,\n      left: rect[side],\n      right: rect[side],\n      top: rect.top,\n      width: 0,\n    };\n  }\n\n  getNativeRange(): NormalizedRange | null {\n    const selection = document.getSelection();\n    if (selection == null || selection.rangeCount <= 0) return null;\n    const nativeRange = selection.getRangeAt(0);\n    if (nativeRange == null) return null;\n    const range = this.normalizeNative(nativeRange);\n    debug.info('getNativeRange', range);\n    return range;\n  }\n\n  getRange(): [Range, NormalizedRange] | [null, null] {\n    const root = this.scroll.domNode;\n    if ('isConnected' in root && !root.isConnected) {\n      // document.getSelection() forces layout on Blink, so we trend to\n      // not calling it.\n      return [null, null];\n    }\n    const normalized = this.getNativeRange();\n    if (normalized == null) return [null, null];\n    const range = this.normalizedToRange(normalized);\n    return [range, normalized];\n  }\n\n  hasFocus(): boolean {\n    return (\n      document.activeElement === this.root ||\n      (document.activeElement != null &&\n        contains(this.root, document.activeElement))\n    );\n  }\n\n  normalizedToRange(range: NormalizedRange) {\n    const positions: [Node, number][] = [\n      [range.start.node, range.start.offset],\n    ];\n    if (!range.native.collapsed) {\n      positions.push([range.end.node, range.end.offset]);\n    }\n    const indexes = positions.map((position) => {\n      const [node, offset] = position;\n      const blot = this.scroll.find(node, true);\n      // @ts-expect-error Fix me later\n      const index = blot.offset(this.scroll);\n      if (offset === 0) {\n        return index;\n      }\n      if (blot instanceof LeafBlot) {\n        return index + blot.index(node, offset);\n      }\n      // @ts-expect-error Fix me later\n      return index + blot.length();\n    });\n    const end = Math.min(Math.max(...indexes), this.scroll.length() - 1);\n    const start = Math.min(end, ...indexes);\n    return new Range(start, end - start);\n  }\n\n  normalizeNative(nativeRange: NativeRange) {\n    if (\n      !contains(this.root, nativeRange.startContainer) ||\n      (!nativeRange.collapsed && !contains(this.root, nativeRange.endContainer))\n    ) {\n      return null;\n    }\n    const range = {\n      start: {\n        node: nativeRange.startContainer,\n        offset: nativeRange.startOffset,\n      },\n      end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },\n      native: nativeRange,\n    };\n    [range.start, range.end].forEach((position) => {\n      let { node, offset } = position;\n      while (!(node instanceof Text) && node.childNodes.length > 0) {\n        if (node.childNodes.length > offset) {\n          node = node.childNodes[offset];\n          offset = 0;\n        } else if (node.childNodes.length === offset) {\n          // @ts-expect-error Fix me later\n          node = node.lastChild;\n          if (node instanceof Text) {\n            offset = node.data.length;\n          } else if (node.childNodes.length > 0) {\n            // Container case\n            offset = node.childNodes.length;\n          } else {\n            // Embed case\n            offset = node.childNodes.length + 1;\n          }\n        } else {\n          break;\n        }\n      }\n      position.node = node;\n      position.offset = offset;\n    });\n    return range;\n  }\n\n  rangeToNative(range: Range): [Node | null, number, Node | null, number] {\n    const scrollLength = this.scroll.length();\n\n    const getPosition = (\n      index: number,\n      inclusive: boolean,\n    ): [Node | null, number] => {\n      index = Math.min(scrollLength - 1, index);\n      const [leaf, leafOffset] = this.scroll.leaf(index);\n      return leaf ? leaf.position(leafOffset, inclusive) : [null, -1];\n    };\n    return [\n      ...getPosition(range.index, false),\n      ...getPosition(range.index + range.length, true),\n    ];\n  }\n\n  setNativeRange(\n    startNode: Node | null,\n    startOffset?: number,\n    endNode = startNode,\n    endOffset = startOffset,\n    force = false,\n  ) {\n    debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);\n    if (\n      startNode != null &&\n      (this.root.parentNode == null ||\n        startNode.parentNode == null ||\n        // @ts-expect-error Fix me later\n        endNode.parentNode == null)\n    ) {\n      return;\n    }\n    const selection = document.getSelection();\n    if (selection == null) return;\n    if (startNode != null) {\n      if (!this.hasFocus()) this.root.focus({ preventScroll: true });\n      const { native } = this.getNativeRange() || {};\n      if (\n        native == null ||\n        force ||\n        startNode !== native.startContainer ||\n        startOffset !== native.startOffset ||\n        endNode !== native.endContainer ||\n        endOffset !== native.endOffset\n      ) {\n        if (startNode instanceof Element && startNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          startOffset = Array.from(startNode.parentNode.childNodes).indexOf(\n            startNode,\n          );\n          startNode = startNode.parentNode;\n        }\n        if (endNode instanceof Element && endNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          endOffset = Array.from(endNode.parentNode.childNodes).indexOf(\n            endNode,\n          );\n          endNode = endNode.parentNode;\n        }\n        const range = document.createRange();\n        // @ts-expect-error Fix me later\n        range.setStart(startNode, startOffset);\n        // @ts-expect-error Fix me later\n        range.setEnd(endNode, endOffset);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    } else {\n      selection.removeAllRanges();\n      this.root.blur();\n    }\n  }\n\n  setRange(range: Range | null, force: boolean, source?: EmitterSource): void;\n  setRange(range: Range | null, source?: EmitterSource): void;\n  setRange(\n    range: Range | null,\n    force: boolean | EmitterSource = false,\n    source: EmitterSource = Emitter.sources.API,\n  ): void {\n    if (typeof force === 'string') {\n      source = force;\n      force = false;\n    }\n    debug.info('setRange', range);\n    if (range != null) {\n      const args = this.rangeToNative(range);\n      this.setNativeRange(...args, force);\n    } else {\n      this.setNativeRange(null);\n    }\n    this.update(source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const oldRange = this.lastRange;\n    const [lastRange, nativeRange] = this.getRange();\n    this.lastRange = lastRange;\n    this.lastNative = nativeRange;\n    if (this.lastRange != null) {\n      this.savedRange = this.lastRange;\n    }\n    if (!isEqual(oldRange, this.lastRange)) {\n      if (\n        !this.composing &&\n        nativeRange != null &&\n        nativeRange.native.collapsed &&\n        nativeRange.start.node !== this.cursor.textNode\n      ) {\n        const range = this.cursor.restore();\n        if (range) {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }\n      }\n      const args = [\n        Emitter.events.SELECTION_CHANGE,\n        cloneDeep(this.lastRange),\n        cloneDeep(oldRange),\n        source,\n      ];\n      this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n      if (source !== Emitter.sources.SILENT) {\n        this.emitter.emit(...args);\n      }\n    }\n  }\n}\n\nfunction contains(parent: Node, descendant: Node) {\n  try {\n    // Firefox inserts inaccessible nodes around video elements\n    descendant.parentNode; // eslint-disable-line @typescript-eslint/no-unused-expressions\n  } catch (e) {\n    return false;\n  }\n  return parent.contains(descendant);\n}\n\nexport default Selection;\n", "import type Quill from '../core.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type { ToolbarProps } from '../modules/toolbar.js';\nimport type Uploader from '../modules/uploader.js';\n\nexport interface ThemeOptions {\n  modules: Record<string, unknown> & {\n    toolbar?: null | ToolbarProps;\n  };\n}\n\nclass Theme {\n  static DEFAULTS: ThemeOptions = {\n    modules: {},\n  };\n\n  static themes = {\n    default: Theme,\n  };\n\n  modules: ThemeOptions['modules'] = {};\n\n  constructor(\n    protected quill: Quill,\n    protected options: ThemeOptions,\n  ) {}\n\n  init() {\n    Object.keys(this.options.modules).forEach((name) => {\n      if (this.modules[name] == null) {\n        this.addModule(name);\n      }\n    });\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    // @ts-expect-error\n    const ModuleClass = this.quill.constructor.import(`modules/${name}`);\n    this.modules[name] = new ModuleClass(\n      this.quill,\n      this.options.modules[name] || {},\n    );\n    return this.modules[name];\n  }\n}\n\nexport interface ThemeConstructor {\n  new (quill: Quill, options: unknown): Theme;\n  DEFAULTS: ThemeOptions;\n}\n\nexport default Theme;\n", "import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['right', 'center', 'justify'],\n};\n\nconst AlignAttribute = new Attributor('align', 'align', config);\nconst AlignClass = new ClassAttributor('align', 'ql-align', config);\nconst AlignStyle = new StyleAttributor('align', 'text-align', config);\n\nexport { AlignAttribute, AlignClass, AlignStyle };\n", "import { ClassAttributor, Scope } from 'parchment';\nimport { ColorAttributor } from './color.js';\n\nconst BackgroundClass = new ClassAttributor('background', 'ql-bg', {\n  scope: Scope.INLINE,\n});\nconst BackgroundStyle = new ColorAttributor('background', 'background-color', {\n  scope: Scope.INLINE,\n});\n\nexport { BackgroundClass, BackgroundStyle };\n", "import Block from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport Cursor from '../blots/cursor.js';\nimport Inline from '../blots/inline.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport Container from '../blots/container.js';\nimport Quill from '../core/quill.js';\n\nclass CodeBlockContainer extends Container {\n  static create(value: string) {\n    const domNode = super.create(value) as Element;\n    domNode.setAttribute('spellcheck', 'false');\n    return domNode;\n  }\n\n  code(index: number, length: number) {\n    return (\n      this.children\n        // @ts-expect-error\n        .map((child) => (child.length() <= 1 ? '' : child.domNode.innerText))\n        .join('\\n')\n        .slice(index, index + length)\n    );\n  }\n\n  html(index: number, length: number) {\n    // `\\n`s are needed in order to support empty lines at the beginning and the end.\n    // https://html.spec.whatwg.org/multipage/syntax.html#element-restrictions\n    return `<pre>\\n${escapeText(this.code(index, length))}\\n</pre>`;\n  }\n}\n\nclass CodeBlock extends Block {\n  static TAB = '  ';\n\n  static register() {\n    Quill.register(CodeBlockContainer);\n  }\n}\n\nclass Code extends Inline {}\nCode.blotName = 'code';\nCode.tagName = 'CODE';\n\nCodeBlock.blotName = 'code-block';\nCodeBlock.className = 'ql-code-block';\nCodeBlock.tagName = 'DIV';\nCodeBlockContainer.blotName = 'code-block-container';\nCodeBlockContainer.className = 'ql-code-block-container';\nCodeBlockContainer.tagName = 'DIV';\n\nCodeBlockContainer.allowedChildren = [CodeBlock];\n\nCodeBlock.allowedChildren = [TextBlot, Break, Cursor];\nCodeBlock.requiredContainer = CodeBlockContainer;\n\nexport { Code, CodeBlockContainer, CodeBlock as default };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nclass ColorAttributor extends StyleAttributor {\n  value(domNode: HTMLElement) {\n    let value = super.value(domNode) as string;\n    if (!value.startsWith('rgb(')) return value;\n    value = value.replace(/^[^\\d]+/, '').replace(/[^\\d]+$/, '');\n    const hex = value\n      .split(',')\n      .map((component) => `00${parseInt(component, 10).toString(16)}`.slice(-2))\n      .join('');\n    return `#${hex}`;\n  }\n}\n\nconst ColorClass = new ClassAttributor('color', 'ql-color', {\n  scope: Scope.INLINE,\n});\nconst ColorStyle = new ColorAttributor('color', 'color', {\n  scope: Scope.INLINE,\n});\n\nexport { ColorAttributor, ColorClass, ColorStyle };\n", "import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['rtl'],\n};\n\nconst DirectionAttribute = new Attributor('direction', 'dir', config);\nconst DirectionClass = new ClassAttributor('direction', 'ql-direction', config);\nconst DirectionStyle = new StyleAttributor('direction', 'direction', config);\n\nexport { DirectionAttribute, DirectionClass, DirectionStyle };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.INLINE,\n  whitelist: ['serif', 'monospace'],\n};\n\nconst FontClass = new ClassAttributor('font', 'ql-font', config);\n\nclass FontStyleAttributor extends StyleAttributor {\n  value(node: HTMLElement) {\n    return super.value(node).replace(/[\"']/g, '');\n  }\n}\n\nconst FontStyle = new FontStyleAttributor('font', 'font-family', config);\n\nexport { FontStyle, FontClass };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst SizeClass = new ClassAttributor('size', 'ql-size', {\n  scope: Scope.INLINE,\n  whitelist: ['small', 'large', 'huge'],\n});\nconst SizeStyle = new StyleAttributor('size', 'font-size', {\n  scope: Scope.INLINE,\n  whitelist: ['10px', '18px', '32px'],\n});\n\nexport { SizeClass, SizeStyle };\n", "const normalWeightRegexp = /font-weight:\\s*normal/;\nconst blockTagNames = ['P', 'OL', 'UL'];\n\nconst isBlockElement = (element: Element | null) => {\n  return element && blockTagNames.includes(element.tagName);\n};\n\nconst normalizeEmptyLines = (doc: Document) => {\n  Array.from(doc.querySelectorAll('br'))\n    .filter(\n      (br) =>\n        isBlockElement(br.previousElementSibling) &&\n        isBlockElement(br.nextElementSibling),\n    )\n    .forEach((br) => {\n      br.parentNode?.removeChild(br);\n    });\n};\n\nconst normalizeFontWeight = (doc: Document) => {\n  Array.from(doc.querySelectorAll('b[style*=\"font-weight\"]'))\n    .filter((node) => node.getAttribute('style')?.match(normalWeightRegexp))\n    .forEach((node) => {\n      const fragment = doc.createDocumentFragment();\n      fragment.append(...node.childNodes);\n      node.parentNode?.replaceChild(fragment, node);\n    });\n};\n\nexport default function normalize(doc: Document) {\n  if (doc.querySelector('[id^=\"docs-internal-guid-\"]')) {\n    normalizeFontWeight(doc);\n    normalizeEmptyLines(doc);\n  }\n}\n", "const ignoreRegexp = /\\bmso-list:[^;]*ignore/i;\nconst idRegexp = /\\bmso-list:[^;]*\\bl(\\d+)/i;\nconst indentRegexp = /\\bmso-list:[^;]*\\blevel(\\d+)/i;\n\nconst parseListItem = (element: Element, html: string) => {\n  const style = element.getAttribute('style');\n  const idMatch = style?.match(idRegexp);\n  if (!idMatch) {\n    return null;\n  }\n  const id = Number(idMatch[1]);\n\n  const indentMatch = style?.match(indentRegexp);\n  const indent = indentMatch ? Number(indentMatch[1]) : 1;\n\n  const typeRegexp = new RegExp(\n    `@list l${id}:level${indent}\\\\s*\\\\{[^\\\\}]*mso-level-number-format:\\\\s*([\\\\w-]+)`,\n    'i',\n  );\n  const typeMatch = html.match(typeRegexp);\n  const type = typeMatch && typeMatch[1] === 'bullet' ? 'bullet' : 'ordered';\n\n  return { id, indent, type, element };\n};\n\n// list items are represented as `p` tags with styles like `mso-list: l0 level1` where:\n// 1. \"0\" in \"l0\" means the list item id;\n// 2. \"1\" in \"level1\" means the indent level, starting from 1.\nconst normalizeListItem = (doc: Document) => {\n  const msoList = Array.from(doc.querySelectorAll('[style*=mso-list]'));\n  const ignored: Element[] = [];\n  const others: Element[] = [];\n  msoList.forEach((node) => {\n    const shouldIgnore = (node.getAttribute('style') || '').match(ignoreRegexp);\n    if (shouldIgnore) {\n      ignored.push(node);\n    } else {\n      others.push(node);\n    }\n  });\n\n  // Each list item contains a marker wrapped with \"mso-list: Ignore\".\n  ignored.forEach((node) => node.parentNode?.removeChild(node));\n\n  // The list stype is not defined inline with the tag, instead, it's in the\n  // style tag so we need to pass the html as a string.\n  const html = doc.documentElement.innerHTML;\n  const listItems = others\n    .map((element) => parseListItem(element, html))\n    .filter((parsed) => parsed);\n\n  while (listItems.length) {\n    const childListItems = [];\n\n    let current = listItems.shift();\n    // Group continuous items into the same group (aka \"ul\")\n    while (current) {\n      childListItems.push(current);\n      current =\n        listItems.length &&\n        listItems[0]?.element === current.element.nextElementSibling &&\n        // Different id means the next item doesn't belong to this group.\n        listItems[0].id === current.id\n          ? listItems.shift()\n          : null;\n    }\n\n    const ul = document.createElement('ul');\n    childListItems.forEach((listItem) => {\n      const li = document.createElement('li');\n      li.setAttribute('data-list', listItem.type);\n      if (listItem.indent > 1) {\n        li.setAttribute('class', `ql-indent-${listItem.indent - 1}`);\n      }\n      li.innerHTML = listItem.element.innerHTML;\n      ul.appendChild(li);\n    });\n\n    const element = childListItems[0]?.element;\n    const { parentNode } = element ?? {};\n    if (element) {\n      parentNode?.replaceChild(ul, element);\n    }\n    childListItems.slice(1).forEach(({ element: e }) => {\n      parentNode?.removeChild(e);\n    });\n  }\n};\n\nexport default function normalize(doc: Document) {\n  if (\n    doc.documentElement.getAttribute('xmlns:w') ===\n    'urn:schemas-microsoft-com:office:word'\n  ) {\n    normalizeListItem(doc);\n  }\n}\n", "import googleDocs from './normalizers/googleDocs.js';\nimport msWord from './normalizers/msWord.js';\n\nconst NORMALIZERS = [msWord, googleDocs];\n\nconst normalizeExternalHTML = (doc: Document) => {\n  if (doc.documentElement) {\n    NORMALIZERS.forEach((normalize) => {\n      normalize(doc);\n    });\n  }\n};\n\nexport default normalizeExternalHTML;\n", "import type { ScrollBlot } from 'parchment';\nimport {\n  Attributor,\n  BlockBlot,\n  ClassAttributor,\n  EmbedBlot,\n  Scope,\n  StyleAttributor,\n} from 'parchment';\nimport Delta from 'quill-delta';\nimport { BlockEmbed } from '../blots/block.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { AlignAttribute, AlignStyle } from '../formats/align.js';\nimport { BackgroundStyle } from '../formats/background.js';\nimport CodeBlock from '../formats/code.js';\nimport { ColorStyle } from '../formats/color.js';\nimport { DirectionAttribute, DirectionStyle } from '../formats/direction.js';\nimport { FontStyle } from '../formats/font.js';\nimport { SizeStyle } from '../formats/size.js';\nimport { deleteRange } from './keyboard.js';\nimport normalizeExternalHTML from './normalizeExternalHTML/index.js';\n\nconst debug = logger('quill:clipboard');\n\ntype Selector = string | Node['TEXT_NODE'] | Node['ELEMENT_NODE'];\ntype Matcher = (node: Node, delta: Delta, scroll: ScrollBlot) => Delta;\n\nconst CLIPBOARD_CONFIG: [Selector, Matcher][] = [\n  [Node.TEXT_NODE, matchText],\n  [Node.TEXT_NODE, matchNewline],\n  ['br', matchBreak],\n  [Node.ELEMENT_NODE, matchNewline],\n  [Node.ELEMENT_NODE, matchBlot],\n  [Node.ELEMENT_NODE, matchAttributor],\n  [Node.ELEMENT_NODE, matchStyles],\n  ['li', matchIndent],\n  ['ol, ul', matchList],\n  ['pre', matchCodeBlock],\n  ['tr', matchTable],\n  ['b', createMatchAlias('bold')],\n  ['i', createMatchAlias('italic')],\n  ['strike', createMatchAlias('strike')],\n  ['style', matchIgnore],\n];\n\nconst ATTRIBUTE_ATTRIBUTORS = [AlignAttribute, DirectionAttribute].reduce(\n  (memo: Record<string, Attributor>, attr) => {\n    memo[attr.keyName] = attr;\n    return memo;\n  },\n  {},\n);\n\nconst STYLE_ATTRIBUTORS = [\n  AlignStyle,\n  BackgroundStyle,\n  ColorStyle,\n  DirectionStyle,\n  FontStyle,\n  SizeStyle,\n].reduce((memo: Record<string, Attributor>, attr) => {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\n\ninterface ClipboardOptions {\n  matchers: [Selector, Matcher][];\n}\n\nclass Clipboard extends Module<ClipboardOptions> {\n  static DEFAULTS: ClipboardOptions = {\n    matchers: [],\n  };\n\n  matchers: [Selector, Matcher][];\n\n  constructor(quill: Quill, options: Partial<ClipboardOptions>) {\n    super(quill, options);\n    this.quill.root.addEventListener('copy', (e) =>\n      this.onCaptureCopy(e, false),\n    );\n    this.quill.root.addEventListener('cut', (e) => this.onCaptureCopy(e, true));\n    this.quill.root.addEventListener('paste', this.onCapturePaste.bind(this));\n    this.matchers = [];\n    CLIPBOARD_CONFIG.concat(this.options.matchers ?? []).forEach(\n      ([selector, matcher]) => {\n        this.addMatcher(selector, matcher);\n      },\n    );\n  }\n\n  addMatcher(selector: Selector, matcher: Matcher) {\n    this.matchers.push([selector, matcher]);\n  }\n\n  convert(\n    { html, text }: { html?: string; text?: string },\n    formats: Record<string, unknown> = {},\n  ) {\n    if (formats[CodeBlock.blotName]) {\n      return new Delta().insert(text || '', {\n        [CodeBlock.blotName]: formats[CodeBlock.blotName],\n      });\n    }\n    if (!html) {\n      return new Delta().insert(text || '', formats);\n    }\n    const delta = this.convertHTML(html);\n    // Remove trailing newline\n    if (\n      deltaEndsWith(delta, '\\n') &&\n      (delta.ops[delta.ops.length - 1].attributes == null || formats.table)\n    ) {\n      return delta.compose(new Delta().retain(delta.length() - 1).delete(1));\n    }\n    return delta;\n  }\n\n  protected normalizeHTML(doc: Document) {\n    normalizeExternalHTML(doc);\n  }\n\n  protected convertHTML(html: string) {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    this.normalizeHTML(doc);\n    const container = doc.body;\n    const nodeMatches = new WeakMap();\n    const [elementMatchers, textMatchers] = this.prepareMatching(\n      container,\n      nodeMatches,\n    );\n    return traverse(\n      this.quill.scroll,\n      container,\n      elementMatchers,\n      textMatchers,\n      nodeMatches,\n    );\n  }\n\n  dangerouslyPasteHTML(html: string, source?: EmitterSource): void;\n  dangerouslyPasteHTML(\n    index: number,\n    html: string,\n    source?: EmitterSource,\n  ): void;\n  dangerouslyPasteHTML(\n    index: number | string,\n    html?: string,\n    source: EmitterSource = Quill.sources.API,\n  ) {\n    if (typeof index === 'string') {\n      const delta = this.convert({ html: index, text: '' });\n      // @ts-expect-error\n      this.quill.setContents(delta, html);\n      this.quill.setSelection(0, Quill.sources.SILENT);\n    } else {\n      const paste = this.convert({ html, text: '' });\n      this.quill.updateContents(\n        new Delta().retain(index).concat(paste),\n        source,\n      );\n      this.quill.setSelection(index + paste.length(), Quill.sources.SILENT);\n    }\n  }\n\n  onCaptureCopy(e: ClipboardEvent, isCut = false) {\n    if (e.defaultPrevented) return;\n    e.preventDefault();\n    const [range] = this.quill.selection.getRange();\n    if (range == null) return;\n    const { html, text } = this.onCopy(range, isCut);\n    e.clipboardData?.setData('text/plain', text);\n    e.clipboardData?.setData('text/html', html);\n    if (isCut) {\n      deleteRange({ range, quill: this.quill });\n    }\n  }\n\n  /*\n   * https://www.iana.org/assignments/media-types/text/uri-list\n   */\n  private normalizeURIList(urlList: string) {\n    return (\n      urlList\n        .split(/\\r?\\n/)\n        // Ignore all comments\n        .filter((url) => url[0] !== '#')\n        .join('\\n')\n    );\n  }\n\n  onCapturePaste(e: ClipboardEvent) {\n    if (e.defaultPrevented || !this.quill.isEnabled()) return;\n    e.preventDefault();\n    const range = this.quill.getSelection(true);\n    if (range == null) return;\n    const html = e.clipboardData?.getData('text/html');\n    let text = e.clipboardData?.getData('text/plain');\n    if (!html && !text) {\n      const urlList = e.clipboardData?.getData('text/uri-list');\n      if (urlList) {\n        text = this.normalizeURIList(urlList);\n      }\n    }\n    const files = Array.from(e.clipboardData?.files || []);\n    if (!html && files.length > 0) {\n      this.quill.uploader.upload(range, files);\n      return;\n    }\n    if (html && files.length > 0) {\n      const doc = new DOMParser().parseFromString(html, 'text/html');\n      if (\n        doc.body.childElementCount === 1 &&\n        doc.body.firstElementChild?.tagName === 'IMG'\n      ) {\n        this.quill.uploader.upload(range, files);\n        return;\n      }\n    }\n    this.onPaste(range, { html, text });\n  }\n\n  onCopy(range: Range, isCut: boolean): { html: string; text: string };\n  onCopy(range: Range) {\n    const text = this.quill.getText(range);\n    const html = this.quill.getSemanticHTML(range);\n    return { html, text };\n  }\n\n  onPaste(range: Range, { text, html }: { text?: string; html?: string }) {\n    const formats = this.quill.getFormat(range.index);\n    const pastedDelta = this.convert({ text, html }, formats);\n    debug.log('onPaste', pastedDelta, { text, html });\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .concat(pastedDelta);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    // range.length contributes to delta.length()\n    this.quill.setSelection(\n      delta.length() - range.length,\n      Quill.sources.SILENT,\n    );\n    this.quill.scrollSelectionIntoView();\n  }\n\n  prepareMatching(container: Element, nodeMatches: WeakMap<Node, Matcher[]>) {\n    const elementMatchers: Matcher[] = [];\n    const textMatchers: Matcher[] = [];\n    this.matchers.forEach((pair) => {\n      const [selector, matcher] = pair;\n      switch (selector) {\n        case Node.TEXT_NODE:\n          textMatchers.push(matcher);\n          break;\n        case Node.ELEMENT_NODE:\n          elementMatchers.push(matcher);\n          break;\n        default:\n          Array.from(container.querySelectorAll(selector)).forEach((node) => {\n            if (nodeMatches.has(node)) {\n              const matches = nodeMatches.get(node);\n              matches?.push(matcher);\n            } else {\n              nodeMatches.set(node, [matcher]);\n            }\n          });\n          break;\n      }\n    });\n    return [elementMatchers, textMatchers];\n  }\n}\n\nfunction applyFormat(\n  delta: Delta,\n  format: string,\n  value: unknown,\n  scroll: ScrollBlot,\n): Delta {\n  if (!scroll.query(format)) {\n    return delta;\n  }\n\n  return delta.reduce((newDelta, op) => {\n    if (!op.insert) return newDelta;\n    if (op.attributes && op.attributes[format]) {\n      return newDelta.push(op);\n    }\n    const formats = value ? { [format]: value } : {};\n    return newDelta.insert(op.insert, { ...formats, ...op.attributes });\n  }, new Delta());\n}\n\nfunction deltaEndsWith(delta: Delta, text: string) {\n  let endText = '';\n  for (\n    let i = delta.ops.length - 1;\n    i >= 0 && endText.length < text.length;\n    --i // eslint-disable-line no-plusplus\n  ) {\n    const op = delta.ops[i];\n    if (typeof op.insert !== 'string') break;\n    endText = op.insert + endText;\n  }\n  return endText.slice(-1 * text.length) === text;\n}\n\nfunction isLine(node: Node, scroll: ScrollBlot) {\n  if (!(node instanceof Element)) return false;\n  const match = scroll.query(node);\n  // @ts-expect-error\n  if (match && match.prototype instanceof EmbedBlot) return false;\n\n  return [\n    'address',\n    'article',\n    'blockquote',\n    'canvas',\n    'dd',\n    'div',\n    'dl',\n    'dt',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'iframe',\n    'li',\n    'main',\n    'nav',\n    'ol',\n    'output',\n    'p',\n    'pre',\n    'section',\n    'table',\n    'td',\n    'tr',\n    'ul',\n    'video',\n  ].includes(node.tagName.toLowerCase());\n}\n\nfunction isBetweenInlineElements(node: HTMLElement, scroll: ScrollBlot) {\n  return (\n    node.previousElementSibling &&\n    node.nextElementSibling &&\n    !isLine(node.previousElementSibling, scroll) &&\n    !isLine(node.nextElementSibling, scroll)\n  );\n}\n\nconst preNodes = new WeakMap();\nfunction isPre(node: Node | null) {\n  if (node == null) return false;\n  if (!preNodes.has(node)) {\n    // @ts-expect-error\n    if (node.tagName === 'PRE') {\n      preNodes.set(node, true);\n    } else {\n      preNodes.set(node, isPre(node.parentNode));\n    }\n  }\n  return preNodes.get(node);\n}\n\nfunction traverse(\n  scroll: ScrollBlot,\n  node: ChildNode,\n  elementMatchers: Matcher[],\n  textMatchers: Matcher[],\n  nodeMatches: WeakMap<Node, Matcher[]>,\n): Delta {\n  // Post-order\n  if (node.nodeType === node.TEXT_NODE) {\n    return textMatchers.reduce((delta: Delta, matcher) => {\n      return matcher(node, delta, scroll);\n    }, new Delta());\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    return Array.from(node.childNodes || []).reduce((delta, childNode) => {\n      let childrenDelta = traverse(\n        scroll,\n        childNode,\n        elementMatchers,\n        textMatchers,\n        nodeMatches,\n      );\n      if (childNode.nodeType === node.ELEMENT_NODE) {\n        childrenDelta = elementMatchers.reduce((reducedDelta, matcher) => {\n          return matcher(childNode as HTMLElement, reducedDelta, scroll);\n        }, childrenDelta);\n        childrenDelta = (nodeMatches.get(childNode) || []).reduce(\n          (reducedDelta, matcher) => {\n            return matcher(childNode, reducedDelta, scroll);\n          },\n          childrenDelta,\n        );\n      }\n      return delta.concat(childrenDelta);\n    }, new Delta());\n  }\n  return new Delta();\n}\n\nfunction createMatchAlias(format: string) {\n  return (_node: Element, delta: Delta, scroll: ScrollBlot) => {\n    return applyFormat(delta, format, true, scroll);\n  };\n}\n\nfunction matchAttributor(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const attributes = Attributor.keys(node);\n  const classes = ClassAttributor.keys(node);\n  const styles = StyleAttributor.keys(node);\n  const formats: Record<string, string | undefined> = {};\n  attributes\n    .concat(classes)\n    .concat(styles)\n    .forEach((name) => {\n      let attr = scroll.query(name, Scope.ATTRIBUTE) as Attributor;\n      if (attr != null) {\n        formats[attr.attrName] = attr.value(node);\n        if (formats[attr.attrName]) return;\n      }\n      attr = ATTRIBUTE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n      attr = STYLE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        attr = STYLE_ATTRIBUTORS[name];\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n    });\n\n  return Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n}\n\nfunction matchBlot(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (match == null) return delta;\n  // @ts-expect-error\n  if (match.prototype instanceof EmbedBlot) {\n    const embed = {};\n    // @ts-expect-error\n    const value = match.value(node);\n    if (value != null) {\n      // @ts-expect-error\n      embed[match.blotName] = value;\n      // @ts-expect-error\n      return new Delta().insert(embed, match.formats(node, scroll));\n    }\n  } else {\n    // @ts-expect-error\n    if (match.prototype instanceof BlockBlot && !deltaEndsWith(delta, '\\n')) {\n      delta.insert('\\n');\n    }\n    if (\n      'blotName' in match &&\n      'formats' in match &&\n      typeof match.formats === 'function'\n    ) {\n      return applyFormat(\n        delta,\n        match.blotName,\n        match.formats(node, scroll),\n        scroll,\n      );\n    }\n  }\n  return delta;\n}\n\nfunction matchBreak(node: Node, delta: Delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    delta.insert('\\n');\n  }\n  return delta;\n}\n\nfunction matchCodeBlock(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query('code-block');\n  const language =\n    match && 'formats' in match && typeof match.formats === 'function'\n      ? match.formats(node, scroll)\n      : true;\n  return applyFormat(delta, 'code-block', language, scroll);\n}\n\nfunction matchIgnore() {\n  return new Delta();\n}\n\nfunction matchIndent(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (\n    match == null ||\n    // @ts-expect-error\n    match.blotName !== 'list' ||\n    !deltaEndsWith(delta, '\\n')\n  ) {\n    return delta;\n  }\n  let indent = -1;\n  let parent = node.parentNode;\n  while (parent != null) {\n    // @ts-expect-error\n    if (['OL', 'UL'].includes(parent.tagName)) {\n      indent += 1;\n    }\n    parent = parent.parentNode;\n  }\n  if (indent <= 0) return delta;\n  return delta.reduce((composed, op) => {\n    if (!op.insert) return composed;\n    if (op.attributes && typeof op.attributes.indent === 'number') {\n      return composed.push(op);\n    }\n    return composed.insert(op.insert, { indent, ...(op.attributes || {}) });\n  }, new Delta());\n}\n\nfunction matchList(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const element = node as Element;\n  let list = element.tagName === 'OL' ? 'ordered' : 'bullet';\n\n  const checkedAttr = element.getAttribute('data-checked');\n  if (checkedAttr) {\n    list = checkedAttr === 'true' ? 'checked' : 'unchecked';\n  }\n\n  return applyFormat(delta, 'list', list, scroll);\n}\n\nfunction matchNewline(node: Node, delta: Delta, scroll: ScrollBlot) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    if (\n      isLine(node, scroll) &&\n      (node.childNodes.length > 0 || node instanceof HTMLParagraphElement)\n    ) {\n      return delta.insert('\\n');\n    }\n    if (delta.length() > 0 && node.nextSibling) {\n      let nextSibling: Node | null = node.nextSibling;\n      while (nextSibling != null) {\n        if (isLine(nextSibling, scroll)) {\n          return delta.insert('\\n');\n        }\n        const match = scroll.query(nextSibling);\n        // @ts-expect-error\n        if (match && match.prototype instanceof BlockEmbed) {\n          return delta.insert('\\n');\n        }\n        nextSibling = nextSibling.firstChild;\n      }\n    }\n  }\n  return delta;\n}\n\nfunction matchStyles(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const formats: Record<string, unknown> = {};\n  const style: Partial<CSSStyleDeclaration> = node.style || {};\n  if (style.fontStyle === 'italic') {\n    formats.italic = true;\n  }\n  if (style.textDecoration === 'underline') {\n    formats.underline = true;\n  }\n  if (style.textDecoration === 'line-through') {\n    formats.strike = true;\n  }\n  if (\n    style.fontWeight?.startsWith('bold') ||\n    // @ts-expect-error Fix me later\n    parseInt(style.fontWeight, 10) >= 700\n  ) {\n    formats.bold = true;\n  }\n  delta = Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n  // @ts-expect-error\n  if (parseFloat(style.textIndent || 0) > 0) {\n    // Could be 0.5in\n    return new Delta().insert('\\t').concat(delta);\n  }\n  return delta;\n}\n\nfunction matchTable(\n  node: HTMLTableRowElement,\n  delta: Delta,\n  scroll: ScrollBlot,\n) {\n  const table =\n    node.parentElement?.tagName === 'TABLE'\n      ? node.parentElement\n      : node.parentElement?.parentElement;\n  if (table != null) {\n    const rows = Array.from(table.querySelectorAll('tr'));\n    const row = rows.indexOf(node) + 1;\n    return applyFormat(delta, 'table', row, scroll);\n  }\n  return delta;\n}\n\nfunction matchText(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  // @ts-expect-error\n  let text = node.data as string;\n  // Word represents empty line with <o:p>&nbsp;</o:p>\n  if (node.parentElement?.tagName === 'O:P') {\n    return delta.insert(text.trim());\n  }\n  if (!isPre(node)) {\n    if (\n      text.trim().length === 0 &&\n      text.includes('\\n') &&\n      !isBetweenInlineElements(node, scroll)\n    ) {\n      return delta;\n    }\n    // convert all non-nbsp whitespace into regular space\n    text = text.replace(/[^\\S\\u00a0]/g, ' ');\n    // collapse consecutive spaces into one\n    text = text.replace(/ {2,}/g, ' ');\n    if (\n      (node.previousSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.previousSibling instanceof Element &&\n        isLine(node.previousSibling, scroll))\n    ) {\n      // block structure means we don't need leading space\n      text = text.replace(/^ /, '');\n    }\n    if (\n      (node.nextSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.nextSibling instanceof Element && isLine(node.nextSibling, scroll))\n    ) {\n      // block structure means we don't need trailing space\n      text = text.replace(/ $/, '');\n    }\n    // done removing whitespace and can normalize all to regular space\n    text = text.replaceAll('\\u00a0', ' ');\n  }\n  return delta.insert(text);\n}\n\nexport {\n  Clipboard as default,\n  matchAttributor,\n  matchBlot,\n  matchNewline,\n  matchText,\n  traverse,\n};\n", "import { cloneDeep, isEqual } from 'lodash-es';\nimport Delta, { AttributeMap } from 'quill-delta';\nimport { EmbedBlot, Scope, TextBlot } from 'parchment';\nimport type { Blot, BlockBlot } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:keyboard');\n\nconst SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\n\nexport interface Context {\n  collapsed: boolean;\n  empty: boolean;\n  offset: number;\n  prefix: string;\n  suffix: string;\n  format: Record<string, unknown>;\n  event: KeyboardEvent;\n  line: BlockEmbed | BlockBlot;\n}\n\ninterface BindingObject\n  extends Partial<Omit<Context, 'prefix' | 'suffix' | 'format'>> {\n  key: number | string | string[];\n  shortKey?: boolean | null;\n  shiftKey?: boolean | null;\n  altKey?: boolean | null;\n  metaKey?: boolean | null;\n  ctrlKey?: boolean | null;\n  prefix?: RegExp;\n  suffix?: RegExp;\n  format?: Record<string, unknown> | string[];\n  handler?: (\n    this: { quill: Quill },\n    range: Range,\n    curContext: Context,\n    // eslint-disable-next-line no-use-before-define\n    binding: NormalizedBinding,\n  ) => boolean | void;\n}\n\ntype Binding = BindingObject | string | number;\n\ninterface NormalizedBinding extends Omit<BindingObject, 'key' | 'shortKey'> {\n  key: string | number;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\nclass Keyboard extends Module<KeyboardOptions> {\n  static DEFAULTS: KeyboardOptions;\n\n  static match(evt: KeyboardEvent, binding: BindingObject) {\n    if (\n      (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'] as const).some((key) => {\n        return !!binding[key] !== evt[key] && binding[key] !== null;\n      })\n    ) {\n      return false;\n    }\n    return binding.key === evt.key || binding.key === evt.which;\n  }\n\n  bindings: Record<string, NormalizedBinding[]>;\n\n  constructor(quill: Quill, options: Partial<KeyboardOptions>) {\n    super(quill, options);\n    this.bindings = {};\n    // @ts-expect-error Fix me later\n    Object.keys(this.options.bindings).forEach((name) => {\n      // @ts-expect-error Fix me later\n      if (this.options.bindings[name]) {\n        // @ts-expect-error Fix me later\n        this.addBinding(this.options.bindings[name]);\n      }\n    });\n    this.addBinding({ key: 'Enter', shiftKey: null }, this.handleEnter);\n    this.addBinding(\n      { key: 'Enter', metaKey: null, ctrlKey: null, altKey: null },\n      () => {},\n    );\n    if (/Firefox/i.test(navigator.userAgent)) {\n      // Need to handle delete and backspace for Firefox in the general case #1171\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true },\n        this.handleDelete,\n      );\n    } else {\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true, prefix: /^.?$/ },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true, suffix: /^.?$/ },\n        this.handleDelete,\n      );\n    }\n    this.addBinding(\n      { key: 'Backspace' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      { key: 'Delete' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      {\n        key: 'Backspace',\n        altKey: null,\n        ctrlKey: null,\n        metaKey: null,\n        shiftKey: null,\n      },\n      { collapsed: true, offset: 0 },\n      this.handleBackspace,\n    );\n    this.listen();\n  }\n\n  addBinding(\n    keyBinding: Binding,\n    context:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n    handler:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n  ) {\n    const binding = normalize(keyBinding);\n    if (binding == null) {\n      debug.warn('Attempted to add invalid keyboard binding', binding);\n      return;\n    }\n    if (typeof context === 'function') {\n      context = { handler: context };\n    }\n    if (typeof handler === 'function') {\n      handler = { handler };\n    }\n    const keys = Array.isArray(binding.key) ? binding.key : [binding.key];\n    keys.forEach((key) => {\n      const singleBinding = {\n        ...binding,\n        key,\n        ...context,\n        ...handler,\n      };\n      this.bindings[singleBinding.key] = this.bindings[singleBinding.key] || [];\n      this.bindings[singleBinding.key].push(singleBinding);\n    });\n  }\n\n  listen() {\n    this.quill.root.addEventListener('keydown', (evt) => {\n      if (evt.defaultPrevented || evt.isComposing) return;\n\n      // evt.isComposing is false when pressing Enter/Backspace when composing in Safari\n      // https://bugs.webkit.org/show_bug.cgi?id=165004\n      const isComposing =\n        evt.keyCode === 229 && (evt.key === 'Enter' || evt.key === 'Backspace');\n      if (isComposing) return;\n\n      const bindings = (this.bindings[evt.key] || []).concat(\n        this.bindings[evt.which] || [],\n      );\n      const matches = bindings.filter((binding) =>\n        Keyboard.match(evt, binding),\n      );\n      if (matches.length === 0) return;\n      // @ts-expect-error\n      const blot = Quill.find(evt.target, true);\n      if (blot && blot.scroll !== this.quill.scroll) return;\n      const range = this.quill.getSelection();\n      if (range == null || !this.quill.hasFocus()) return;\n      const [line, offset] = this.quill.getLine(range.index);\n      const [leafStart, offsetStart] = this.quill.getLeaf(range.index);\n      const [leafEnd, offsetEnd] =\n        range.length === 0\n          ? [leafStart, offsetStart]\n          : this.quill.getLeaf(range.index + range.length);\n      const prefixText =\n        leafStart instanceof TextBlot\n          ? leafStart.value().slice(0, offsetStart)\n          : '';\n      const suffixText =\n        leafEnd instanceof TextBlot ? leafEnd.value().slice(offsetEnd) : '';\n      const curContext = {\n        collapsed: range.length === 0,\n        // @ts-expect-error Fix me later\n        empty: range.length === 0 && line.length() <= 1,\n        format: this.quill.getFormat(range),\n        line,\n        offset,\n        prefix: prefixText,\n        suffix: suffixText,\n        event: evt,\n      };\n      const prevented = matches.some((binding) => {\n        if (\n          binding.collapsed != null &&\n          binding.collapsed !== curContext.collapsed\n        ) {\n          return false;\n        }\n        if (binding.empty != null && binding.empty !== curContext.empty) {\n          return false;\n        }\n        if (binding.offset != null && binding.offset !== curContext.offset) {\n          return false;\n        }\n        if (Array.isArray(binding.format)) {\n          // any format is present\n          if (binding.format.every((name) => curContext.format[name] == null)) {\n            return false;\n          }\n        } else if (typeof binding.format === 'object') {\n          // all formats must match\n          if (\n            !Object.keys(binding.format).every((name) => {\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === true)\n                return curContext.format[name] != null;\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === false)\n                return curContext.format[name] == null;\n              // @ts-expect-error Fix me later\n              return isEqual(binding.format[name], curContext.format[name]);\n            })\n          ) {\n            return false;\n          }\n        }\n        if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\n          return false;\n        }\n        if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\n          return false;\n        }\n        // @ts-expect-error Fix me later\n        return binding.handler.call(this, range, curContext, binding) !== true;\n      });\n      if (prevented) {\n        evt.preventDefault();\n      }\n    });\n  }\n\n  handleBackspace(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix)\n      ? 2\n      : 1;\n    if (range.index === 0 || this.quill.getLength() <= 1) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index - length).delete(length);\n    if (context.offset === 0) {\n      // Always deleting newline here, length always 1\n      const [prev] = this.quill.getLine(range.index - 1);\n      if (prev) {\n        const isPrevLineEmpty =\n          prev.statics.blotName === 'block' && prev.length() <= 1;\n        if (!isPrevLineEmpty) {\n          // @ts-expect-error Fix me later\n          const curFormats = line.formats();\n          const prevFormats = this.quill.getFormat(range.index - 1, 1);\n          formats = AttributeMap.diff(curFormats, prevFormats) || {};\n          if (Object.keys(formats).length > 0) {\n            // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n            const formatDelta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - 2)\n              .retain(1, formats);\n            delta = delta.compose(formatDelta);\n          }\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDelete(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix)\n      ? 2\n      : 1;\n    if (range.index >= this.quill.getLength() - length) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index).delete(length);\n    // @ts-expect-error Fix me later\n    if (context.offset >= line.length() - 1) {\n      const [next] = this.quill.getLine(range.index + 1);\n      if (next) {\n        // @ts-expect-error Fix me later\n        const curFormats = line.formats();\n        const nextFormats = this.quill.getFormat(range.index, 1);\n        formats = AttributeMap.diff(curFormats, nextFormats) || {};\n        if (Object.keys(formats).length > 0) {\n          delta = delta.retain(next.length() - 1).retain(1, formats);\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDeleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n    this.quill.focus();\n  }\n\n  handleEnter(range: Range, context: Context) {\n    const lineFormats = Object.keys(context.format).reduce(\n      (formats: Record<string, unknown>, format) => {\n        if (\n          this.quill.scroll.query(format, Scope.BLOCK) &&\n          !Array.isArray(context.format[format])\n        ) {\n          formats[format] = context.format[format];\n        }\n        return formats;\n      },\n      {},\n    );\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .insert('\\n', lineFormats);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n    this.quill.focus();\n  }\n}\n\nconst defaultOptions: KeyboardOptions = {\n  bindings: {\n    bold: makeFormatHandler('bold'),\n    italic: makeFormatHandler('italic'),\n    underline: makeFormatHandler('underline'),\n    indent: {\n      // highlight tab or tab at beginning of list, indent or blockquote\n      key: 'Tab',\n      format: ['blockquote', 'indent', 'list'],\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '+1', Quill.sources.USER);\n        return false;\n      },\n    },\n    outdent: {\n      key: 'Tab',\n      shiftKey: true,\n      format: ['blockquote', 'indent', 'list'],\n      // highlight tab or tab at beginning of list, indent or blockquote\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '-1', Quill.sources.USER);\n        return false;\n      },\n    },\n    'outdent backspace': {\n      key: 'Backspace',\n      collapsed: true,\n      shiftKey: null,\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null,\n      format: ['indent', 'list'],\n      offset: 0,\n      handler(range, context) {\n        if (context.format.indent != null) {\n          this.quill.format('indent', '-1', Quill.sources.USER);\n        } else if (context.format.list != null) {\n          this.quill.format('list', false, Quill.sources.USER);\n        }\n      },\n    },\n    'indent code-block': makeCodeBlockHandler(true),\n    'outdent code-block': makeCodeBlockHandler(false),\n    'remove tab': {\n      key: 'Tab',\n      shiftKey: true,\n      collapsed: true,\n      prefix: /\\t$/,\n      handler(range) {\n        this.quill.deleteText(range.index - 1, 1, Quill.sources.USER);\n      },\n    },\n    tab: {\n      key: 'Tab',\n      handler(range, context) {\n        if (context.format.table) return true;\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index)\n          .delete(range.length)\n          .insert('\\t');\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'blockquote empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['blockquote'],\n      empty: true,\n      handler() {\n        this.quill.format('blockquote', false, Quill.sources.USER);\n      },\n    },\n    'list empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['list'],\n      empty: true,\n      handler(range, context) {\n        const formats: Record<string, unknown> = { list: false };\n        if (context.format.indent) {\n          formats.indent = false;\n        }\n        this.quill.formatLine(\n          range.index,\n          range.length,\n          formats,\n          Quill.sources.USER,\n        );\n      },\n    },\n    'checklist enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: { list: 'checked' },\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const formats = {\n          // @ts-expect-error Fix me later\n          ...line.formats(),\n          list: 'checked',\n        };\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', formats)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { list: 'unchecked' });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'header enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['header'],\n      suffix: /^$/,\n      handler(range, context) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', context.format)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { header: null });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'table backspace': {\n      key: 'Backspace',\n      format: ['table'],\n      collapsed: true,\n      offset: 0,\n      handler() {},\n    },\n    'table delete': {\n      key: 'Delete',\n      format: ['table'],\n      collapsed: true,\n      suffix: /^$/,\n      handler() {},\n    },\n    'table enter': {\n      key: 'Enter',\n      shiftKey: null,\n      format: ['table'],\n      handler(range) {\n        const module = this.quill.getModule('table');\n        if (module) {\n          // @ts-expect-error\n          const [table, row, cell, offset] = module.getTable(range);\n          const shift = tableSide(table, row, cell, offset);\n          if (shift == null) return;\n          let index = table.offset();\n          if (shift < 0) {\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(\n              range.index + 1,\n              range.length,\n              Quill.sources.SILENT,\n            );\n          } else if (shift > 0) {\n            index += table.length();\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(index, Quill.sources.USER);\n          }\n        }\n      },\n    },\n    'table tab': {\n      key: 'Tab',\n      shiftKey: null,\n      format: ['table'],\n      handler(range, context) {\n        const { event, line: cell } = context;\n        const offset = cell.offset(this.quill.scroll);\n        if (event.shiftKey) {\n          this.quill.setSelection(offset - 1, Quill.sources.USER);\n        } else {\n          this.quill.setSelection(offset + cell.length(), Quill.sources.USER);\n        }\n      },\n    },\n    'list autofill': {\n      key: ' ',\n      shiftKey: null,\n      collapsed: true,\n      format: {\n        'code-block': false,\n        blockquote: false,\n        table: false,\n      },\n      prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,\n      handler(range, context) {\n        if (this.quill.scroll.query('list') == null) return true;\n        const { length } = context.prefix;\n        const [line, offset] = this.quill.getLine(range.index);\n        if (offset > length) return true;\n        let value;\n        switch (context.prefix.trim()) {\n          case '[]':\n          case '[ ]':\n            value = 'unchecked';\n            break;\n          case '[x]':\n            value = 'checked';\n            break;\n          case '-':\n          case '*':\n            value = 'bullet';\n            break;\n          default:\n            value = 'ordered';\n        }\n        this.quill.insertText(range.index, ' ', Quill.sources.USER);\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index - offset)\n          .delete(length + 1)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - 2 - offset)\n          .retain(1, { list: value });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index - length, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'code exit': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['code-block'],\n      prefix: /^$/,\n      suffix: /^\\s*$/,\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        let numLines = 2;\n        let cur = line;\n        while (\n          cur != null &&\n          cur.length() <= 1 &&\n          cur.formats()['code-block']\n        ) {\n          // @ts-expect-error\n          cur = cur.prev;\n          numLines -= 1;\n          // Requisite prev lines are empty\n          if (numLines <= 0) {\n            const delta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - offset - 2)\n              .retain(1, { 'code-block': null })\n              .delete(1);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index - 1, Quill.sources.SILENT);\n            return false;\n          }\n        }\n        return true;\n      },\n    },\n    'embed left': makeEmbedArrowHandler('ArrowLeft', false),\n    'embed left shift': makeEmbedArrowHandler('ArrowLeft', true),\n    'embed right': makeEmbedArrowHandler('ArrowRight', false),\n    'embed right shift': makeEmbedArrowHandler('ArrowRight', true),\n    'table down': makeTableArrowHandler(false),\n    'table up': makeTableArrowHandler(true),\n  },\n};\n\nKeyboard.DEFAULTS = defaultOptions;\n\nfunction makeCodeBlockHandler(indent: boolean): BindingObject {\n  return {\n    key: 'Tab',\n    shiftKey: !indent,\n    format: { 'code-block': true },\n    handler(range, { event }) {\n      const CodeBlock = this.quill.scroll.query('code-block');\n      // @ts-expect-error\n      const { TAB } = CodeBlock;\n      if (range.length === 0 && !event.shiftKey) {\n        this.quill.insertText(range.index, TAB, Quill.sources.USER);\n        this.quill.setSelection(range.index + TAB.length, Quill.sources.SILENT);\n        return;\n      }\n\n      const lines =\n        range.length === 0\n          ? this.quill.getLines(range.index, 1)\n          : this.quill.getLines(range);\n      let { index, length } = range;\n      lines.forEach((line, i) => {\n        if (indent) {\n          line.insertAt(0, TAB);\n          if (i === 0) {\n            index += TAB.length;\n          } else {\n            length += TAB.length;\n          }\n          // @ts-expect-error Fix me later\n        } else if (line.domNode.textContent.startsWith(TAB)) {\n          line.deleteAt(0, TAB.length);\n          if (i === 0) {\n            index -= TAB.length;\n          } else {\n            length -= TAB.length;\n          }\n        }\n      });\n      this.quill.update(Quill.sources.USER);\n      this.quill.setSelection(index, length, Quill.sources.SILENT);\n    },\n  };\n}\n\nfunction makeEmbedArrowHandler(\n  key: string,\n  shiftKey: boolean | null,\n): BindingObject {\n  const where = key === 'ArrowLeft' ? 'prefix' : 'suffix';\n  return {\n    key,\n    shiftKey,\n    altKey: null,\n    [where]: /^$/,\n    handler(range) {\n      let { index } = range;\n      if (key === 'ArrowRight') {\n        index += range.length + 1;\n      }\n      const [leaf] = this.quill.getLeaf(index);\n      if (!(leaf instanceof EmbedBlot)) return true;\n      if (key === 'ArrowLeft') {\n        if (shiftKey) {\n          this.quill.setSelection(\n            range.index - 1,\n            range.length + 1,\n            Quill.sources.USER,\n          );\n        } else {\n          this.quill.setSelection(range.index - 1, Quill.sources.USER);\n        }\n      } else if (shiftKey) {\n        this.quill.setSelection(\n          range.index,\n          range.length + 1,\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.setSelection(\n          range.index + range.length + 1,\n          Quill.sources.USER,\n        );\n      }\n      return false;\n    },\n  };\n}\n\nfunction makeFormatHandler(format: string): BindingObject {\n  return {\n    key: format[0],\n    shortKey: true,\n    handler(range, context) {\n      this.quill.format(format, !context.format[format], Quill.sources.USER);\n    },\n  };\n}\n\nfunction makeTableArrowHandler(up: boolean): BindingObject {\n  return {\n    key: up ? 'ArrowUp' : 'ArrowDown',\n    collapsed: true,\n    format: ['table'],\n    handler(range, context) {\n      // TODO move to table module\n      const key = up ? 'prev' : 'next';\n      const cell = context.line;\n      const targetRow = cell.parent[key];\n      if (targetRow != null) {\n        if (targetRow.statics.blotName === 'table-row') {\n          // @ts-expect-error\n          let targetCell = targetRow.children.head;\n          let cur = cell;\n          while (cur.prev != null) {\n            // @ts-expect-error\n            cur = cur.prev;\n            targetCell = targetCell.next;\n          }\n          const index =\n            targetCell.offset(this.quill.scroll) +\n            Math.min(context.offset, targetCell.length() - 1);\n          this.quill.setSelection(index, 0, Quill.sources.USER);\n        }\n      } else {\n        // @ts-expect-error\n        const targetLine = cell.table()[key];\n        if (targetLine != null) {\n          if (up) {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll) + targetLine.length() - 1,\n              0,\n              Quill.sources.USER,\n            );\n          } else {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll),\n              0,\n              Quill.sources.USER,\n            );\n          }\n        }\n      }\n      return false;\n    },\n  };\n}\n\nfunction normalize(binding: Binding): BindingObject | null {\n  if (typeof binding === 'string' || typeof binding === 'number') {\n    binding = { key: binding };\n  } else if (typeof binding === 'object') {\n    binding = cloneDeep(binding);\n  } else {\n    return null;\n  }\n  if (binding.shortKey) {\n    binding[SHORTKEY] = binding.shortKey;\n    delete binding.shortKey;\n  }\n  return binding;\n}\n\n// TODO: Move into quill.ts or editor.ts\nfunction deleteRange({ quill, range }: { quill: Quill; range: Range }) {\n  const lines = quill.getLines(range);\n  let formats = {};\n  if (lines.length > 1) {\n    const firstFormats = lines[0].formats();\n    const lastFormats = lines[lines.length - 1].formats();\n    formats = AttributeMap.diff(lastFormats, firstFormats) || {};\n  }\n  quill.deleteText(range, Quill.sources.USER);\n  if (Object.keys(formats).length > 0) {\n    quill.formatLine(range.index, 1, formats, Quill.sources.USER);\n  }\n  quill.setSelection(range.index, Quill.sources.SILENT);\n}\n\nfunction tableSide(_table: unknown, row: Blot, cell: Blot, offset: number) {\n  if (row.prev == null && row.next == null) {\n    if (cell.prev == null && cell.next == null) {\n      return offset === 0 ? -1 : 1;\n    }\n    return cell.prev == null ? -1 : 1;\n  }\n  if (row.prev == null) {\n    return -1;\n  }\n  if (row.next == null) {\n    return 1;\n  }\n  return null;\n}\n\nexport { Keyboard as default, SHORTKEY, normalize, deleteRange };\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @param {boolean} [cleanup] Apply semantic cleanup before returning.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, cleanup, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  if (cleanup) {\n    diff_cleanupSemantic(diffs);\n  }\n  return diffs;\n}\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)],\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2],\n    ];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n}\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = delta % 2 !== 0;\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length &&\n        y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length &&\n        y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) ===\n          text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2],\n  ];\n}\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n}\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\nfunction diff_commonOverlap_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (\n      found == 0 ||\n      text1.substring(text_length - length) == text2.substring(0, length)\n    ) {\n      best = length;\n      length++;\n    }\n  }\n}\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null; // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = \"\";\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i),\n        shorttext.substring(j)\n      );\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i),\n        shorttext.substring(0, j)\n      );\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common =\n          shorttext.substring(j - suffixLength, j) +\n          shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a,\n        best_longtext_b,\n        best_shorttext_a,\n        best_shorttext_b,\n        best_common,\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 4)\n  );\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 2)\n  );\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n}\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemantic(diffs) {\n  var changes = false;\n  var equalities = []; // Stack of indices where equalities are found.\n  var equalitiesLength = 0; // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0; // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {\n      // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (\n        lastequality &&\n        lastequality.length <=\n          Math.max(length_insertions1, length_deletions1) &&\n        lastequality.length <= Math.max(length_insertions2, length_deletions2)\n      ) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, [\n          DIFF_DELETE,\n          lastequality,\n        ]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0; // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n  diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (\n      diffs[pointer - 1][0] == DIFF_DELETE &&\n      diffs[pointer][0] == DIFF_INSERT\n    ) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (\n          overlap_length1 >= deletion.length / 2 ||\n          overlap_length1 >= insertion.length / 2\n        ) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            insertion.substring(0, overlap_length1),\n          ]);\n          diffs[pointer - 1][1] = deletion.substring(\n            0,\n            deletion.length - overlap_length1\n          );\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (\n          overlap_length2 >= deletion.length / 2 ||\n          overlap_length2 >= insertion.length / 2\n        ) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            deletion.substring(0, overlap_length2),\n          ]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] = insertion.substring(\n            0,\n            insertion.length - overlap_length2\n          );\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] = deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n}\n\nvar nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\nvar whitespaceRegex_ = /\\s/;\nvar linebreakRegex_ = /[\\r\\n]/;\nvar blanklineEndRegex_ = /\\n\\r?\\n$/;\nvar blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemanticLossless(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex_);\n    var lineBreak1 = whitespace1 && char1.match(linebreakRegex_);\n    var lineBreak2 = whitespace2 && char2.match(linebreakRegex_);\n    var blankLine1 = lineBreak1 && one.match(blanklineEndRegex_);\n    var blankLine2 = lineBreak2 && two.match(blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] == DIFF_EQUAL &&\n      diffs[pointer + 1][0] == DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore =\n        diff_cleanupSemanticScore_(equality1, edit) +\n        diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score =\n          diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n}\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, \"\"]); // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = \"\";\n  var text_insert = \"\";\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (\n            previous_equality >= 0 &&\n            ends_with_pair_start(diffs[previous_equality][1])\n          ) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(\n              0,\n              -1\n            );\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(\n                  0,\n                  commonlength\n                );\n              } else {\n                diffs.splice(0, 0, [\n                  DIFF_EQUAL,\n                  text_insert.substring(0, commonlength),\n                ]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) +\n                diffs[pointer][1];\n              text_insert = text_insert.substring(\n                0,\n                text_insert.length - commonlength\n              );\n              text_delete = text_delete.substring(\n                0,\n                text_delete.length - commonlength\n              );\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(\n              pointer - n,\n              n,\n              [DIFF_DELETE, text_delete],\n              [DIFF_INSERT, text_insert]\n            );\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = \"\";\n        text_insert = \"\";\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === \"\") {\n    diffs.pop(); // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      if (\n        diffs[pointer][1].substring(\n          diffs[pointer][1].length - diffs[pointer - 1][1].length\n        ) === diffs[pointer - 1][1]\n      ) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] =\n          diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(\n            0,\n            diffs[pointer][1].length - diffs[pointer - 1][1].length\n          );\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (\n        diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]\n      ) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n}\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xd800 && charCode <= 0xdbff;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xdc00 && charCode <= 0xdfff;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after],\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange =\n    typeof cursor_pos === \"number\"\n      ? { index: cursor_pos, length: 0 }\n      : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === \"number\" ? null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos, cleanup) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, cleanup, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n", "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n", "import cloneDeep = require('lodash.clonedeep');\nimport isEqual = require('lodash.isequal');\n\ninterface AttributeMap {\n  [key: string]: unknown;\n}\n\nnamespace AttributeMap {\n  export function compose(\n    a: AttributeMap = {},\n    b: AttributeMap = {},\n    keepNull = false,\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    let attributes = cloneDeep(b);\n    if (!keepNull) {\n      attributes = Object.keys(attributes).reduce<AttributeMap>((copy, key) => {\n        if (attributes[key] != null) {\n          copy[key] = attributes[key];\n        }\n        return copy;\n      }, {});\n    }\n    for (const key in a) {\n      if (a[key] !== undefined && b[key] === undefined) {\n        attributes[key] = a[key];\n      }\n    }\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n\n  export function diff(\n    a: AttributeMap = {},\n    b: AttributeMap = {},\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    const attributes = Object.keys(a)\n      .concat(Object.keys(b))\n      .reduce<AttributeMap>((attrs, key) => {\n        if (!isEqual(a[key], b[key])) {\n          attrs[key] = b[key] === undefined ? null : b[key];\n        }\n        return attrs;\n      }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n\n  export function invert(\n    attr: AttributeMap = {},\n    base: AttributeMap = {},\n  ): AttributeMap {\n    attr = attr || {};\n    const baseInverted = Object.keys(base).reduce<AttributeMap>((memo, key) => {\n      if (base[key] !== attr[key] && attr[key] !== undefined) {\n        memo[key] = base[key];\n      }\n      return memo;\n    }, {});\n    return Object.keys(attr).reduce<AttributeMap>((memo, key) => {\n      if (attr[key] !== base[key] && base[key] === undefined) {\n        memo[key] = null;\n      }\n      return memo;\n    }, baseInverted);\n  }\n\n  export function transform(\n    a: AttributeMap | undefined,\n    b: AttributeMap | undefined,\n    priority = false,\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      return b;\n    }\n    if (typeof b !== 'object') {\n      return undefined;\n    }\n    if (!priority) {\n      return b; // b simply overwrites us without priority\n    }\n    const attributes = Object.keys(b).reduce<AttributeMap>((attrs, key) => {\n      if (a[key] === undefined) {\n        attrs[key] = b[key]; // null is a valid value\n      }\n      return attrs;\n    }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n}\n\nexport default AttributeMap;\n", "import * as diff from 'fast-diff';\nimport cloneDeep = require('lodash.clonedeep');\nimport isEqual = require('lodash.isequal');\nimport AttributeMap from './AttributeMap';\nimport Op from './Op';\nimport OpIterator from './OpIterator';\n\nconst NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()\n\ninterface EmbedHandler<T> {\n  compose(a: T, b: T, keepNull: boolean): T;\n  invert(a: T, b: T): T;\n  transform(a: T, b: T, priority: boolean): T;\n}\n\nconst getEmbedTypeAndData = (\n  a: Op['insert'] | Op['retain'],\n  b: Op['insert'],\n): [string, unknown, unknown] => {\n  if (typeof a !== 'object' || a === null) {\n    throw new Error(`cannot retain a ${typeof a}`);\n  }\n  if (typeof b !== 'object' || b === null) {\n    throw new Error(`cannot retain a ${typeof b}`);\n  }\n  const embedType = Object.keys(a)[0];\n  if (!embedType || embedType !== Object.keys(b)[0]) {\n    throw new Error(\n      `embed types not matched: ${embedType} != ${Object.keys(b)[0]}`,\n    );\n  }\n  return [embedType, a[embedType], b[embedType]];\n};\n\nclass Delta {\n  static Op = Op;\n  static OpIterator = OpIterator;\n  static AttributeMap = AttributeMap;\n  private static handlers: { [embedType: string]: EmbedHandler<unknown> } = {};\n\n  static registerEmbed<T>(embedType: string, handler: EmbedHandler<T>): void {\n    this.handlers[embedType] = handler;\n  }\n\n  static unregisterEmbed(embedType: string): void {\n    delete this.handlers[embedType];\n  }\n\n  private static getHandler(embedType: string): EmbedHandler<unknown> {\n    const handler = this.handlers[embedType];\n    if (!handler) {\n      throw new Error(`no handlers for embed type \"${embedType}\"`);\n    }\n    return handler;\n  }\n\n  ops: Op[];\n  constructor(ops?: Op[] | { ops: Op[] }) {\n    // Assume we are given a well formed ops\n    if (Array.isArray(ops)) {\n      this.ops = ops;\n    } else if (ops != null && Array.isArray(ops.ops)) {\n      this.ops = ops.ops;\n    } else {\n      this.ops = [];\n    }\n  }\n\n  insert(\n    arg: string | Record<string, unknown>,\n    attributes?: AttributeMap | null,\n  ): this {\n    const newOp: Op = {};\n    if (typeof arg === 'string' && arg.length === 0) {\n      return this;\n    }\n    newOp.insert = arg;\n    if (\n      attributes != null &&\n      typeof attributes === 'object' &&\n      Object.keys(attributes).length > 0\n    ) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  }\n\n  delete(length: number): this {\n    if (length <= 0) {\n      return this;\n    }\n    return this.push({ delete: length });\n  }\n\n  retain(\n    length: number | Record<string, unknown>,\n    attributes?: AttributeMap | null,\n  ): this {\n    if (typeof length === 'number' && length <= 0) {\n      return this;\n    }\n    const newOp: Op = { retain: length };\n    if (\n      attributes != null &&\n      typeof attributes === 'object' &&\n      Object.keys(attributes).length > 0\n    ) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  }\n\n  push(newOp: Op): this {\n    let index = this.ops.length;\n    let lastOp = this.ops[index - 1];\n    newOp = cloneDeep(newOp);\n    if (typeof lastOp === 'object') {\n      if (\n        typeof newOp.delete === 'number' &&\n        typeof lastOp.delete === 'number'\n      ) {\n        this.ops[index - 1] = { delete: lastOp.delete + newOp.delete };\n        return this;\n      }\n      // Since it does not matter if we insert before or after deleting at the same index,\n      // always prefer to insert first\n      if (typeof lastOp.delete === 'number' && newOp.insert != null) {\n        index -= 1;\n        lastOp = this.ops[index - 1];\n        if (typeof lastOp !== 'object') {\n          this.ops.unshift(newOp);\n          return this;\n        }\n      }\n      if (isEqual(newOp.attributes, lastOp.attributes)) {\n        if (\n          typeof newOp.insert === 'string' &&\n          typeof lastOp.insert === 'string'\n        ) {\n          this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };\n          if (typeof newOp.attributes === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        } else if (\n          typeof newOp.retain === 'number' &&\n          typeof lastOp.retain === 'number'\n        ) {\n          this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };\n          if (typeof newOp.attributes === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        }\n      }\n    }\n    if (index === this.ops.length) {\n      this.ops.push(newOp);\n    } else {\n      this.ops.splice(index, 0, newOp);\n    }\n    return this;\n  }\n\n  chop(): this {\n    const lastOp = this.ops[this.ops.length - 1];\n    if (lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes) {\n      this.ops.pop();\n    }\n    return this;\n  }\n\n  filter(predicate: (op: Op, index: number) => boolean): Op[] {\n    return this.ops.filter(predicate);\n  }\n\n  forEach(predicate: (op: Op, index: number) => void): void {\n    this.ops.forEach(predicate);\n  }\n\n  map<T>(predicate: (op: Op, index: number) => T): T[] {\n    return this.ops.map(predicate);\n  }\n\n  partition(predicate: (op: Op) => boolean): [Op[], Op[]] {\n    const passed: Op[] = [];\n    const failed: Op[] = [];\n    this.forEach((op) => {\n      const target = predicate(op) ? passed : failed;\n      target.push(op);\n    });\n    return [passed, failed];\n  }\n\n  reduce<T>(\n    predicate: (accum: T, curr: Op, index: number) => T,\n    initialValue: T,\n  ): T {\n    return this.ops.reduce(predicate, initialValue);\n  }\n\n  changeLength(): number {\n    return this.reduce((length, elem) => {\n      if (elem.insert) {\n        return length + Op.length(elem);\n      } else if (elem.delete) {\n        return length - elem.delete;\n      }\n      return length;\n    }, 0);\n  }\n\n  length(): number {\n    return this.reduce((length, elem) => {\n      return length + Op.length(elem);\n    }, 0);\n  }\n\n  slice(start = 0, end = Infinity): Delta {\n    const ops = [];\n    const iter = new OpIterator(this.ops);\n    let index = 0;\n    while (index < end && iter.hasNext()) {\n      let nextOp;\n      if (index < start) {\n        nextOp = iter.next(start - index);\n      } else {\n        nextOp = iter.next(end - index);\n        ops.push(nextOp);\n      }\n      index += Op.length(nextOp);\n    }\n    return new Delta(ops);\n  }\n\n  compose(other: Delta): Delta {\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    const ops = [];\n    const firstOther = otherIter.peek();\n    if (\n      firstOther != null &&\n      typeof firstOther.retain === 'number' &&\n      firstOther.attributes == null\n    ) {\n      let firstLeft = firstOther.retain;\n      while (\n        thisIter.peekType() === 'insert' &&\n        thisIter.peekLength() <= firstLeft\n      ) {\n        firstLeft -= thisIter.peekLength();\n        ops.push(thisIter.next());\n      }\n      if (firstOther.retain - firstLeft > 0) {\n        otherIter.next(firstOther.retain - firstLeft);\n      }\n    }\n    const delta = new Delta(ops);\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else if (thisIter.peekType() === 'delete') {\n        delta.push(thisIter.next());\n      } else {\n        const length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        const thisOp = thisIter.next(length);\n        const otherOp = otherIter.next(length);\n        if (otherOp.retain) {\n          const newOp: Op = {};\n          if (typeof thisOp.retain === 'number') {\n            newOp.retain =\n              typeof otherOp.retain === 'number' ? length : otherOp.retain;\n          } else {\n            if (typeof otherOp.retain === 'number') {\n              if (thisOp.retain == null) {\n                newOp.insert = thisOp.insert;\n              } else {\n                newOp.retain = thisOp.retain;\n              }\n            } else {\n              const action = thisOp.retain == null ? 'insert' : 'retain';\n              const [embedType, thisData, otherData] = getEmbedTypeAndData(\n                thisOp[action],\n                otherOp.retain,\n              );\n              const handler = Delta.getHandler(embedType);\n              newOp[action] = {\n                [embedType]: handler.compose(\n                  thisData,\n                  otherData,\n                  action === 'retain',\n                ),\n              };\n            }\n          }\n          // Preserve null when composing with a retain, otherwise remove it for inserts\n          const attributes = AttributeMap.compose(\n            thisOp.attributes,\n            otherOp.attributes,\n            typeof thisOp.retain === 'number',\n          );\n          if (attributes) {\n            newOp.attributes = attributes;\n          }\n          delta.push(newOp);\n\n          // Optimization if rest of other is just retain\n          if (\n            !otherIter.hasNext() &&\n            isEqual(delta.ops[delta.ops.length - 1], newOp)\n          ) {\n            const rest = new Delta(thisIter.rest());\n            return delta.concat(rest).chop();\n          }\n\n          // Other op should be delete, we could be an insert or retain\n          // Insert + delete cancels out\n        } else if (\n          typeof otherOp.delete === 'number' &&\n          (typeof thisOp.retain === 'number' ||\n            (typeof thisOp.retain === 'object' && thisOp.retain !== null))\n        ) {\n          delta.push(otherOp);\n        }\n      }\n    }\n    return delta.chop();\n  }\n\n  concat(other: Delta): Delta {\n    const delta = new Delta(this.ops.slice());\n    if (other.ops.length > 0) {\n      delta.push(other.ops[0]);\n      delta.ops = delta.ops.concat(other.ops.slice(1));\n    }\n    return delta;\n  }\n\n  diff(other: Delta, cursor?: number | diff.CursorInfo): Delta {\n    if (this.ops === other.ops) {\n      return new Delta();\n    }\n    const strings = [this, other].map((delta) => {\n      return delta\n        .map((op) => {\n          if (op.insert != null) {\n            return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;\n          }\n          const prep = delta === other ? 'on' : 'with';\n          throw new Error('diff() called ' + prep + ' non-document');\n        })\n        .join('');\n    });\n    const retDelta = new Delta();\n    const diffResult = diff(strings[0], strings[1], cursor, true);\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    diffResult.forEach((component: diff.Diff) => {\n      let length = component[1].length;\n      while (length > 0) {\n        let opLength = 0;\n        switch (component[0]) {\n          case diff.INSERT:\n            opLength = Math.min(otherIter.peekLength(), length);\n            retDelta.push(otherIter.next(opLength));\n            break;\n          case diff.DELETE:\n            opLength = Math.min(length, thisIter.peekLength());\n            thisIter.next(opLength);\n            retDelta.delete(opLength);\n            break;\n          case diff.EQUAL:\n            opLength = Math.min(\n              thisIter.peekLength(),\n              otherIter.peekLength(),\n              length,\n            );\n            const thisOp = thisIter.next(opLength);\n            const otherOp = otherIter.next(opLength);\n            if (isEqual(thisOp.insert, otherOp.insert)) {\n              retDelta.retain(\n                opLength,\n                AttributeMap.diff(thisOp.attributes, otherOp.attributes),\n              );\n            } else {\n              retDelta.push(otherOp).delete(opLength);\n            }\n            break;\n        }\n        length -= opLength;\n      }\n    });\n    return retDelta.chop();\n  }\n\n  eachLine(\n    predicate: (\n      line: Delta,\n      attributes: AttributeMap,\n      index: number,\n    ) => boolean | void,\n    newline = '\\n',\n  ): void {\n    const iter = new OpIterator(this.ops);\n    let line = new Delta();\n    let i = 0;\n    while (iter.hasNext()) {\n      if (iter.peekType() !== 'insert') {\n        return;\n      }\n      const thisOp = iter.peek();\n      const start = Op.length(thisOp) - iter.peekLength();\n      const index =\n        typeof thisOp.insert === 'string'\n          ? thisOp.insert.indexOf(newline, start) - start\n          : -1;\n      if (index < 0) {\n        line.push(iter.next());\n      } else if (index > 0) {\n        line.push(iter.next(index));\n      } else {\n        if (predicate(line, iter.next(1).attributes || {}, i) === false) {\n          return;\n        }\n        i += 1;\n        line = new Delta();\n      }\n    }\n    if (line.length() > 0) {\n      predicate(line, {}, i);\n    }\n  }\n\n  invert(base: Delta): Delta {\n    const inverted = new Delta();\n    this.reduce((baseIndex, op) => {\n      if (op.insert) {\n        inverted.delete(Op.length(op));\n      } else if (typeof op.retain === 'number' && op.attributes == null) {\n        inverted.retain(op.retain);\n        return baseIndex + op.retain;\n      } else if (op.delete || typeof op.retain === 'number') {\n        const length = (op.delete || op.retain) as number;\n        const slice = base.slice(baseIndex, baseIndex + length);\n        slice.forEach((baseOp) => {\n          if (op.delete) {\n            inverted.push(baseOp);\n          } else if (op.retain && op.attributes) {\n            inverted.retain(\n              Op.length(baseOp),\n              AttributeMap.invert(op.attributes, baseOp.attributes),\n            );\n          }\n        });\n        return baseIndex + length;\n      } else if (typeof op.retain === 'object' && op.retain !== null) {\n        const slice = base.slice(baseIndex, baseIndex + 1);\n        const baseOp = new OpIterator(slice.ops).next();\n        const [embedType, opData, baseOpData] = getEmbedTypeAndData(\n          op.retain,\n          baseOp.insert,\n        );\n        const handler = Delta.getHandler(embedType);\n        inverted.retain(\n          { [embedType]: handler.invert(opData, baseOpData) },\n          AttributeMap.invert(op.attributes, baseOp.attributes),\n        );\n        return baseIndex + 1;\n      }\n      return baseIndex;\n    }, 0);\n    return inverted.chop();\n  }\n\n  transform(index: number, priority?: boolean): number;\n  transform(other: Delta, priority?: boolean): Delta;\n  transform(arg: number | Delta, priority = false): typeof arg {\n    priority = !!priority;\n    if (typeof arg === 'number') {\n      return this.transformPosition(arg, priority);\n    }\n    const other: Delta = arg;\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    const delta = new Delta();\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (\n        thisIter.peekType() === 'insert' &&\n        (priority || otherIter.peekType() !== 'insert')\n      ) {\n        delta.retain(Op.length(thisIter.next()));\n      } else if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else {\n        const length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        const thisOp = thisIter.next(length);\n        const otherOp = otherIter.next(length);\n        if (thisOp.delete) {\n          // Our delete either makes their delete redundant or removes their retain\n          continue;\n        } else if (otherOp.delete) {\n          delta.push(otherOp);\n        } else {\n          const thisData = thisOp.retain;\n          const otherData = otherOp.retain;\n          let transformedData: Op['retain'] =\n            typeof otherData === 'object' && otherData !== null\n              ? otherData\n              : length;\n          if (\n            typeof thisData === 'object' &&\n            thisData !== null &&\n            typeof otherData === 'object' &&\n            otherData !== null\n          ) {\n            const embedType = Object.keys(thisData)[0];\n            if (embedType === Object.keys(otherData)[0]) {\n              const handler = Delta.getHandler(embedType);\n              if (handler) {\n                transformedData = {\n                  [embedType]: handler.transform(\n                    thisData[embedType],\n                    otherData[embedType],\n                    priority,\n                  ),\n                };\n              }\n            }\n          }\n\n          // We retain either their retain or insert\n          delta.retain(\n            transformedData,\n            AttributeMap.transform(\n              thisOp.attributes,\n              otherOp.attributes,\n              priority,\n            ),\n          );\n        }\n      }\n    }\n    return delta.chop();\n  }\n\n  transformPosition(index: number, priority = false): number {\n    priority = !!priority;\n    const thisIter = new OpIterator(this.ops);\n    let offset = 0;\n    while (thisIter.hasNext() && offset <= index) {\n      const length = thisIter.peekLength();\n      const nextType = thisIter.peekType();\n      thisIter.next();\n      if (nextType === 'delete') {\n        index -= Math.min(length, index - offset);\n        continue;\n      } else if (nextType === 'insert' && (offset < index || !priority)) {\n        index += length;\n      }\n      offset += length;\n    }\n    return index;\n  }\n}\n\nexport default Delta;\n\nexport { Op, OpIterator, AttributeMap };\n\nif (typeof module === 'object') {\n  module.exports = Delta;\n  module.exports.default = Delta;\n}\n", "import AttributeMap from './AttributeMap';\n\ninterface Op {\n  // only one property out of {insert, delete, retain} will be present\n  insert?: string | Record<string, unknown>;\n  delete?: number;\n  retain?: number | Record<string, unknown>;\n\n  attributes?: AttributeMap;\n}\n\nnamespace Op {\n  export function length(op: Op): number {\n    if (typeof op.delete === 'number') {\n      return op.delete;\n    } else if (typeof op.retain === 'number') {\n      return op.retain;\n    } else if (typeof op.retain === 'object' && op.retain !== null) {\n      return 1;\n    } else {\n      return typeof op.insert === 'string' ? op.insert.length : 1;\n    }\n  }\n}\n\nexport default Op;\n", "import Op from './Op';\n\nexport default class Iterator {\n  ops: Op[];\n  index: number;\n  offset: number;\n\n  constructor(ops: Op[]) {\n    this.ops = ops;\n    this.index = 0;\n    this.offset = 0;\n  }\n\n  hasNext(): boolean {\n    return this.peekLength() < Infinity;\n  }\n\n  next(length?: number): Op {\n    if (!length) {\n      length = Infinity;\n    }\n    const nextOp = this.ops[this.index];\n    if (nextOp) {\n      const offset = this.offset;\n      const opLength = Op.length(nextOp);\n      if (length >= opLength - offset) {\n        length = opLength - offset;\n        this.index += 1;\n        this.offset = 0;\n      } else {\n        this.offset += length;\n      }\n      if (typeof nextOp.delete === 'number') {\n        return { delete: length };\n      } else {\n        const retOp: Op = {};\n        if (nextOp.attributes) {\n          retOp.attributes = nextOp.attributes;\n        }\n        if (typeof nextOp.retain === 'number') {\n          retOp.retain = length;\n        } else if (\n          typeof nextOp.retain === 'object' &&\n          nextOp.retain !== null\n        ) {\n          // offset should === 0, length should === 1\n          retOp.retain = nextOp.retain;\n        } else if (typeof nextOp.insert === 'string') {\n          retOp.insert = nextOp.insert.substr(offset, length);\n        } else {\n          // offset should === 0, length should === 1\n          retOp.insert = nextOp.insert;\n        }\n        return retOp;\n      }\n    } else {\n      return { retain: Infinity };\n    }\n  }\n\n  peek(): Op {\n    return this.ops[this.index];\n  }\n\n  peekLength(): number {\n    if (this.ops[this.index]) {\n      // Should never return 0 if our index is being managed correctly\n      return Op.length(this.ops[this.index]) - this.offset;\n    } else {\n      return Infinity;\n    }\n  }\n\n  peekType(): string {\n    const op = this.ops[this.index];\n    if (op) {\n      if (typeof op.delete === 'number') {\n        return 'delete';\n      } else if (\n        typeof op.retain === 'number' ||\n        (typeof op.retain === 'object' && op.retain !== null)\n      ) {\n        return 'retain';\n      } else {\n        return 'insert';\n      }\n    }\n    return 'retain';\n  }\n\n  rest(): Op[] {\n    if (!this.hasNext()) {\n      return [];\n    } else if (this.offset === 0) {\n      return this.ops.slice(this.index);\n    } else {\n      const offset = this.offset;\n      const index = this.index;\n      const next = this.next();\n      const rest = this.ops.slice(this.index);\n      this.offset = offset;\n      this.index = index;\n      return [next].concat(rest);\n    }\n  }\n}\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n", "import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n", "import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n", "import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n", "import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n", "import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n", "import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n", "import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n", "import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n", "import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n", "import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n", "/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n", "/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n", "/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n", "import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n", "import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n", "import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n", "/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n", "import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n", "/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n", "import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n", "import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n", "import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n", "import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n", "import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n", "import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n", "/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n", "import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n", "import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n", "import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n", "import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n", "import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n", "import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n", "import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n", "import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n", "/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n", "import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n", "import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n", "import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n", "import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n", "import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n", "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n", "import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n", "import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n", "import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n", "/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n", "import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n", "import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n", "import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n", "import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n", "import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n", "import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n", "import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n", "import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n", "import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n", "import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n", "/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n", "import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n", "import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n", "import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n", "import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n", "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n", "import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n", "/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n", "import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n", "/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n", "/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n", "import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n", "import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n", "import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n", "import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n", "import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n", "import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n", "import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n", "import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n", "import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n", "import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n", "import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n", "/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n", "import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n", "/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n", "import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n", "import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n", "/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n", "import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n", "/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n", "import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n", "import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n", "import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n", "import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n", "/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n", "import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n", "import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n", "/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n", "import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n", "import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n", "/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n", "import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n", "import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n", "/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n", "enum Scope {\n  TYPE = (1 << 2) - 1, // 0011 Lower two bits\n  LEVEL = ((1 << 2) - 1) << 2, // 1100 Higher two bits\n\n  ATTRIBUTE = (1 << 0) | LEVEL, // 1101\n  BLOT = (1 << 1) | LEVEL, // 1110\n  INLINE = (1 << 2) | TYPE, // 0111\n  BLOCK = (1 << 3) | TYPE, // 1011\n\n  BLOCK_BLOT = BLOCK & BLOT, // 1010\n  INLINE_BLOT = INLINE & BLOT, // 0110\n  BLOCK_ATTRIBUTE = BLOCK & ATTRIBUTE, // 1001\n  INLINE_ATTRIBUTE = INLINE & ATTRIBUTE, // 0101\n\n  ANY = TYPE | LEVEL,\n}\n\nexport default Scope;\n", "import Scope from '../scope.js';\n\nexport interface AttributorOptions {\n  scope?: Scope;\n  whitelist?: string[];\n}\n\nexport default class Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return Array.from(node.attributes).map((item: Attr) => item.name);\n  }\n\n  public scope: Scope;\n  public whitelist: string[] | undefined;\n\n  constructor(\n    public readonly attrName: string,\n    public readonly keyName: string,\n    options: AttributorOptions = {},\n  ) {\n    const attributeBit = Scope.TYPE & Scope.ATTRIBUTE;\n    this.scope =\n      options.scope != null\n        ? // Ignore type bits, force attribute bit\n          (options.scope & Scope.LEVEL) | attributeBit\n        : Scope.ATTRIBUTE;\n    if (options.whitelist != null) {\n      this.whitelist = options.whitelist;\n    }\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    node.setAttribute(this.keyName, value);\n    return true;\n  }\n\n  public canAdd(_node: HTMLElement, value: any): boolean {\n    if (this.whitelist == null) {\n      return true;\n    }\n    if (typeof value === 'string') {\n      return this.whitelist.indexOf(value.replace(/[\"']/g, '')) > -1;\n    } else {\n      return this.whitelist.indexOf(value) > -1;\n    }\n  }\n\n  public remove(node: HTMLElement): void {\n    node.removeAttribute(this.keyName);\n  }\n\n  public value(node: HTMLElement): any {\n    const value = node.getAttribute(this.keyName);\n    if (this.canAdd(node, value) && value) {\n      return value;\n    }\n    return '';\n  }\n}\n", "export default class ParchmentError extends Error {\n  public message: string;\n  public name: string;\n  public stack!: string;\n\n  constructor(message: string) {\n    message = '[Parchment] ' + message;\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n}\n", "import Attributor from './attributor/attributor.js';\nimport {\n  type Blot,\n  type BlotConstructor,\n  type Root,\n} from './blot/abstract/blot.js';\nimport ParchmentError from './error.js';\nimport Scope from './scope.js';\n\nexport type RegistryDefinition = Attributor | BlotConstructor;\n\nexport interface RegistryInterface {\n  create(scroll: Root, input: Node | string | Scope, value?: any): Blot;\n  query(query: string | Node | Scope, scope: Scope): RegistryDefinition | null;\n  register(...definitions: any[]): any;\n}\n\nexport default class Registry implements RegistryInterface {\n  public static blots = new WeakMap<Node, Blot>();\n\n  public static find(node?: Node | null, bubble = false): Blot | null {\n    if (node == null) {\n      return null;\n    }\n    if (this.blots.has(node)) {\n      return this.blots.get(node) || null;\n    }\n    if (bubble) {\n      let parentNode: Node | null = null;\n      try {\n        parentNode = node.parentNode;\n      } catch (err) {\n        // Probably hit a permission denied error.\n        // A known case is in Firefox, event targets can be anonymous DIVs\n        // inside an input element.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return null;\n      }\n      return this.find(parentNode, bubble);\n    }\n    return null;\n  }\n\n  private attributes: { [key: string]: Attributor } = {};\n  private classes: { [key: string]: BlotConstructor } = {};\n  private tags: { [key: string]: BlotConstructor } = {};\n  private types: { [key: string]: RegistryDefinition } = {};\n\n  public create(scroll: Root, input: Node | string | Scope, value?: any): Blot {\n    const match = this.query(input);\n    if (match == null) {\n      throw new ParchmentError(`Unable to create ${input} blot`);\n    }\n    const blotClass = match as BlotConstructor;\n    const node =\n      // @ts-expect-error Fix me later\n      input instanceof Node || input.nodeType === Node.TEXT_NODE\n        ? input\n        : blotClass.create(value);\n\n    const blot = new blotClass(scroll, node as Node, value);\n    Registry.blots.set(blot.domNode, blot);\n    return blot;\n  }\n\n  public find(node: Node | null, bubble = false): Blot | null {\n    return Registry.find(node, bubble);\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): RegistryDefinition | null {\n    let match;\n    if (typeof query === 'string') {\n      match = this.types[query] || this.attributes[query];\n      // @ts-expect-error Fix me later\n    } else if (query instanceof Text || query.nodeType === Node.TEXT_NODE) {\n      match = this.types.text;\n    } else if (typeof query === 'number') {\n      if (query & Scope.LEVEL & Scope.BLOCK) {\n        match = this.types.block;\n      } else if (query & Scope.LEVEL & Scope.INLINE) {\n        match = this.types.inline;\n      }\n    } else if (query instanceof Element) {\n      const names = (query.getAttribute('class') || '').split(/\\s+/);\n      names.some((name) => {\n        match = this.classes[name];\n        if (match) {\n          return true;\n        }\n        return false;\n      });\n      match = match || this.tags[query.tagName];\n    }\n    if (match == null) {\n      return null;\n    }\n    if (\n      'scope' in match &&\n      scope & Scope.LEVEL & match.scope &&\n      scope & Scope.TYPE & match.scope\n    ) {\n      return match;\n    }\n    return null;\n  }\n\n  public register(...definitions: RegistryDefinition[]): RegistryDefinition[] {\n    return definitions.map((definition) => {\n      const isBlot = 'blotName' in definition;\n      const isAttr = 'attrName' in definition;\n      if (!isBlot && !isAttr) {\n        throw new ParchmentError('Invalid definition');\n      } else if (isBlot && definition.blotName === 'abstract') {\n        throw new ParchmentError('Cannot register abstract class');\n      }\n      const key = isBlot\n        ? definition.blotName\n        : isAttr\n          ? definition.attrName\n          : (undefined as never); // already handled by above checks\n      this.types[key] = definition;\n\n      if (isAttr) {\n        if (typeof definition.keyName === 'string') {\n          this.attributes[definition.keyName] = definition;\n        }\n      } else if (isBlot) {\n        if (definition.className) {\n          this.classes[definition.className] = definition;\n        }\n        if (definition.tagName) {\n          if (Array.isArray(definition.tagName)) {\n            definition.tagName = definition.tagName.map((tagName: string) => {\n              return tagName.toUpperCase();\n            });\n          } else {\n            definition.tagName = definition.tagName.toUpperCase();\n          }\n          const tagNames = Array.isArray(definition.tagName)\n            ? definition.tagName\n            : [definition.tagName];\n          tagNames.forEach((tag: string) => {\n            if (this.tags[tag] == null || definition.className == null) {\n              this.tags[tag] = definition;\n            }\n          });\n        }\n      }\n      return definition;\n    });\n  }\n}\n", "import Attributor from './attributor.js';\n\nfunction match(node: HTMLElement, prefix: string): string[] {\n  const className = node.getAttribute('class') || '';\n  return className\n    .split(/\\s+/)\n    .filter((name) => name.indexOf(`${prefix}-`) === 0);\n}\n\nclass ClassAttributor extends Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return (node.getAttribute('class') || '')\n      .split(/\\s+/)\n      .map((name) => name.split('-').slice(0, -1).join('-'));\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    this.remove(node);\n    node.classList.add(`${this.keyName}-${value}`);\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    const matches = match(node, this.keyName);\n    matches.forEach((name) => {\n      node.classList.remove(name);\n    });\n    if (node.classList.length === 0) {\n      node.removeAttribute('class');\n    }\n  }\n\n  public value(node: HTMLElement): any {\n    const result = match(node, this.keyName)[0] || '';\n    const value = result.slice(this.keyName.length + 1); // +1 for hyphen\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default ClassAttributor;\n", "import Attributor from './attributor.js';\n\nfunction camelize(name: string): string {\n  const parts = name.split('-');\n  const rest = parts\n    .slice(1)\n    .map((part: string) => part[0].toUpperCase() + part.slice(1))\n    .join('');\n  return parts[0] + rest;\n}\n\nclass StyleAttributor extends Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return (node.getAttribute('style') || '').split(';').map((value) => {\n      const arr = value.split(':');\n      return arr[0].trim();\n    });\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    // @ts-expect-error Fix me later\n    node.style[camelize(this.keyName)] = value;\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    // @ts-expect-error Fix me later\n    node.style[camelize(this.keyName)] = '';\n    if (!node.getAttribute('style')) {\n      node.removeAttribute('style');\n    }\n  }\n\n  public value(node: HTMLElement): any {\n    // @ts-expect-error Fix me later\n    const value = node.style[camelize(this.keyName)];\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default StyleAttributor;\n", "import type { Formattable } from '../blot/abstract/blot.js';\nimport Registry from '../registry.js';\nimport Scope from '../scope.js';\nimport Attributor from './attributor.js';\nimport ClassAttributor from './class.js';\nimport StyleAttributor from './style.js';\n\nclass AttributorStore {\n  private attributes: { [key: string]: Attributor } = {};\n  private domNode: HTMLElement;\n\n  constructor(domNode: HTMLElement) {\n    this.domNode = domNode;\n    this.build();\n  }\n\n  public attribute(attribute: Attributor, value: any): void {\n    // verb\n    if (value) {\n      if (attribute.add(this.domNode, value)) {\n        if (attribute.value(this.domNode) != null) {\n          this.attributes[attribute.attrName] = attribute;\n        } else {\n          delete this.attributes[attribute.attrName];\n        }\n      }\n    } else {\n      attribute.remove(this.domNode);\n      delete this.attributes[attribute.attrName];\n    }\n  }\n\n  public build(): void {\n    this.attributes = {};\n    const blot = Registry.find(this.domNode);\n    if (blot == null) {\n      return;\n    }\n    const attributes = Attributor.keys(this.domNode);\n    const classes = ClassAttributor.keys(this.domNode);\n    const styles = StyleAttributor.keys(this.domNode);\n    attributes\n      .concat(classes)\n      .concat(styles)\n      .forEach((name) => {\n        const attr = blot.scroll.query(name, Scope.ATTRIBUTE);\n        if (attr instanceof Attributor) {\n          this.attributes[attr.attrName] = attr;\n        }\n      });\n  }\n\n  public copy(target: Formattable): void {\n    Object.keys(this.attributes).forEach((key) => {\n      const value = this.attributes[key].value(this.domNode);\n      target.format(key, value);\n    });\n  }\n\n  public move(target: Formattable): void {\n    this.copy(target);\n    Object.keys(this.attributes).forEach((key) => {\n      this.attributes[key].remove(this.domNode);\n    });\n    this.attributes = {};\n  }\n\n  public values(): { [key: string]: any } {\n    return Object.keys(this.attributes).reduce(\n      (attributes: { [key: string]: any }, name: string) => {\n        attributes[name] = this.attributes[name].value(this.domNode);\n        return attributes;\n      },\n      {},\n    );\n  }\n}\n\nexport default AttributorStore;\n", "import ParchmentError from '../../error.js';\nimport Registry from '../../registry.js';\nimport Scope from '../../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Parent,\n  Root,\n} from './blot.js';\n\nclass ShadowBlot implements Blot {\n  public static blotName = 'abstract';\n  public static className: string;\n  public static requiredContainer: BlotConstructor;\n  public static scope: Scope;\n  public static tagName: string | string[];\n\n  public static create(rawValue?: unknown): Node {\n    if (this.tagName == null) {\n      throw new ParchmentError('Blot definition missing tagName');\n    }\n    let node: HTMLElement;\n    let value: string | number | undefined;\n    if (Array.isArray(this.tagName)) {\n      if (typeof rawValue === 'string') {\n        value = rawValue.toUpperCase();\n        if (parseInt(value, 10).toString() === value) {\n          value = parseInt(value, 10);\n        }\n      } else if (typeof rawValue === 'number') {\n        value = rawValue;\n      }\n      if (typeof value === 'number') {\n        node = document.createElement(this.tagName[value - 1]);\n      } else if (value && this.tagName.indexOf(value) > -1) {\n        node = document.createElement(value);\n      } else {\n        node = document.createElement(this.tagName[0]);\n      }\n    } else {\n      node = document.createElement(this.tagName);\n    }\n    if (this.className) {\n      node.classList.add(this.className);\n    }\n    return node;\n  }\n\n  public prev: Blot | null;\n  public next: Blot | null;\n  // @ts-expect-error Fix me later\n  public parent: Parent;\n\n  // Hack for accessing inherited static methods\n  get statics(): any {\n    return this.constructor;\n  }\n  constructor(\n    public scroll: Root,\n    public domNode: Node,\n  ) {\n    Registry.blots.set(domNode, this);\n    this.prev = null;\n    this.next = null;\n  }\n\n  public attach(): void {\n    // Nothing to do\n  }\n\n  public clone(): Blot {\n    const domNode = this.domNode.cloneNode(false);\n    return this.scroll.create(domNode);\n  }\n\n  public detach(): void {\n    if (this.parent != null) {\n      this.parent.removeChild(this);\n    }\n    Registry.blots.delete(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    const blot = this.isolate(index, length);\n    blot.remove();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    const blot = this.isolate(index, length);\n    if (this.scroll.query(name, Scope.BLOT) != null && value) {\n      blot.wrap(name, value);\n    } else if (this.scroll.query(name, Scope.ATTRIBUTE) != null) {\n      const parent = this.scroll.create(this.statics.scope) as Parent &\n        Formattable;\n      blot.wrap(parent);\n      parent.format(name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const blot =\n      def == null\n        ? this.scroll.create('text', value)\n        : this.scroll.create(value, def);\n    const ref = this.split(index);\n    this.parent.insertBefore(blot, ref || undefined);\n  }\n\n  public isolate(index: number, length: number): Blot {\n    const target = this.split(index);\n    if (target == null) {\n      throw new Error('Attempt to isolate at end');\n    }\n    target.split(length);\n    return target;\n  }\n\n  public length(): number {\n    return 1;\n  }\n\n  public offset(root: Blot = this.parent): number {\n    if (this.parent == null || this === root) {\n      return 0;\n    }\n    return this.parent.children.offset(this) + this.parent.offset(root);\n  }\n\n  public optimize(_context?: { [key: string]: any }): void {\n    if (\n      this.statics.requiredContainer &&\n      !(this.parent instanceof this.statics.requiredContainer)\n    ) {\n      this.wrap(this.statics.requiredContainer.blotName);\n    }\n  }\n\n  public remove(): void {\n    if (this.domNode.parentNode != null) {\n      this.domNode.parentNode.removeChild(this.domNode);\n    }\n    this.detach();\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(replacement, this.next || undefined);\n      this.remove();\n    }\n    return replacement;\n  }\n\n  public split(index: number, _force?: boolean): Blot | null {\n    return index === 0 ? this : this.next;\n  }\n\n  public update(\n    _mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    // Nothing to do by default\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper =\n      typeof name === 'string'\n        ? (this.scroll.create(name, value) as Parent)\n        : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(wrapper, this.next || undefined);\n    }\n    if (typeof wrapper.appendChild !== 'function') {\n      throw new ParchmentError(`Cannot wrap ${name}`);\n    }\n    wrapper.appendChild(this);\n    return wrapper;\n  }\n}\n\nexport default ShadowBlot;\n", "import Scope from '../../scope.js';\nimport type { Leaf } from './blot.js';\nimport ShadowBlot from './shadow.js';\n\nclass LeafBlot extends ShadowBlot implements Leaf {\n  public static scope = Scope.INLINE_BLOT;\n\n  /**\n   * Returns the value represented by domNode if it is this Blot's type\n   * No checking that domNode can represent this Blot type is required so\n   * applications needing it should check externally before calling.\n   */\n  public static value(_domNode: Node): any {\n    return true;\n  }\n\n  /**\n   * Given location represented by node and offset from DOM Selection Range,\n   * return index to that location.\n   */\n  public index(node: Node, offset: number): number {\n    if (\n      this.domNode === node ||\n      this.domNode.compareDocumentPosition(node) &\n        Node.DOCUMENT_POSITION_CONTAINED_BY\n    ) {\n      return Math.min(offset, 1);\n    }\n    return -1;\n  }\n\n  /**\n   * Given index to location within blot, return node and offset representing\n   * that location, consumable by DOM Selection Range\n   */\n  public position(index: number, _inclusive?: boolean): [Node, number] {\n    const childNodes: Node[] = Array.from(this.parent.domNode.childNodes);\n    let offset = childNodes.indexOf(this.domNode);\n    if (index > 0) {\n      offset += 1;\n    }\n    return [this.parent.domNode, offset];\n  }\n\n  /**\n   * Return value represented by this blot\n   * Should not change without interaction from API or\n   * user change detectable by update()\n   */\n  public value(): any {\n    return {\n      [this.statics.blotName]: this.statics.value(this.domNode) || true,\n    };\n  }\n}\n\nexport default LeafBlot;\n", "import type LinkedNode from './linked-node.js';\n\nclass LinkedList<T extends LinkedNode> {\n  public head: T | null;\n  public tail: T | null;\n  public length: number;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  public append(...nodes: T[]): void {\n    this.insertBefore(nodes[0], null);\n    if (nodes.length > 1) {\n      const rest = nodes.slice(1);\n      this.append(...rest);\n    }\n  }\n\n  public at(index: number): T | null {\n    const next = this.iterator();\n    let cur = next();\n    while (cur && index > 0) {\n      index -= 1;\n      cur = next();\n    }\n    return cur;\n  }\n\n  public contains(node: T): boolean {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      if (cur === node) {\n        return true;\n      }\n      cur = next();\n    }\n    return false;\n  }\n\n  public indexOf(node: T): number {\n    const next = this.iterator();\n    let cur = next();\n    let index = 0;\n    while (cur) {\n      if (cur === node) {\n        return index;\n      }\n      index += 1;\n      cur = next();\n    }\n    return -1;\n  }\n\n  public insertBefore(node: T | null, refNode: T | null): void {\n    if (node == null) {\n      return;\n    }\n    this.remove(node);\n    node.next = refNode;\n    if (refNode != null) {\n      node.prev = refNode.prev;\n      if (refNode.prev != null) {\n        refNode.prev.next = node;\n      }\n      refNode.prev = node;\n      if (refNode === this.head) {\n        this.head = node;\n      }\n    } else if (this.tail != null) {\n      this.tail.next = node;\n      node.prev = this.tail;\n      this.tail = node;\n    } else {\n      node.prev = null;\n      this.head = this.tail = node;\n    }\n    this.length += 1;\n  }\n\n  public offset(target: T): number {\n    let index = 0;\n    let cur = this.head;\n    while (cur != null) {\n      if (cur === target) {\n        return index;\n      }\n      index += cur.length();\n      cur = cur.next as T;\n    }\n    return -1;\n  }\n\n  public remove(node: T): void {\n    if (!this.contains(node)) {\n      return;\n    }\n    if (node.prev != null) {\n      node.prev.next = node.next;\n    }\n    if (node.next != null) {\n      node.next.prev = node.prev;\n    }\n    if (node === this.head) {\n      this.head = node.next as T;\n    }\n    if (node === this.tail) {\n      this.tail = node.prev as T;\n    }\n    this.length -= 1;\n  }\n\n  public iterator(curNode: T | null = this.head): () => T | null {\n    // TODO use yield when we can\n    return (): T | null => {\n      const ret = curNode;\n      if (curNode != null) {\n        curNode = curNode.next as T;\n      }\n      return ret;\n    };\n  }\n\n  public find(index: number, inclusive = false): [T | null, number] {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      const length = cur.length();\n      if (\n        index < length ||\n        (inclusive &&\n          index === length &&\n          (cur.next == null || cur.next.length() !== 0))\n      ) {\n        return [cur, index];\n      }\n      index -= length;\n      cur = next();\n    }\n    return [null, 0];\n  }\n\n  public forEach(callback: (cur: T) => void): void {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      callback(cur);\n      cur = next();\n    }\n  }\n\n  public forEachAt(\n    index: number,\n    length: number,\n    callback: (cur: T, offset: number, length: number) => void,\n  ): void {\n    if (length <= 0) {\n      return;\n    }\n    const [startNode, offset] = this.find(index);\n    let curIndex = index - offset;\n    const next = this.iterator(startNode);\n    let cur = next();\n    while (cur && curIndex < index + length) {\n      const curLength = cur.length();\n      if (index > curIndex) {\n        callback(\n          cur,\n          index - curIndex,\n          Math.min(length, curIndex + curLength - index),\n        );\n      } else {\n        callback(cur, 0, Math.min(curLength, index + length - curIndex));\n      }\n      curIndex += curLength;\n      cur = next();\n    }\n  }\n\n  public map(callback: (cur: T) => any): any[] {\n    return this.reduce((memo: T[], cur: T) => {\n      memo.push(callback(cur));\n      return memo;\n    }, []);\n  }\n\n  public reduce<M>(callback: (memo: M, cur: T) => M, memo: M): M {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      memo = callback(memo, cur);\n      cur = next();\n    }\n    return memo;\n  }\n}\n\nexport default LinkedList;\n", "import LinkedList from '../../collection/linked-list.js';\nimport ParchmentError from '../../error.js';\nimport Scope from '../../scope.js';\nimport type { Blot, BlotConstructor, Parent, Root } from './blot.js';\nimport ShadowBlot from './shadow.js';\n\nfunction makeAttachedBlot(node: Node, scroll: Root): Blot {\n  const found = scroll.find(node);\n  if (found) return found;\n  try {\n    return scroll.create(node);\n  } catch (e) {\n    const blot = scroll.create(Scope.INLINE);\n    Array.from(node.childNodes).forEach((child: Node) => {\n      blot.domNode.appendChild(child);\n    });\n    if (node.parentNode) {\n      node.parentNode.replaceChild(blot.domNode, node);\n    }\n    blot.attach();\n    return blot;\n  }\n}\n\nclass ParentBlot extends ShadowBlot implements Parent {\n  /**\n   * Whitelist array of Blots that can be direct children.\n   */\n  public static allowedChildren?: BlotConstructor[];\n\n  /**\n   * Default child blot to be inserted if this blot becomes empty.\n   */\n  public static defaultChild?: BlotConstructor;\n  public static uiClass = '';\n\n  public children!: LinkedList<Blot>;\n  public domNode!: HTMLElement;\n  public uiNode: HTMLElement | null = null;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.build();\n  }\n\n  public appendChild(other: Blot): void {\n    this.insertBefore(other);\n  }\n\n  public attach(): void {\n    super.attach();\n    this.children.forEach((child) => {\n      child.attach();\n    });\n  }\n\n  public attachUI(node: HTMLElement): void {\n    if (this.uiNode != null) {\n      this.uiNode.remove();\n    }\n    this.uiNode = node;\n    if (ParentBlot.uiClass) {\n      this.uiNode.classList.add(ParentBlot.uiClass);\n    }\n    this.uiNode.setAttribute('contenteditable', 'false');\n    this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n  }\n\n  /**\n   * Called during construction, should fill its own children LinkedList.\n   */\n  public build(): void {\n    this.children = new LinkedList<Blot>();\n    // Need to be reversed for if DOM nodes already in order\n    Array.from(this.domNode.childNodes)\n      .filter((node: Node) => node !== this.uiNode)\n      .reverse()\n      .forEach((node: Node) => {\n        try {\n          const child = makeAttachedBlot(node, this.scroll);\n          this.insertBefore(child, this.children.head || undefined);\n        } catch (err) {\n          if (err instanceof ParchmentError) {\n            return;\n          } else {\n            throw err;\n          }\n        }\n      });\n  }\n\n  public deleteAt(index: number, length: number): void {\n    if (index === 0 && length === this.length()) {\n      return this.remove();\n    }\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.deleteAt(offset, childLength);\n    });\n  }\n\n  public descendant<T extends Blot>(\n    criteria: new (...args: any[]) => T,\n    index: number,\n  ): [T | null, number];\n  public descendant(\n    criteria: (blot: Blot) => boolean,\n    index: number,\n  ): [Blot | null, number];\n  public descendant(criteria: any, index = 0): [Blot | null, number] {\n    const [child, offset] = this.children.find(index);\n    if (\n      (criteria.blotName == null && criteria(child)) ||\n      (criteria.blotName != null && child instanceof criteria)\n    ) {\n      return [child as any, offset];\n    } else if (child instanceof ParentBlot) {\n      return child.descendant(criteria, offset);\n    } else {\n      return [null, -1];\n    }\n  }\n\n  public descendants<T extends Blot>(\n    criteria: new (...args: any[]) => T,\n    index?: number,\n    length?: number,\n  ): T[];\n  public descendants(\n    criteria: (blot: Blot) => boolean,\n    index?: number,\n    length?: number,\n  ): Blot[];\n  public descendants(\n    criteria: any,\n    index = 0,\n    length: number = Number.MAX_VALUE,\n  ): Blot[] {\n    let descendants: Blot[] = [];\n    let lengthLeft = length;\n    this.children.forEachAt(\n      index,\n      length,\n      (child: Blot, childIndex: number, childLength: number) => {\n        if (\n          (criteria.blotName == null && criteria(child)) ||\n          (criteria.blotName != null && child instanceof criteria)\n        ) {\n          descendants.push(child);\n        }\n        if (child instanceof ParentBlot) {\n          descendants = descendants.concat(\n            child.descendants(criteria, childIndex, lengthLeft),\n          );\n        }\n        lengthLeft -= childLength;\n      },\n    );\n    return descendants;\n  }\n\n  public detach(): void {\n    this.children.forEach((child) => {\n      child.detach();\n    });\n    super.detach();\n  }\n\n  public enforceAllowedChildren(): void {\n    let done = false;\n    this.children.forEach((child: Blot) => {\n      if (done) {\n        return;\n      }\n      const allowed = this.statics.allowedChildren.some(\n        (def: BlotConstructor) => child instanceof def,\n      );\n      if (allowed) {\n        return;\n      }\n      if (child.statics.scope === Scope.BLOCK_BLOT) {\n        if (child.next != null) {\n          this.splitAfter(child);\n        }\n        if (child.prev != null) {\n          this.splitAfter(child.prev);\n        }\n        child.parent.unwrap();\n        done = true;\n      } else if (child instanceof ParentBlot) {\n        child.unwrap();\n      } else {\n        child.remove();\n      }\n    });\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.formatAt(offset, childLength, name, value);\n    });\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const [child, offset] = this.children.find(index);\n    if (child) {\n      child.insertAt(offset, value, def);\n    } else {\n      const blot =\n        def == null\n          ? this.scroll.create('text', value)\n          : this.scroll.create(value, def);\n      this.appendChild(blot);\n    }\n  }\n\n  public insertBefore(childBlot: Blot, refBlot?: Blot | null): void {\n    if (childBlot.parent != null) {\n      childBlot.parent.children.remove(childBlot);\n    }\n    let refDomNode: Node | null = null;\n    this.children.insertBefore(childBlot, refBlot || null);\n    childBlot.parent = this;\n    if (refBlot != null) {\n      refDomNode = refBlot.domNode;\n    }\n    if (\n      this.domNode.parentNode !== childBlot.domNode ||\n      this.domNode.nextSibling !== refDomNode\n    ) {\n      this.domNode.insertBefore(childBlot.domNode, refDomNode);\n    }\n    childBlot.attach();\n  }\n\n  public length(): number {\n    return this.children.reduce((memo, child) => {\n      return memo + child.length();\n    }, 0);\n  }\n\n  public moveChildren(targetParent: Parent, refNode?: Blot | null): void {\n    this.children.forEach((child) => {\n      targetParent.insertBefore(child, refNode);\n    });\n  }\n\n  public optimize(context?: { [key: string]: any }): void {\n    super.optimize(context);\n    this.enforceAllowedChildren();\n    if (this.uiNode != null && this.uiNode !== this.domNode.firstChild) {\n      this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n    }\n    if (this.children.length === 0) {\n      if (this.statics.defaultChild != null) {\n        const child = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(child);\n        // TODO double check if necessary\n        // child.optimize(context);\n      } else {\n        this.remove();\n      }\n    }\n  }\n\n  public path(index: number, inclusive = false): [Blot, number][] {\n    const [child, offset] = this.children.find(index, inclusive);\n    const position: [Blot, number][] = [[this, index]];\n    if (child instanceof ParentBlot) {\n      return position.concat(child.path(offset, inclusive));\n    } else if (child != null) {\n      position.push([child, offset]);\n    }\n    return position;\n  }\n\n  public removeChild(child: Blot): void {\n    this.children.remove(child);\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (replacement instanceof ParentBlot) {\n      this.moveChildren(replacement);\n    }\n    return super.replaceWith(replacement);\n  }\n\n  public split(index: number, force = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.clone() as ParentBlot;\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    this.children.forEachAt(index, this.length(), (child, offset, _length) => {\n      const split = child.split(offset, force);\n      if (split != null) {\n        after.appendChild(split);\n      }\n    });\n    return after;\n  }\n\n  public splitAfter(child: Blot): Parent {\n    const after = this.clone() as ParentBlot;\n    while (child.next != null) {\n      after.appendChild(child.next);\n    }\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    return after;\n  }\n\n  public unwrap(): void {\n    if (this.parent) {\n      this.moveChildren(this.parent, this.next || undefined);\n    }\n    this.remove();\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    const addedNodes: Node[] = [];\n    const removedNodes: Node[] = [];\n    mutations.forEach((mutation) => {\n      if (mutation.target === this.domNode && mutation.type === 'childList') {\n        addedNodes.push(...mutation.addedNodes);\n        removedNodes.push(...mutation.removedNodes);\n      }\n    });\n    removedNodes.forEach((node: Node) => {\n      // Check node has actually been removed\n      // One exception is Chrome does not immediately remove IFRAMEs\n      // from DOM but MutationRecord is correct in its reported removal\n      if (\n        node.parentNode != null &&\n        // @ts-expect-error Fix me later\n        node.tagName !== 'IFRAME' &&\n        document.body.compareDocumentPosition(node) &\n          Node.DOCUMENT_POSITION_CONTAINED_BY\n      ) {\n        return;\n      }\n      const blot = this.scroll.find(node);\n      if (blot == null) {\n        return;\n      }\n      if (\n        blot.domNode.parentNode == null ||\n        blot.domNode.parentNode === this.domNode\n      ) {\n        blot.detach();\n      }\n    });\n    addedNodes\n      .filter((node) => {\n        return node.parentNode === this.domNode && node !== this.uiNode;\n      })\n      .sort((a, b) => {\n        if (a === b) {\n          return 0;\n        }\n        if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n          return 1;\n        }\n        return -1;\n      })\n      .forEach((node) => {\n        let refBlot: Blot | null = null;\n        if (node.nextSibling != null) {\n          refBlot = this.scroll.find(node.nextSibling);\n        }\n        const blot = makeAttachedBlot(node, this.scroll);\n        if (blot.next !== refBlot || blot.next == null) {\n          if (blot.parent != null) {\n            blot.parent.removeChild(this);\n          }\n          this.insertBefore(blot, refBlot || undefined);\n        }\n      });\n    this.enforceAllowedChildren();\n  }\n}\n\nexport default ParentBlot;\n", "import Attributor from '../attributor/attributor.js';\nimport AttributorStore from '../attributor/store.js';\nimport Scope from '../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Parent,\n  Root,\n} from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\nimport ParentBlot from './abstract/parent.js';\n\n// Shallow object comparison\nfunction isEqual(\n  obj1: Record<string, unknown>,\n  obj2: Record<string, unknown>,\n): boolean {\n  if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  for (const prop in obj1) {\n    if (obj1[prop] !== obj2[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass InlineBlot extends ParentBlot implements Formattable {\n  public static allowedChildren: BlotConstructor[] = [InlineBlot, LeafBlot];\n  public static blotName = 'inline';\n  public static scope = Scope.INLINE_BLOT;\n  public static tagName: string | string[] = 'SPAN';\n\n  static create(value?: unknown) {\n    return super.create(value) as HTMLElement;\n  }\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(InlineBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n    return undefined;\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any): void {\n    if (name === this.statics.blotName && !value) {\n      this.children.forEach((child) => {\n        if (!(child instanceof InlineBlot)) {\n          child = child.wrap(InlineBlot.blotName, true);\n        }\n        this.attributes.copy(child as InlineBlot);\n      });\n      this.unwrap();\n    } else {\n      const format = this.scroll.query(name, Scope.INLINE);\n      if (format == null) {\n        return;\n      }\n      if (format instanceof Attributor) {\n        this.attributes.attribute(format, value);\n      } else if (\n        value &&\n        (name !== this.statics.blotName || this.formats()[name] !== value)\n      ) {\n        this.replaceWith(name, value);\n      }\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (\n      this.formats()[name] != null ||\n      this.scroll.query(name, Scope.ATTRIBUTE)\n    ) {\n      const blot = this.isolate(index, length) as InlineBlot;\n      blot.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    const formats = this.formats();\n    if (Object.keys(formats).length === 0) {\n      return this.unwrap(); // unformatted span\n    }\n    const next = this.next;\n    if (\n      next instanceof InlineBlot &&\n      next.prev === this &&\n      isEqual(formats, next.formats())\n    ) {\n      next.moveChildren(this);\n      next.remove();\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as InlineBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      (mutation) =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper = super.wrap(name, value);\n    if (wrapper instanceof InlineBlot) {\n      this.attributes.move(wrapper);\n    }\n    return wrapper;\n  }\n}\n\nexport default InlineBlot;\n", "import Attributor from '../attributor/attributor.js';\nimport AttributorStore from '../attributor/store.js';\nimport Scope from '../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Root,\n} from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\nimport ParentBlot from './abstract/parent.js';\nimport InlineBlot from './inline.js';\n\nclass BlockBlot extends ParentBlot implements Formattable {\n  public static blotName = 'block';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName: string | string[] = 'P';\n  public static allowedChildren: BlotConstructor[] = [\n    InlineBlot,\n    BlockBlot,\n    LeafBlot,\n  ];\n\n  static create(value?: unknown) {\n    return super.create(value) as HTMLElement;\n  }\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(BlockBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any): void {\n    const format = this.scroll.query(name, Scope.BLOCK);\n    if (format == null) {\n      return;\n    } else if (format instanceof Attributor) {\n      this.attributes.attribute(format, value);\n    } else if (name === this.statics.blotName && !value) {\n      this.replaceWith(BlockBlot.blotName);\n    } else if (\n      value &&\n      (name !== this.statics.blotName || this.formats()[name] !== value)\n    ) {\n      this.replaceWith(name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (this.scroll.query(name, Scope.BLOCK) != null) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null || this.scroll.query(value, Scope.INLINE) != null) {\n      // Insert text or inline\n      super.insertAt(index, value, def);\n    } else {\n      const after = this.split(index);\n      if (after != null) {\n        const blot = this.scroll.create(value, def);\n        after.parent.insertBefore(blot, after);\n      } else {\n        throw new Error('Attempt to insertAt after block boundaries');\n      }\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as BlockBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      (mutation) =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n}\n\nexport default BlockBlot;\n", "import Scope from '../../scope.js';\nimport BlockBlot from '../block.js';\nimport ParentBlot from './parent.js';\n\nclass ContainerBlot extends ParentBlot {\n  public static blotName = 'container';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName: string | string[];\n\n  public prev!: BlockBlot | ContainerBlot | null;\n  public next!: BlockBlot | ContainerBlot | null;\n\n  public checkMerge(): boolean {\n    return (\n      this.next !== null && this.next.statics.blotName === this.statics.blotName\n    );\n  }\n\n  public deleteAt(index: number, length: number): void {\n    super.deleteAt(index, length);\n    this.enforceAllowedChildren();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    super.formatAt(index, length, name, value);\n    this.enforceAllowedChildren();\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    super.insertAt(index, value, def);\n    this.enforceAllowedChildren();\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    if (this.children.length > 0 && this.next != null && this.checkMerge()) {\n      this.next.moveChildren(this);\n      this.next.remove();\n    }\n  }\n}\n\nexport default ContainerBlot;\n", "import type { Formattable, Root } from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\n\nclass EmbedBlot extends LeafBlot implements Formattable {\n  public static formats(_domNode: HTMLElement, _scroll: Root): any {\n    return undefined;\n  }\n\n  public format(name: string, value: any): void {\n    // super.formatAt wraps, which is what we want in general,\n    // but this allows subclasses to overwrite for formats\n    // that just apply to particular embeds\n    super.formatAt(0, this.length(), name, value);\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (index === 0 && length === this.length()) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    return this.statics.formats(this.domNode, this.scroll);\n  }\n}\n\nexport default EmbedBlot;\n", "import Registry, { type RegistryDefinition } from '../registry.js';\nimport Scope from '../scope.js';\nimport type { Blot, BlotConstructor, Root } from './abstract/blot.js';\nimport ContainerBlot from './abstract/container.js';\nimport ParentBlot from './abstract/parent.js';\nimport BlockBlot from './block.js';\n\nconst OBSERVER_CONFIG = {\n  attributes: true,\n  characterData: true,\n  characterDataOldValue: true,\n  childList: true,\n  subtree: true,\n};\n\nconst MAX_OPTIMIZE_ITERATIONS = 100;\n\nclass ScrollBlot extends ParentBlot implements Root {\n  public static blotName = 'scroll';\n  public static defaultChild = BlockBlot;\n  public static allowedChildren: BlotConstructor[] = [BlockBlot, ContainerBlot];\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName = 'DIV';\n\n  public observer: MutationObserver;\n\n  constructor(\n    public registry: Registry,\n    node: HTMLDivElement,\n  ) {\n    // @ts-expect-error scroll is the root with no parent\n    super(null, node);\n    this.scroll = this;\n    this.build();\n    this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n      this.update(mutations);\n    });\n    this.observer.observe(this.domNode, OBSERVER_CONFIG);\n    this.attach();\n  }\n\n  public create(input: Node | string | Scope, value?: any): Blot {\n    return this.registry.create(this, input, value);\n  }\n\n  public find(node: Node | null, bubble = false): Blot | null {\n    const blot = this.registry.find(node, bubble);\n    if (!blot) {\n      return null;\n    }\n    if (blot.scroll === this) {\n      return blot;\n    }\n    return bubble ? this.find(blot.scroll.domNode.parentNode, true) : null;\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): RegistryDefinition | null {\n    return this.registry.query(query, scope);\n  }\n\n  public register(...definitions: RegistryDefinition[]) {\n    return this.registry.register(...definitions);\n  }\n\n  public build(): void {\n    if (this.scroll == null) {\n      return;\n    }\n    super.build();\n  }\n\n  public detach(): void {\n    super.detach();\n    this.observer.disconnect();\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.update();\n    if (index === 0 && length === this.length()) {\n      this.children.forEach((child) => {\n        child.remove();\n      });\n    } else {\n      super.deleteAt(index, length);\n    }\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.update();\n    super.formatAt(index, length, name, value);\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    this.update();\n    super.insertAt(index, value, def);\n  }\n\n  public optimize(context?: { [key: string]: any }): void;\n  public optimize(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void;\n  public optimize(mutations: any = [], context: any = {}): void {\n    super.optimize(context);\n    const mutationsMap = context.mutationsMap || new WeakMap();\n    // We must modify mutations directly, cannot make copy and then modify\n    let records = Array.from(this.observer.takeRecords());\n    // Array.push currently seems to be implemented by a non-tail recursive function\n    // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n    while (records.length > 0) {\n      mutations.push(records.pop());\n    }\n    const mark = (blot: Blot | null, markParent = true): void => {\n      if (blot == null || blot === this) {\n        return;\n      }\n      if (blot.domNode.parentNode == null) {\n        return;\n      }\n      if (!mutationsMap.has(blot.domNode)) {\n        mutationsMap.set(blot.domNode, []);\n      }\n      if (markParent) {\n        mark(blot.parent);\n      }\n    };\n    const optimize = (blot: Blot): void => {\n      // Post-order traversal\n      if (!mutationsMap.has(blot.domNode)) {\n        return;\n      }\n      if (blot instanceof ParentBlot) {\n        blot.children.forEach(optimize);\n      }\n      mutationsMap.delete(blot.domNode);\n      blot.optimize(context);\n    };\n    let remaining = mutations;\n    for (let i = 0; remaining.length > 0; i += 1) {\n      if (i >= MAX_OPTIMIZE_ITERATIONS) {\n        throw new Error('[Parchment] Maximum optimize iterations reached');\n      }\n      remaining.forEach((mutation: MutationRecord) => {\n        const blot = this.find(mutation.target, true);\n        if (blot == null) {\n          return;\n        }\n        if (blot.domNode === mutation.target) {\n          if (mutation.type === 'childList') {\n            mark(this.find(mutation.previousSibling, false));\n            Array.from(mutation.addedNodes).forEach((node: Node) => {\n              const child = this.find(node, false);\n              mark(child, false);\n              if (child instanceof ParentBlot) {\n                child.children.forEach((grandChild: Blot) => {\n                  mark(grandChild, false);\n                });\n              }\n            });\n          } else if (mutation.type === 'attributes') {\n            mark(blot.prev);\n          }\n        }\n        mark(blot);\n      });\n      this.children.forEach(optimize);\n      remaining = Array.from(this.observer.takeRecords());\n      records = remaining.slice();\n      while (records.length > 0) {\n        mutations.push(records.pop());\n      }\n    }\n  }\n\n  public update(\n    mutations?: MutationRecord[],\n    context: { [key: string]: any } = {},\n  ): void {\n    mutations = mutations || this.observer.takeRecords();\n    const mutationsMap = new WeakMap();\n    mutations\n      .map((mutation: MutationRecord) => {\n        const blot = this.find(mutation.target, true);\n        if (blot == null) {\n          return null;\n        }\n        if (mutationsMap.has(blot.domNode)) {\n          mutationsMap.get(blot.domNode).push(mutation);\n          return null;\n        } else {\n          mutationsMap.set(blot.domNode, [mutation]);\n          return blot;\n        }\n      })\n      .forEach((blot: Blot | null) => {\n        if (blot != null && blot !== this && mutationsMap.has(blot.domNode)) {\n          blot.update(mutationsMap.get(blot.domNode) || [], context);\n        }\n      });\n    context.mutationsMap = mutationsMap;\n    if (mutationsMap.has(this.domNode)) {\n      super.update(mutationsMap.get(this.domNode), context);\n    }\n    this.optimize(mutations, context);\n  }\n}\n\nexport default ScrollBlot;\n", "import Scope from '../scope.js';\nimport type { Blot, Leaf, Root } from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\n\nclass TextBlot extends LeafBlot implements Leaf {\n  public static readonly blotName = 'text';\n  public static scope = Scope.INLINE_BLOT;\n\n  public static create(value: string): Text {\n    return document.createTextNode(value);\n  }\n\n  public static value(domNode: Text): string {\n    return domNode.data;\n  }\n\n  public domNode!: Text;\n  protected text: string;\n\n  constructor(scroll: Root, node: Node) {\n    super(scroll, node);\n    this.text = this.statics.value(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.domNode.data = this.text =\n      this.text.slice(0, index) + this.text.slice(index + length);\n  }\n\n  public index(node: Node, offset: number): number {\n    if (this.domNode === node) {\n      return offset;\n    }\n    return -1;\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null) {\n      this.text = this.text.slice(0, index) + value + this.text.slice(index);\n      this.domNode.data = this.text;\n    } else {\n      super.insertAt(index, value, def);\n    }\n  }\n\n  public length(): number {\n    return this.text.length;\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    this.text = this.statics.value(this.domNode);\n    if (this.text.length === 0) {\n      this.remove();\n    } else if (this.next instanceof TextBlot && this.next.prev === this) {\n      this.insertAt(this.length(), (this.next as TextBlot).value());\n      this.next.remove();\n    }\n  }\n\n  public position(index: number, _inclusive = false): [Node, number] {\n    return [this.domNode, index];\n  }\n\n  public split(index: number, force = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.scroll.create(this.domNode.splitText(index));\n    this.parent.insertBefore(after, this.next || undefined);\n    this.text = this.statics.value(this.domNode);\n    return after;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.domNode\n        );\n      })\n    ) {\n      this.text = this.statics.value(this.domNode);\n    }\n  }\n\n  public value(): string {\n    return this.text;\n  }\n}\n\nexport default TextBlot;\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};", "// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();", "__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }", "// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};", "import { ClassAttributor, Scope } from 'parchment';\n\nclass IndentAttributor extends ClassAttributor {\n  add(node: HTMLElement, value: string | number) {\n    let normalizedValue = 0;\n    if (value === '+1' || value === '-1') {\n      const indent = this.value(node) || 0;\n      normalizedValue = value === '+1' ? indent + 1 : indent - 1;\n    } else if (typeof value === 'number') {\n      normalizedValue = value;\n    }\n    if (normalizedValue === 0) {\n      this.remove(node);\n      return true;\n    }\n    return super.add(node, normalizedValue.toString());\n  }\n\n  canAdd(node: HTMLElement, value: string) {\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value, 10));\n  }\n\n  value(node: HTMLElement) {\n    return parseInt(super.value(node), 10) || undefined; // Don't return NaN\n  }\n}\n\nconst IndentClass = new IndentAttributor('indent', 'ql-indent', {\n  scope: Scope.BLOCK,\n  // @ts-expect-error\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8],\n});\n\nexport default IndentClass;\n", "import Block from '../blots/block.js';\n\nclass Blockquote extends Block {\n  static blotName = 'blockquote';\n  static tagName = 'blockquote';\n}\n\nexport default Blockquote;\n", "import Block from '../blots/block.js';\n\nclass Header extends Block {\n  static blotName = 'header';\n  static tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n\n  static formats(domNode: Element) {\n    return this.tagName.indexOf(domNode.tagName) + 1;\n  }\n}\n\nexport default Header;\n", "import Block from '../blots/block.js';\nimport Container from '../blots/container.js';\nimport type Scroll from '../blots/scroll.js';\nimport Quill from '../core/quill.js';\n\nclass ListContainer extends Container {}\nListContainer.blotName = 'list-container';\nListContainer.tagName = 'OL';\n\nclass ListItem extends Block {\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    node.setAttribute('data-list', value);\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('data-list') || undefined;\n  }\n\n  static register() {\n    Quill.register(ListContainer);\n  }\n\n  constructor(scroll: Scroll, domNode: HTMLElement) {\n    super(scroll, domNode);\n    const ui = domNode.ownerDocument.createElement('span');\n    const listEventHandler = (e: Event) => {\n      if (!scroll.isEnabled()) return;\n      const format = this.statics.formats(domNode, scroll);\n      if (format === 'checked') {\n        this.format('list', 'unchecked');\n        e.preventDefault();\n      } else if (format === 'unchecked') {\n        this.format('list', 'checked');\n        e.preventDefault();\n      }\n    };\n    ui.addEventListener('mousedown', listEventHandler);\n    ui.addEventListener('touchstart', listEventHandler);\n    this.attachUI(ui);\n  }\n\n  format(name: string, value: string) {\n    if (name === this.statics.blotName && value) {\n      this.domNode.setAttribute('data-list', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n}\nListItem.blotName = 'list';\nListItem.tagName = 'LI';\n\nListContainer.allowedChildren = [ListItem];\nListItem.requiredContainer = ListContainer;\n\nexport { ListContainer, ListItem as default };\n", "import Inline from '../blots/inline.js';\n\nclass Bold extends Inline {\n  static blotName = 'bold';\n  static tagName = ['STRONG', 'B'];\n\n  static create() {\n    return super.create();\n  }\n\n  static formats() {\n    return true;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (this.domNode.tagName !== this.statics.tagName[0]) {\n      this.replaceWith(this.statics.blotName);\n    }\n  }\n}\n\nexport default Bold;\n", "import Inline from '../blots/inline.js';\n\nclass Link extends Inline {\n  static blotName = 'link';\n  static tagName = 'A';\n  static SANITIZED_URL = 'about:blank';\n  static PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel', 'sms'];\n\n  static create(value: string) {\n    const node = super.create(value) as HTMLElement;\n    node.setAttribute('href', this.sanitize(value));\n    node.setAttribute('rel', 'noopener noreferrer');\n    node.setAttribute('target', '_blank');\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('href');\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\n  }\n\n  format(name: string, value: unknown) {\n    if (name !== this.statics.blotName || !value) {\n      super.format(name, value);\n    } else {\n      // @ts-expect-error\n      this.domNode.setAttribute('href', this.constructor.sanitize(value));\n    }\n  }\n}\n\nfunction sanitize(url: string, protocols: string[]) {\n  const anchor = document.createElement('a');\n  anchor.href = url;\n  const protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\n  return protocols.indexOf(protocol) > -1;\n}\n\nexport { Link as default, sanitize };\n", "import Inline from '../blots/inline.js';\n\nclass Script extends Inline {\n  static blotName = 'script';\n  static tagName = ['SUB', 'SUP'];\n\n  static create(value: 'super' | 'sub' | (string & {})) {\n    if (value === 'super') {\n      return document.createElement('sup');\n    }\n    if (value === 'sub') {\n      return document.createElement('sub');\n    }\n    return super.create(value);\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.tagName === 'SUB') return 'sub';\n    if (domNode.tagName === 'SUP') return 'super';\n    return undefined;\n  }\n}\n\nexport default Script;\n", "import Inline from '../blots/inline.js';\n\nclass Underline extends Inline {\n  static blotName = 'underline';\n  static tagName = 'U';\n}\n\nexport default Underline;\n", "import Embed from '../blots/embed.js';\n\nclass Formula extends Embed {\n  static blotName = 'formula';\n  static className = 'ql-formula';\n  static tagName = 'SPAN';\n\n  static create(value: string) {\n    // @ts-expect-error\n    if (window.katex == null) {\n      throw new Error('Formula module requires KaTeX.');\n    }\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      // @ts-expect-error\n      window.katex.render(value, node, {\n        throwOnError: false,\n        errorColor: '#f00',\n      });\n      node.setAttribute('data-value', value);\n    }\n    return node;\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('data-value');\n  }\n\n  html() {\n    const { formula } = this.value();\n    return `<span>${formula}</span>`;\n  }\n}\n\nexport default Formula;\n", "import { EmbedBlot } from 'parchment';\nimport { sanitize } from './link.js';\n\nconst ATTRIBUTES = ['alt', 'height', 'width'];\n\nclass Image extends EmbedBlot {\n  static blotName = 'image';\n  static tagName = 'IMG';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      node.setAttribute('src', this.sanitize(value));\n    }\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static match(url: string) {\n    return /\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url);\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, ['http', 'https', 'data']) ? url : '//:0';\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLImageElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n}\n\nexport default Image;\n", "import { BlockEmbed } from '../blots/block.js';\nimport Link from './link.js';\n\nconst ATTRIBUTES = ['height', 'width'];\n\nclass Video extends BlockEmbed {\n  static blotName = 'video';\n  static className = 'ql-video';\n  static tagName = 'IFRAME';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    node.setAttribute('frameborder', '0');\n    node.setAttribute('allowfullscreen', 'true');\n    node.setAttribute('src', this.sanitize(value));\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static sanitize(url: string) {\n    return Link.sanitize(url);\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLVideoElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  html() {\n    const { video } = this.value();\n    return `<a href=\"${video}\">${video}</a>`;\n  }\n}\n\nexport default Video;\n", "import Delta from 'quill-delta';\nimport { ClassAttributor, Scope } from 'parchment';\nimport type { Blot, ScrollBlot } from 'parchment';\nimport Inline from '../blots/inline.js';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport { blockDelta } from '../blots/block.js';\nimport BreakBlot from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport CodeBlock, { CodeBlockContainer } from '../formats/code.js';\nimport { traverse } from './clipboard.js';\n\nconst TokenAttributor = new ClassAttributor('code-token', 'hljs', {\n  scope: Scope.INLINE,\n});\nclass CodeToken extends Inline {\n  static formats(node: Element, scroll: ScrollBlot) {\n    while (node != null && node !== scroll.domNode) {\n      if (node.classList && node.classList.contains(CodeBlock.className)) {\n        // @ts-expect-error\n        return super.formats(node, scroll);\n      }\n      // @ts-expect-error\n      node = node.parentNode;\n    }\n    return undefined;\n  }\n\n  constructor(scroll: ScrollBlot, domNode: Node, value: unknown) {\n    // @ts-expect-error\n    super(scroll, domNode, value);\n    TokenAttributor.add(this.domNode, value);\n  }\n\n  format(format: string, value: unknown) {\n    if (format !== CodeToken.blotName) {\n      super.format(format, value);\n    } else if (value) {\n      TokenAttributor.add(this.domNode, value);\n    } else {\n      TokenAttributor.remove(this.domNode);\n      this.domNode.classList.remove(this.statics.className);\n    }\n  }\n\n  optimize(...args: unknown[]) {\n    // @ts-expect-error\n    super.optimize(...args);\n    if (!TokenAttributor.value(this.domNode)) {\n      this.unwrap();\n    }\n  }\n}\nCodeToken.blotName = 'code-token';\nCodeToken.className = 'ql-token';\n\nclass SyntaxCodeBlock extends CodeBlock {\n  static create(value: unknown) {\n    const domNode = super.create(value);\n    if (typeof value === 'string') {\n      domNode.setAttribute('data-language', value);\n    }\n    return domNode;\n  }\n\n  static formats(domNode: Node) {\n    // @ts-expect-error\n    return domNode.getAttribute('data-language') || 'plain';\n  }\n\n  static register() {} // Syntax module will register\n\n  format(name: string, value: unknown) {\n    if (name === this.statics.blotName && value) {\n      // @ts-expect-error\n      this.domNode.setAttribute('data-language', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  replaceWith(name: string | Blot, value?: any) {\n    this.formatAt(0, this.length(), CodeToken.blotName, false);\n    return super.replaceWith(name, value);\n  }\n}\n\nclass SyntaxCodeBlockContainer extends CodeBlockContainer {\n  forceNext?: boolean;\n  cachedText?: string | null;\n\n  attach() {\n    super.attach();\n    this.forceNext = false;\n    // @ts-expect-error\n    this.scroll.emitMount(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n      this.children.forEach((child) => {\n        // @ts-expect-error\n        child.format(name, value);\n      });\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n    }\n    super.formatAt(index, length, name, value);\n  }\n\n  highlight(\n    highlight: (text: string, language: string) => Delta,\n    forced = false,\n  ) {\n    if (this.children.head == null) return;\n    const nodes = Array.from(this.domNode.childNodes).filter(\n      (node) => node !== this.uiNode,\n    );\n    const text = `${nodes.map((node) => node.textContent).join('\\n')}\\n`;\n    const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n    if (forced || this.forceNext || this.cachedText !== text) {\n      if (text.trim().length > 0 || this.cachedText == null) {\n        const oldDelta = this.children.reduce((delta, child) => {\n          // @ts-expect-error\n          return delta.concat(blockDelta(child, false));\n        }, new Delta());\n        const delta = highlight(text, language);\n        oldDelta.diff(delta).reduce((index, { retain, attributes }) => {\n          // Should be all retains\n          if (!retain) return index;\n          if (attributes) {\n            Object.keys(attributes).forEach((format) => {\n              if (\n                [SyntaxCodeBlock.blotName, CodeToken.blotName].includes(format)\n              ) {\n                // @ts-expect-error\n                this.formatAt(index, retain, format, attributes[format]);\n              }\n            });\n          }\n          // @ts-expect-error\n          return index + retain;\n        }, 0);\n      }\n      this.cachedText = text;\n      this.forceNext = false;\n    }\n  }\n\n  html(index: number, length: number) {\n    const [codeBlock] = this.children.find(index);\n    const language = codeBlock\n      ? SyntaxCodeBlock.formats(codeBlock.domNode)\n      : 'plain';\n\n    return `<pre data-language=\"${language}\">\\n${escapeText(\n      this.code(index, length),\n    )}\\n</pre>`;\n  }\n\n  optimize(context: Record<string, any>) {\n    super.optimize(context);\n    if (\n      this.parent != null &&\n      this.children.head != null &&\n      this.uiNode != null\n    ) {\n      const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n      // @ts-expect-error\n      if (language !== this.uiNode.value) {\n        // @ts-expect-error\n        this.uiNode.value = language;\n      }\n    }\n  }\n}\n\nSyntaxCodeBlockContainer.allowedChildren = [SyntaxCodeBlock];\nSyntaxCodeBlock.requiredContainer = SyntaxCodeBlockContainer;\nSyntaxCodeBlock.allowedChildren = [CodeToken, CursorBlot, TextBlot, BreakBlot];\n\ninterface SyntaxOptions {\n  interval: number;\n  languages: { key: string; label: string }[];\n  hljs: any;\n}\n\nconst highlight = (lib: any, language: string, text: string) => {\n  if (typeof lib.versionString === 'string') {\n    const majorVersion = lib.versionString.split('.')[0];\n    if (parseInt(majorVersion, 10) >= 11) {\n      return lib.highlight(text, { language }).value;\n    }\n  }\n  return lib.highlight(language, text).value;\n};\n\nclass Syntax extends Module<SyntaxOptions> {\n  static DEFAULTS: SyntaxOptions & { hljs: any };\n\n  static register() {\n    Quill.register(CodeToken, true);\n    Quill.register(SyntaxCodeBlock, true);\n    Quill.register(SyntaxCodeBlockContainer, true);\n  }\n\n  languages: Record<string, true>;\n\n  constructor(quill: Quill, options: Partial<SyntaxOptions>) {\n    super(quill, options);\n    if (this.options.hljs == null) {\n      throw new Error(\n        'Syntax module requires highlight.js. Please include the library on the page before Quill.',\n      );\n    }\n    // @ts-expect-error Fix me later\n    this.languages = this.options.languages.reduce(\n      (memo: Record<string, unknown>, { key }) => {\n        memo[key] = true;\n        return memo;\n      },\n      {},\n    );\n    this.highlightBlot = this.highlightBlot.bind(this);\n    this.initListener();\n    this.initTimer();\n  }\n\n  initListener() {\n    this.quill.on(Quill.events.SCROLL_BLOT_MOUNT, (blot: Blot) => {\n      if (!(blot instanceof SyntaxCodeBlockContainer)) return;\n      const select = this.quill.root.ownerDocument.createElement('select');\n      // @ts-expect-error Fix me later\n      this.options.languages.forEach(({ key, label }) => {\n        const option = select.ownerDocument.createElement('option');\n        option.textContent = label;\n        option.setAttribute('value', key);\n        select.appendChild(option);\n      });\n      select.addEventListener('change', () => {\n        blot.format(SyntaxCodeBlock.blotName, select.value);\n        this.quill.root.focus(); // Prevent scrolling\n        this.highlight(blot, true);\n      });\n      if (blot.uiNode == null) {\n        blot.attachUI(select);\n        if (blot.children.head) {\n          select.value = SyntaxCodeBlock.formats(blot.children.head.domNode);\n        }\n      }\n    });\n  }\n\n  initTimer() {\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    this.quill.on(Quill.events.SCROLL_OPTIMIZE, () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        this.highlight();\n        timer = null;\n      }, this.options.interval);\n    });\n  }\n\n  highlight(blot: SyntaxCodeBlockContainer | null = null, force = false) {\n    if (this.quill.selection.composing) return;\n    this.quill.update(Quill.sources.USER);\n    const range = this.quill.getSelection();\n    const blots =\n      blot == null\n        ? this.quill.scroll.descendants(SyntaxCodeBlockContainer)\n        : [blot];\n    blots.forEach((container) => {\n      container.highlight(this.highlightBlot, force);\n    });\n    this.quill.update(Quill.sources.SILENT);\n    if (range != null) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    }\n  }\n\n  highlightBlot(text: string, language = 'plain') {\n    language = this.languages[language] ? language : 'plain';\n    if (language === 'plain') {\n      return escapeText(text)\n        .split('\\n')\n        .reduce((delta, line, i) => {\n          if (i !== 0) {\n            delta.insert('\\n', { [CodeBlock.blotName]: language });\n          }\n          return delta.insert(line);\n        }, new Delta());\n    }\n    const container = this.quill.root.ownerDocument.createElement('div');\n    container.classList.add(CodeBlock.className);\n    container.innerHTML = highlight(this.options.hljs, language, text);\n    return traverse(\n      this.quill.scroll,\n      container,\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          const value = TokenAttributor.value(node);\n          if (value) {\n            return delta.compose(\n              new Delta().retain(delta.length(), {\n                [CodeToken.blotName]: value,\n              }),\n            );\n          }\n          return delta;\n        },\n      ],\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          return node.data.split('\\n').reduce((memo, nodeText, i) => {\n            if (i !== 0) memo.insert('\\n', { [CodeBlock.blotName]: language });\n            return memo.insert(nodeText);\n          }, delta);\n        },\n      ],\n      new WeakMap(),\n    );\n  }\n}\nSyntax.DEFAULTS = {\n  hljs: (() => {\n    return window.hljs;\n  })(),\n  interval: 1000,\n  languages: [\n    { key: 'plain', label: 'Plain' },\n    { key: 'bash', label: 'Bash' },\n    { key: 'cpp', label: 'C++' },\n    { key: 'cs', label: 'C#' },\n    { key: 'css', label: 'CSS' },\n    { key: 'diff', label: 'Diff' },\n    { key: 'xml', label: 'HTML/XML' },\n    { key: 'java', label: 'Java' },\n    { key: 'javascript', label: 'JavaScript' },\n    { key: 'markdown', label: 'Markdown' },\n    { key: 'php', label: 'PHP' },\n    { key: 'python', label: 'Python' },\n    { key: 'ruby', label: 'Ruby' },\n    { key: 'sql', label: 'SQL' },\n  ],\n};\n\nexport { SyntaxCodeBlock as CodeBlock, CodeToken, Syntax as default };\n", "import type { LinkedList } from 'parchment';\nimport Block from '../blots/block.js';\nimport Container from '../blots/container.js';\n\nclass TableCell extends Block {\n  static blotName = 'table';\n  static tagName = 'TD';\n\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    if (value) {\n      node.setAttribute('data-row', value);\n    } else {\n      node.setAttribute('data-row', tableId());\n    }\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.hasAttribute('data-row')) {\n      return domNode.getAttribute('data-row');\n    }\n    return undefined;\n  }\n\n  next: this | null;\n\n  cellOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  format(name: string, value: string) {\n    if (name === TableCell.blotName && value) {\n      this.domNode.setAttribute('data-row', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  row(): TableRow {\n    return this.parent as TableRow;\n  }\n\n  rowOffset() {\n    if (this.row()) {\n      return this.row().rowOffset();\n    }\n    return -1;\n  }\n\n  table() {\n    return this.row() && this.row().table();\n  }\n}\n\nclass TableRow extends Container {\n  static blotName = 'table-row';\n  static tagName = 'TR';\n\n  children: LinkedList<TableCell>;\n  next: this | null;\n\n  checkMerge() {\n    // @ts-expect-error\n    if (super.checkMerge() && this.next.children.head != null) {\n      // @ts-expect-error\n      const thisHead = this.children.head.formats();\n      // @ts-expect-error\n      const thisTail = this.children.tail.formats();\n      // @ts-expect-error\n      const nextHead = this.next.children.head.formats();\n      // @ts-expect-error\n      const nextTail = this.next.children.tail.formats();\n      return (\n        thisHead.table === thisTail.table &&\n        thisHead.table === nextHead.table &&\n        thisHead.table === nextTail.table\n      );\n    }\n    return false;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.children.forEach((child) => {\n      if (child.next == null) return;\n      const childFormats = child.formats();\n      const nextFormats = child.next.formats();\n      if (childFormats.table !== nextFormats.table) {\n        const next = this.splitAfter(child);\n        if (next) {\n          // @ts-expect-error TODO: parameters of optimize() should be a optional\n          next.optimize();\n        }\n        // We might be able to merge with prev now\n        if (this.prev) {\n          // @ts-expect-error TODO: parameters of optimize() should be a optional\n          this.prev.optimize();\n        }\n      }\n    });\n  }\n\n  rowOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  table() {\n    return this.parent && this.parent.parent;\n  }\n}\n\nclass TableBody extends Container {\n  static blotName = 'table-body';\n  static tagName = 'TBODY';\n\n  children: LinkedList<TableRow>;\n}\n\nclass TableContainer extends Container {\n  static blotName = 'table-container';\n  static tagName = 'TABLE';\n\n  children: LinkedList<TableBody>;\n\n  balanceCells() {\n    const rows = this.descendants(TableRow);\n    const maxColumns = rows.reduce((max, row) => {\n      return Math.max(row.children.length, max);\n    }, 0);\n    rows.forEach((row) => {\n      new Array(maxColumns - row.children.length).fill(0).forEach(() => {\n        let value;\n        if (row.children.head != null) {\n          value = TableCell.formats(row.children.head.domNode);\n        }\n        const blot = this.scroll.create(TableCell.blotName, value);\n        row.appendChild(blot);\n        // @ts-expect-error TODO: parameters of optimize() should be a optional\n        blot.optimize(); // Add break blot\n      });\n    });\n  }\n\n  cells(column: number) {\n    return this.rows().map((row) => row.children.at(column));\n  }\n\n  deleteColumn(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    body.children.forEach((row) => {\n      const cell = row.children.at(index);\n      if (cell != null) {\n        cell.remove();\n      }\n    });\n  }\n\n  insertColumn(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    body.children.forEach((row) => {\n      const ref = row.children.at(index);\n      // @ts-expect-error\n      const value = TableCell.formats(row.children.head.domNode);\n      const cell = this.scroll.create(TableCell.blotName, value);\n      row.insertBefore(cell, ref);\n    });\n  }\n\n  insertRow(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    const id = tableId();\n    const row = this.scroll.create(TableRow.blotName) as TableRow;\n    body.children.head.children.forEach(() => {\n      const cell = this.scroll.create(TableCell.blotName, id);\n      row.appendChild(cell);\n    });\n    const ref = body.children.at(index);\n    body.insertBefore(row, ref);\n  }\n\n  rows() {\n    const body = this.children.head;\n    if (body == null) return [];\n    return body.children.map((row) => row);\n  }\n}\n\nTableContainer.allowedChildren = [TableBody];\nTableBody.requiredContainer = TableContainer;\n\nTableBody.allowedChildren = [TableRow];\nTableRow.requiredContainer = TableBody;\n\nTableRow.allowedChildren = [TableCell];\nTableCell.requiredContainer = TableRow;\n\nfunction tableId() {\n  const id = Math.random().toString(36).slice(2, 6);\n  return `row-${id}`;\n}\n\nexport { TableCell, TableRow, TableBody, TableContainer, tableId };\n", "import Delta from 'quill-delta';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport {\n  TableCell,\n  TableRow,\n  TableBody,\n  TableContainer,\n  tableId,\n} from '../formats/table.js';\n\nclass Table extends Module {\n  static register() {\n    Quill.register(TableCell);\n    Quill.register(TableRow);\n    Quill.register(TableBody);\n    Quill.register(TableContainer);\n  }\n\n  constructor(...args: ConstructorParameters<typeof Module>) {\n    super(...args);\n    this.listenBalanceCells();\n  }\n\n  balanceTables() {\n    this.quill.scroll.descendants(TableContainer).forEach((table) => {\n      table.balanceCells();\n    });\n  }\n\n  deleteColumn() {\n    const [table, , cell] = this.getTable();\n    if (cell == null) return;\n    // @ts-expect-error\n    table.deleteColumn(cell.cellOffset());\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteRow() {\n    const [, row] = this.getTable();\n    if (row == null) return;\n    row.remove();\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteTable() {\n    const [table] = this.getTable();\n    if (table == null) return;\n    // @ts-expect-error\n    const offset = table.offset();\n    // @ts-expect-error\n    table.remove();\n    this.quill.update(Quill.sources.USER);\n    this.quill.setSelection(offset, Quill.sources.SILENT);\n  }\n\n  getTable(\n    range = this.quill.getSelection(),\n  ): [null, null, null, -1] | [Table, TableRow, TableCell, number] {\n    if (range == null) return [null, null, null, -1];\n    const [cell, offset] = this.quill.getLine(range.index);\n    if (cell == null || cell.statics.blotName !== TableCell.blotName) {\n      return [null, null, null, -1];\n    }\n    const row = cell.parent;\n    const table = row.parent.parent;\n    // @ts-expect-error\n    return [table, row, cell, offset];\n  }\n\n  insertColumn(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const column = cell.cellOffset();\n    table.insertColumn(column + offset);\n    this.quill.update(Quill.sources.USER);\n    let shift = row.rowOffset();\n    if (offset === 0) {\n      shift += 1;\n    }\n    this.quill.setSelection(\n      range.index + shift,\n      range.length,\n      Quill.sources.SILENT,\n    );\n  }\n\n  insertColumnLeft() {\n    this.insertColumn(0);\n  }\n\n  insertColumnRight() {\n    this.insertColumn(1);\n  }\n\n  insertRow(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const index = row.rowOffset();\n    table.insertRow(index + offset);\n    this.quill.update(Quill.sources.USER);\n    if (offset > 0) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    } else {\n      this.quill.setSelection(\n        range.index + row.children.length,\n        range.length,\n        Quill.sources.SILENT,\n      );\n    }\n  }\n\n  insertRowAbove() {\n    this.insertRow(0);\n  }\n\n  insertRowBelow() {\n    this.insertRow(1);\n  }\n\n  insertTable(rows: number, columns: number) {\n    const range = this.quill.getSelection();\n    if (range == null) return;\n    const delta = new Array(rows).fill(0).reduce((memo) => {\n      const text = new Array(columns).fill('\\n').join('');\n      return memo.insert(text, { table: tableId() });\n    }, new Delta().retain(range.index));\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index, Quill.sources.SILENT);\n    this.balanceTables();\n  }\n\n  listenBalanceCells() {\n    this.quill.on(\n      Quill.events.SCROLL_OPTIMIZE,\n      (mutations: MutationRecord[]) => {\n        mutations.some((mutation) => {\n          if (\n            ['TD', 'TR', 'TBODY', 'TABLE'].includes(\n              (mutation.target as HTMLElement).tagName,\n            )\n          ) {\n            this.quill.once(Quill.events.TEXT_CHANGE, (delta, old, source) => {\n              if (source !== Quill.sources.USER) return;\n              this.balanceTables();\n            });\n            return true;\n          }\n          return false;\n        });\n      },\n    );\n  }\n}\n\nexport default Table;\n", "import Delta from 'quill-delta';\nimport { EmbedBlot, Scope } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:toolbar');\n\ntype Handler = (this: Toolbar, value: any) => void;\n\nexport type ToolbarConfig = Array<\n  string[] | Array<string | Record<string, unknown>>\n>;\nexport interface ToolbarProps {\n  container?: HTMLElement | ToolbarConfig | null;\n  handlers?: Record<string, Handler>;\n  option?: number;\n  module?: boolean;\n  theme?: boolean;\n}\n\nclass Toolbar extends Module<ToolbarProps> {\n  static DEFAULTS: ToolbarProps;\n\n  container?: HTMLElement | null;\n  controls: [string, HTMLElement][];\n  handlers: Record<string, Handler>;\n\n  constructor(quill: Quill, options: Partial<ToolbarProps>) {\n    super(quill, options);\n    if (Array.isArray(this.options.container)) {\n      const container = document.createElement('div');\n      container.setAttribute('role', 'toolbar');\n      addControls(container, this.options.container);\n      quill.container?.parentNode?.insertBefore(container, quill.container);\n      this.container = container;\n    } else if (typeof this.options.container === 'string') {\n      this.container = document.querySelector(this.options.container);\n    } else {\n      this.container = this.options.container;\n    }\n    if (!(this.container instanceof HTMLElement)) {\n      debug.error('Container required for toolbar', this.options);\n      return;\n    }\n    this.container.classList.add('ql-toolbar');\n    this.controls = [];\n    this.handlers = {};\n    if (this.options.handlers) {\n      Object.keys(this.options.handlers).forEach((format) => {\n        const handler = this.options.handlers?.[format];\n        if (handler) {\n          this.addHandler(format, handler);\n        }\n      });\n    }\n    Array.from(this.container.querySelectorAll('button, select')).forEach(\n      (input) => {\n        // @ts-expect-error\n        this.attach(input);\n      },\n    );\n    this.quill.on(Quill.events.EDITOR_CHANGE, () => {\n      const [range] = this.quill.selection.getRange(); // quill.getSelection triggers update\n      this.update(range);\n    });\n  }\n\n  addHandler(format: string, handler: Handler) {\n    this.handlers[format] = handler;\n  }\n\n  attach(input: HTMLElement) {\n    let format = Array.from(input.classList).find((className) => {\n      return className.indexOf('ql-') === 0;\n    });\n    if (!format) return;\n    format = format.slice('ql-'.length);\n    if (input.tagName === 'BUTTON') {\n      input.setAttribute('type', 'button');\n    }\n    if (\n      this.handlers[format] == null &&\n      this.quill.scroll.query(format) == null\n    ) {\n      debug.warn('ignoring attaching to nonexistent format', format, input);\n      return;\n    }\n    const eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n    input.addEventListener(eventName, (e) => {\n      let value;\n      if (input.tagName === 'SELECT') {\n        // @ts-expect-error\n        if (input.selectedIndex < 0) return;\n        // @ts-expect-error\n        const selected = input.options[input.selectedIndex];\n        if (selected.hasAttribute('selected')) {\n          value = false;\n        } else {\n          value = selected.value || false;\n        }\n      } else {\n        if (input.classList.contains('ql-active')) {\n          value = false;\n        } else {\n          // @ts-expect-error\n          value = input.value || !input.hasAttribute('value');\n        }\n        e.preventDefault();\n      }\n      this.quill.focus();\n      const [range] = this.quill.selection.getRange();\n      if (this.handlers[format] != null) {\n        this.handlers[format].call(this, value);\n      } else if (\n        // @ts-expect-error\n        this.quill.scroll.query(format).prototype instanceof EmbedBlot\n      ) {\n        value = prompt(`Enter ${format}`); // eslint-disable-line no-alert\n        if (!value) return;\n        this.quill.updateContents(\n          new Delta()\n            // @ts-expect-error Fix me later\n            .retain(range.index)\n            // @ts-expect-error Fix me later\n            .delete(range.length)\n            .insert({ [format]: value }),\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.format(format, value, Quill.sources.USER);\n      }\n      this.update(range);\n    });\n    this.controls.push([format, input]);\n  }\n\n  update(range: Range | null) {\n    const formats = range == null ? {} : this.quill.getFormat(range);\n    this.controls.forEach((pair) => {\n      const [format, input] = pair;\n      if (input.tagName === 'SELECT') {\n        let option: HTMLOptionElement | null = null;\n        if (range == null) {\n          option = null;\n        } else if (formats[format] == null) {\n          option = input.querySelector('option[selected]');\n        } else if (!Array.isArray(formats[format])) {\n          let value = formats[format];\n          if (typeof value === 'string') {\n            value = value.replace(/\"/g, '\\\\\"');\n          }\n          option = input.querySelector(`option[value=\"${value}\"]`);\n        }\n        if (option == null) {\n          // @ts-expect-error TODO fix me later\n          input.value = ''; // TODO make configurable?\n          // @ts-expect-error TODO fix me later\n          input.selectedIndex = -1;\n        } else {\n          option.selected = true;\n        }\n      } else if (range == null) {\n        input.classList.remove('ql-active');\n        input.setAttribute('aria-pressed', 'false');\n      } else if (input.hasAttribute('value')) {\n        // both being null should match (default values)\n        // '1' should match with 1 (headers)\n        const value = formats[format] as boolean | number | string | object;\n        const isActive =\n          value === input.getAttribute('value') ||\n          (value != null && value.toString() === input.getAttribute('value')) ||\n          (value == null && !input.getAttribute('value'));\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      } else {\n        const isActive = formats[format] != null;\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      }\n    });\n  }\n}\nToolbar.DEFAULTS = {};\n\nfunction addButton(container: HTMLElement, format: string, value?: string) {\n  const input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add(`ql-${format}`);\n  input.setAttribute('aria-pressed', 'false');\n  if (value != null) {\n    input.value = value;\n    input.setAttribute('aria-label', `${format}: ${value}`);\n  } else {\n    input.setAttribute('aria-label', format);\n  }\n  container.appendChild(input);\n}\n\nfunction addControls(\n  container: HTMLElement,\n  groups:\n    | (string | Record<string, unknown>)[][]\n    | (string | Record<string, unknown>)[],\n) {\n  if (!Array.isArray(groups[0])) {\n    // @ts-expect-error\n    groups = [groups];\n  }\n  groups.forEach((controls: any) => {\n    const group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach((control: any) => {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        const format = Object.keys(control)[0];\n        const value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(\n  container: HTMLElement,\n  format: string,\n  values: Array<string | boolean>,\n) {\n  const input = document.createElement('select');\n  input.classList.add(`ql-${format}`);\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', String(value));\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean() {\n      const range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length === 0) {\n        const formats = this.quill.getFormat();\n        Object.keys(formats).forEach((name) => {\n          // Clean functionality in existing apps only clean inline formats\n          if (this.quill.scroll.query(name, Scope.INLINE) != null) {\n            this.quill.format(name, false, Quill.sources.USER);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range.index, range.length, Quill.sources.USER);\n      }\n    },\n    direction(value) {\n      const { align } = this.quill.getFormat();\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      // @ts-expect-error\n      const indent = parseInt(formats.indent || 0, 10);\n      if (value === '+1' || value === '-1') {\n        let modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:'); // eslint-disable-line no-alert\n      }\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats.list === 'checked' || formats.list === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    },\n  },\n};\n\nexport { Toolbar as default, addControls };\n", "import alignLeftIcon from '../assets/icons/align-left.svg';\nimport alignCenterIcon from '../assets/icons/align-center.svg';\nimport alignRightIcon from '../assets/icons/align-right.svg';\nimport alignJustifyIcon from '../assets/icons/align-justify.svg';\nimport backgroundIcon from '../assets/icons/background.svg';\nimport blockquoteIcon from '../assets/icons/blockquote.svg';\nimport boldIcon from '../assets/icons/bold.svg';\nimport cleanIcon from '../assets/icons/clean.svg';\nimport codeIcon from '../assets/icons/code.svg';\nimport colorIcon from '../assets/icons/color.svg';\nimport directionLeftToRightIcon from '../assets/icons/direction-ltr.svg';\nimport directionRightToLeftIcon from '../assets/icons/direction-rtl.svg';\nimport formulaIcon from '../assets/icons/formula.svg';\nimport headerIcon from '../assets/icons/header.svg';\nimport header2Icon from '../assets/icons/header-2.svg';\nimport header3Icon from '../assets/icons/header-3.svg';\nimport header4Icon from '../assets/icons/header-4.svg';\nimport header5Icon from '../assets/icons/header-5.svg';\nimport header6Icon from '../assets/icons/header-6.svg';\nimport italicIcon from '../assets/icons/italic.svg';\nimport imageIcon from '../assets/icons/image.svg';\nimport indentIcon from '../assets/icons/indent.svg';\nimport outdentIcon from '../assets/icons/outdent.svg';\nimport linkIcon from '../assets/icons/link.svg';\nimport listBulletIcon from '../assets/icons/list-bullet.svg';\nimport listCheckIcon from '../assets/icons/list-check.svg';\nimport listOrderedIcon from '../assets/icons/list-ordered.svg';\nimport subscriptIcon from '../assets/icons/subscript.svg';\nimport superscriptIcon from '../assets/icons/superscript.svg';\nimport strikeIcon from '../assets/icons/strike.svg';\nimport tableIcon from '../assets/icons/table.svg';\nimport underlineIcon from '../assets/icons/underline.svg';\nimport videoIcon from '../assets/icons/video.svg';\n\nexport default {\n  align: {\n    '': alignLeftIcon,\n    center: alignCenterIcon,\n    right: alignRightIcon,\n    justify: alignJustifyIcon,\n  },\n  background: backgroundIcon,\n  blockquote: blockquoteIcon,\n  bold: boldIcon,\n  clean: cleanIcon,\n  code: codeIcon,\n  'code-block': codeIcon,\n  color: colorIcon,\n  direction: {\n    '': directionLeftToRightIcon,\n    rtl: directionRightToLeftIcon,\n  },\n  formula: formulaIcon,\n  header: {\n    '1': headerIcon,\n    '2': header2Icon,\n    '3': header3Icon,\n    '4': header4Icon,\n    '5': header5Icon,\n    '6': header6Icon,\n  },\n  italic: italicIcon,\n  image: imageIcon,\n  indent: {\n    '+1': indentIcon,\n    '-1': outdentIcon,\n  },\n  link: linkIcon,\n  list: {\n    bullet: listBulletIcon,\n    check: listCheckIcon,\n    ordered: listOrderedIcon,\n  },\n  script: {\n    sub: subscriptIcon,\n    super: superscriptIcon,\n  },\n  strike: strikeIcon,\n  table: tableIcon,\n  underline: underlineIcon,\n  video: videoIcon,\n};\n", "import DropdownIcon from '../assets/icons/dropdown.svg';\n\nlet optionsCounter = 0;\n\nfunction toggleAriaAttribute(element: HTMLElement, attribute: string) {\n  element.setAttribute(\n    attribute,\n    `${!(element.getAttribute(attribute) === 'true')}`,\n  );\n}\n\nclass Picker {\n  select: HTMLSelectElement;\n  container: HTMLElement;\n  label: HTMLElement;\n\n  constructor(select: HTMLSelectElement) {\n    this.select = select;\n    this.container = document.createElement('span');\n    this.buildPicker();\n    this.select.style.display = 'none';\n    // @ts-expect-error Fix me later\n    this.select.parentNode.insertBefore(this.container, this.select);\n\n    this.label.addEventListener('mousedown', () => {\n      this.togglePicker();\n    });\n    this.label.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.togglePicker();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n    this.select.addEventListener('change', this.update.bind(this));\n  }\n\n  togglePicker() {\n    this.container.classList.toggle('ql-expanded');\n    // Toggle aria-expanded and aria-hidden to make the picker accessible\n    toggleAriaAttribute(this.label, 'aria-expanded');\n    // @ts-expect-error\n    toggleAriaAttribute(this.options, 'aria-hidden');\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = document.createElement('span');\n    // @ts-expect-error\n    item.tabIndex = '0';\n    item.setAttribute('role', 'button');\n    item.classList.add('ql-picker-item');\n    const value = option.getAttribute('value');\n    if (value) {\n      item.setAttribute('data-value', value);\n    }\n    if (option.textContent) {\n      item.setAttribute('data-label', option.textContent);\n    }\n    item.addEventListener('click', () => {\n      this.selectItem(item, true);\n    });\n    item.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.selectItem(item, true);\n          event.preventDefault();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n\n    return item;\n  }\n\n  buildLabel() {\n    const label = document.createElement('span');\n    label.classList.add('ql-picker-label');\n    label.innerHTML = DropdownIcon;\n    // @ts-expect-error\n    label.tabIndex = '0';\n    label.setAttribute('role', 'button');\n    label.setAttribute('aria-expanded', 'false');\n    this.container.appendChild(label);\n    return label;\n  }\n\n  buildOptions() {\n    const options = document.createElement('span');\n    options.classList.add('ql-picker-options');\n\n    // Don't want screen readers to read this until options are visible\n    options.setAttribute('aria-hidden', 'true');\n    // @ts-expect-error\n    options.tabIndex = '-1';\n\n    // Need a unique id for aria-controls\n    options.id = `ql-picker-options-${optionsCounter}`;\n    optionsCounter += 1;\n    this.label.setAttribute('aria-controls', options.id);\n\n    // @ts-expect-error\n    this.options = options;\n\n    Array.from(this.select.options).forEach((option) => {\n      const item = this.buildItem(option);\n      options.appendChild(item);\n      if (option.selected === true) {\n        this.selectItem(item);\n      }\n    });\n    this.container.appendChild(options);\n  }\n\n  buildPicker() {\n    Array.from(this.select.attributes).forEach((item) => {\n      this.container.setAttribute(item.name, item.value);\n    });\n    this.container.classList.add('ql-picker');\n    this.label = this.buildLabel();\n    this.buildOptions();\n  }\n\n  escape() {\n    // Close menu and return focus to trigger label\n    this.close();\n    // Need setTimeout for accessibility to ensure that the browser executes\n    // focus on the next process thread and after any DOM content changes\n    setTimeout(() => this.label.focus(), 1);\n  }\n\n  close() {\n    this.container.classList.remove('ql-expanded');\n    this.label.setAttribute('aria-expanded', 'false');\n    // @ts-expect-error\n    this.options.setAttribute('aria-hidden', 'true');\n  }\n\n  selectItem(item: HTMLElement | null, trigger = false) {\n    const selected = this.container.querySelector('.ql-selected');\n    if (item === selected) return;\n    if (selected != null) {\n      selected.classList.remove('ql-selected');\n    }\n    if (item == null) return;\n    item.classList.add('ql-selected');\n    // @ts-expect-error Fix me later\n    this.select.selectedIndex = Array.from(item.parentNode.children).indexOf(\n      item,\n    );\n    if (item.hasAttribute('data-value')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-value', item.getAttribute('data-value'));\n    } else {\n      this.label.removeAttribute('data-value');\n    }\n    if (item.hasAttribute('data-label')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-label', item.getAttribute('data-label'));\n    } else {\n      this.label.removeAttribute('data-label');\n    }\n    if (trigger) {\n      this.select.dispatchEvent(new Event('change'));\n      this.close();\n    }\n  }\n\n  update() {\n    let option;\n    if (this.select.selectedIndex > -1) {\n      const item =\n        // @ts-expect-error Fix me later\n        this.container.querySelector('.ql-picker-options').children[\n          this.select.selectedIndex\n        ];\n      option = this.select.options[this.select.selectedIndex];\n      // @ts-expect-error\n      this.selectItem(item);\n    } else {\n      this.selectItem(null);\n    }\n    const isActive =\n      option != null &&\n      option !== this.select.querySelector('option[selected]');\n    this.label.classList.toggle('ql-active', isActive);\n  }\n}\n\nexport default Picker;\n", "import Picker from './picker.js';\n\nclass ColorPicker extends Picker {\n  constructor(select: HTMLSelectElement, label: string) {\n    super(select);\n    this.label.innerHTML = label;\n    this.container.classList.add('ql-color-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item'))\n      .slice(0, 7)\n      .forEach((item) => {\n        item.classList.add('ql-primary');\n      });\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = super.buildItem(option);\n    item.style.backgroundColor = option.getAttribute('value') || '';\n    return item;\n  }\n\n  selectItem(item: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(item, trigger);\n    const colorLabel = this.label.querySelector<HTMLElement>('.ql-color-label');\n    const value = item ? item.getAttribute('data-value') || '' : '';\n    if (colorLabel) {\n      if (colorLabel.tagName === 'line') {\n        colorLabel.style.stroke = value;\n      } else {\n        colorLabel.style.fill = value;\n      }\n    }\n  }\n}\n\nexport default ColorPicker;\n", "import Picker from './picker.js';\n\nclass IconPicker extends Picker {\n  defaultItem: HTMLElement | null;\n\n  constructor(select: HTMLSelectElement, icons: Record<string, string>) {\n    super(select);\n    this.container.classList.add('ql-icon-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item')).forEach(\n      (item) => {\n        item.innerHTML = icons[item.getAttribute('data-value') || ''];\n      },\n    );\n    this.defaultItem = this.container.querySelector('.ql-selected');\n    this.selectItem(this.defaultItem);\n  }\n\n  selectItem(target: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(target, trigger);\n    const item = target || this.defaultItem;\n    if (item != null) {\n      if (this.label.innerHTML === item.innerHTML) return;\n      this.label.innerHTML = item.innerHTML;\n    }\n  }\n}\n\nexport default IconPicker;\n", "import type Quill from '../core.js';\nimport type { Bounds } from '../core/selection.js';\n\nconst isScrollable = (el: Element) => {\n  const { overflowY } = getComputedStyle(el, null);\n  return overflowY !== 'visible' && overflowY !== 'clip';\n};\n\nclass Tooltip {\n  quill: Quill;\n  boundsContainer: HTMLElement;\n  root: HTMLDivElement;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    this.quill = quill;\n    this.boundsContainer = boundsContainer || document.body;\n    this.root = quill.addContainer('ql-tooltip');\n    // @ts-expect-error\n    this.root.innerHTML = this.constructor.TEMPLATE;\n    if (isScrollable(this.quill.root)) {\n      this.quill.root.addEventListener('scroll', () => {\n        this.root.style.marginTop = `${-1 * this.quill.root.scrollTop}px`;\n      });\n    }\n    this.hide();\n  }\n\n  hide() {\n    this.root.classList.add('ql-hidden');\n  }\n\n  position(reference: Bounds) {\n    const left =\n      reference.left + reference.width / 2 - this.root.offsetWidth / 2;\n    // root.scrollTop should be 0 if scrollContainer !== root\n    const top = reference.bottom + this.quill.root.scrollTop;\n    this.root.style.left = `${left}px`;\n    this.root.style.top = `${top}px`;\n    this.root.classList.remove('ql-flip');\n    const containerBounds = this.boundsContainer.getBoundingClientRect();\n    const rootBounds = this.root.getBoundingClientRect();\n    let shift = 0;\n    if (rootBounds.right > containerBounds.right) {\n      shift = containerBounds.right - rootBounds.right;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.left < containerBounds.left) {\n      shift = containerBounds.left - rootBounds.left;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.bottom > containerBounds.bottom) {\n      const height = rootBounds.bottom - rootBounds.top;\n      const verticalShift = reference.bottom - reference.top + height;\n      this.root.style.top = `${top - verticalShift}px`;\n      this.root.classList.add('ql-flip');\n    }\n    return shift;\n  }\n\n  show() {\n    this.root.classList.remove('ql-editing');\n    this.root.classList.remove('ql-hidden');\n  }\n}\n\nexport default Tooltip;\n", "import { merge } from 'lodash-es';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Theme from '../core/theme.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport ColorPicker from '../ui/color-picker.js';\nimport IconPicker from '../ui/icon-picker.js';\nimport Picker from '../ui/picker.js';\nimport Tooltip from '../ui/tooltip.js';\nimport type { Range } from '../core/selection.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport type Selection from '../core/selection.js';\n\nconst ALIGNS = [false, 'center', 'right', 'justify'];\n\nconst COLORS = [\n  '#000000',\n  '#e60000',\n  '#ff9900',\n  '#ffff00',\n  '#008a00',\n  '#0066cc',\n  '#9933ff',\n  '#ffffff',\n  '#facccc',\n  '#ffebcc',\n  '#ffffcc',\n  '#cce8cc',\n  '#cce0f5',\n  '#ebd6ff',\n  '#bbbbbb',\n  '#f06666',\n  '#ffc266',\n  '#ffff66',\n  '#66b966',\n  '#66a3e0',\n  '#c285ff',\n  '#888888',\n  '#a10000',\n  '#b26b00',\n  '#b2b200',\n  '#006100',\n  '#0047b2',\n  '#6b24b2',\n  '#444444',\n  '#5c0000',\n  '#663d00',\n  '#666600',\n  '#003700',\n  '#002966',\n  '#3d1466',\n];\n\nconst FONTS = [false, 'serif', 'monospace'];\n\nconst HEADERS = ['1', '2', '3', false];\n\nconst SIZES = ['small', false, 'large', 'huge'];\n\nclass BaseTheme extends Theme {\n  pickers: Picker[];\n  tooltip?: Tooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    super(quill, options);\n    const listener = (e: MouseEvent) => {\n      if (!document.body.contains(quill.root)) {\n        document.body.removeEventListener('click', listener);\n        return;\n      }\n      if (\n        this.tooltip != null &&\n        // @ts-expect-error\n        !this.tooltip.root.contains(e.target) &&\n        // @ts-expect-error\n        document.activeElement !== this.tooltip.textbox &&\n        !this.quill.hasFocus()\n      ) {\n        this.tooltip.hide();\n      }\n      if (this.pickers != null) {\n        this.pickers.forEach((picker) => {\n          // @ts-expect-error\n          if (!picker.container.contains(e.target)) {\n            picker.close();\n          }\n        });\n      }\n    };\n    quill.emitter.listenDOM('click', document.body, listener);\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: 'selection'): Selection;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    const module = super.addModule(name);\n    if (name === 'toolbar') {\n      // @ts-expect-error\n      this.extendToolbar(module);\n    }\n    return module;\n  }\n\n  buildButtons(\n    buttons: NodeListOf<HTMLElement>,\n    icons: Record<string, Record<string, string> | string>,\n  ) {\n    Array.from(buttons).forEach((button) => {\n      const className = button.getAttribute('class') || '';\n      className.split(/\\s+/).forEach((name) => {\n        if (!name.startsWith('ql-')) return;\n        name = name.slice('ql-'.length);\n        if (icons[name] == null) return;\n        if (name === 'direction') {\n          // @ts-expect-error\n          button.innerHTML = icons[name][''] + icons[name].rtl;\n        } else if (typeof icons[name] === 'string') {\n          // @ts-expect-error\n          button.innerHTML = icons[name];\n        } else {\n          // @ts-expect-error\n          const value = button.value || '';\n          // @ts-expect-error\n          if (value != null && icons[name][value]) {\n            // @ts-expect-error\n            button.innerHTML = icons[name][value];\n          }\n        }\n      });\n    });\n  }\n\n  buildPickers(\n    selects: NodeListOf<HTMLSelectElement>,\n    icons: Record<string, string | Record<string, string>>,\n  ) {\n    this.pickers = Array.from(selects).map((select) => {\n      if (select.classList.contains('ql-align')) {\n        if (select.querySelector('option') == null) {\n          fillSelect(select, ALIGNS);\n        }\n        if (typeof icons.align === 'object') {\n          return new IconPicker(select, icons.align);\n        }\n      }\n      if (\n        select.classList.contains('ql-background') ||\n        select.classList.contains('ql-color')\n      ) {\n        const format = select.classList.contains('ql-background')\n          ? 'background'\n          : 'color';\n        if (select.querySelector('option') == null) {\n          fillSelect(\n            select,\n            COLORS,\n            format === 'background' ? '#ffffff' : '#000000',\n          );\n        }\n        return new ColorPicker(select, icons[format] as string);\n      }\n      if (select.querySelector('option') == null) {\n        if (select.classList.contains('ql-font')) {\n          fillSelect(select, FONTS);\n        } else if (select.classList.contains('ql-header')) {\n          fillSelect(select, HEADERS);\n        } else if (select.classList.contains('ql-size')) {\n          fillSelect(select, SIZES);\n        }\n      }\n      return new Picker(select);\n    });\n    const update = () => {\n      this.pickers.forEach((picker) => {\n        picker.update();\n      });\n    };\n    this.quill.on(Emitter.events.EDITOR_CHANGE, update);\n  }\n}\nBaseTheme.DEFAULTS = merge({}, Theme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        formula() {\n          this.quill.theme.tooltip.edit('formula');\n        },\n        image() {\n          let fileInput = this.container.querySelector(\n            'input.ql-image[type=file]',\n          );\n          if (fileInput == null) {\n            fileInput = document.createElement('input');\n            fileInput.setAttribute('type', 'file');\n            fileInput.setAttribute(\n              'accept',\n              this.quill.uploader.options.mimetypes.join(', '),\n            );\n            fileInput.classList.add('ql-image');\n            fileInput.addEventListener('change', () => {\n              const range = this.quill.getSelection(true);\n              this.quill.uploader.upload(range, fileInput.files);\n              fileInput.value = '';\n            });\n            this.container.appendChild(fileInput);\n          }\n          fileInput.click();\n        },\n        video() {\n          this.quill.theme.tooltip.edit('video');\n        },\n      },\n    },\n  },\n});\n\nclass BaseTooltip extends Tooltip {\n  textbox: HTMLInputElement | null;\n  linkRange?: Range;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    super(quill, boundsContainer);\n    this.textbox = this.root.querySelector('input[type=\"text\"]');\n    this.listen();\n  }\n\n  listen() {\n    // @ts-expect-error Fix me later\n    this.textbox.addEventListener('keydown', (event) => {\n      if (event.key === 'Enter') {\n        this.save();\n        event.preventDefault();\n      } else if (event.key === 'Escape') {\n        this.cancel();\n        event.preventDefault();\n      }\n    });\n  }\n\n  cancel() {\n    this.hide();\n    this.restoreFocus();\n  }\n\n  edit(mode = 'link', preview: string | null = null) {\n    this.root.classList.remove('ql-hidden');\n    this.root.classList.add('ql-editing');\n    if (this.textbox == null) return;\n\n    if (preview != null) {\n      this.textbox.value = preview;\n    } else if (mode !== this.root.getAttribute('data-mode')) {\n      this.textbox.value = '';\n    }\n    const bounds = this.quill.getBounds(this.quill.selection.savedRange);\n    if (bounds != null) {\n      this.position(bounds);\n    }\n    this.textbox.select();\n    this.textbox.setAttribute(\n      'placeholder',\n      this.textbox.getAttribute(`data-${mode}`) || '',\n    );\n    this.root.setAttribute('data-mode', mode);\n  }\n\n  restoreFocus() {\n    this.quill.focus({ preventScroll: true });\n  }\n\n  save() {\n    // @ts-expect-error Fix me later\n    let { value } = this.textbox;\n    switch (this.root.getAttribute('data-mode')) {\n      case 'link': {\n        const { scrollTop } = this.quill.root;\n        if (this.linkRange) {\n          this.quill.formatText(\n            this.linkRange,\n            'link',\n            value,\n            Emitter.sources.USER,\n          );\n          delete this.linkRange;\n        } else {\n          this.restoreFocus();\n          this.quill.format('link', value, Emitter.sources.USER);\n        }\n        this.quill.root.scrollTop = scrollTop;\n        break;\n      }\n      case 'video': {\n        value = extractVideoUrl(value);\n      } // eslint-disable-next-line no-fallthrough\n      case 'formula': {\n        if (!value) break;\n        const range = this.quill.getSelection(true);\n        if (range != null) {\n          const index = range.index + range.length;\n          this.quill.insertEmbed(\n            index,\n            // @ts-expect-error Fix me later\n            this.root.getAttribute('data-mode'),\n            value,\n            Emitter.sources.USER,\n          );\n          if (this.root.getAttribute('data-mode') === 'formula') {\n            this.quill.insertText(index + 1, ' ', Emitter.sources.USER);\n          }\n          this.quill.setSelection(index + 2, Emitter.sources.USER);\n        }\n        break;\n      }\n      default:\n    }\n    // @ts-expect-error Fix me later\n    this.textbox.value = '';\n    this.hide();\n  }\n}\n\nfunction extractVideoUrl(url: string) {\n  let match =\n    url.match(\n      /^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtube\\.com\\/watch.*v=([a-zA-Z0-9_-]+)/,\n    ) ||\n    url.match(/^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtu\\.be\\/([a-zA-Z0-9_-]+)/);\n  if (match) {\n    return `${match[1] || 'https'}://www.youtube.com/embed/${\n      match[2]\n    }?showinfo=0`;\n  }\n  // eslint-disable-next-line no-cond-assign\n  if ((match = url.match(/^(?:(https?):\\/\\/)?(?:www\\.)?vimeo\\.com\\/(\\d+)/))) {\n    return `${match[1] || 'https'}://player.vimeo.com/video/${match[2]}/`;\n  }\n  return url;\n}\n\nfunction fillSelect(\n  select: HTMLSelectElement,\n  values: Array<string | boolean>,\n  defaultValue: unknown = false,\n) {\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value === defaultValue) {\n      option.setAttribute('selected', 'selected');\n    } else {\n      option.setAttribute('value', String(value));\n    }\n    select.appendChild(option);\n  });\n}\n\nexport { BaseTooltip, BaseTheme as default };\n", "import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport { Range } from '../core/selection.js';\nimport type { Bounds } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport Quill from '../core/quill.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  ['bold', 'italic', 'link'],\n  [{ header: 1 }, { header: 2 }, 'blockquote'],\n];\n\nclass BubbleTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<span class=\"ql-tooltip-arrow\"></span>',\n    '<div class=\"ql-tooltip-editor\">',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-close\"></a>',\n    '</div>',\n  ].join('');\n\n  constructor(quill: Quill, bounds?: HTMLElement) {\n    super(quill, bounds);\n    this.quill.on(\n      Emitter.events.EDITOR_CHANGE,\n      (type, range, oldRange, source) => {\n        if (type !== Emitter.events.SELECTION_CHANGE) return;\n        if (\n          range != null &&\n          range.length > 0 &&\n          source === Emitter.sources.USER\n        ) {\n          this.show();\n          // Lock our width so we will expand beyond our offsetParent boundaries\n          this.root.style.left = '0px';\n          this.root.style.width = '';\n          this.root.style.width = `${this.root.offsetWidth}px`;\n          const lines = this.quill.getLines(range.index, range.length);\n          if (lines.length === 1) {\n            const bounds = this.quill.getBounds(range);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n          } else {\n            const lastLine = lines[lines.length - 1];\n            const index = this.quill.getIndex(lastLine);\n            const length = Math.min(\n              lastLine.length() - 1,\n              range.index + range.length - index,\n            );\n            const indexBounds = this.quill.getBounds(new Range(index, length));\n            if (indexBounds != null) {\n              this.position(indexBounds);\n            }\n          }\n        } else if (\n          document.activeElement !== this.textbox &&\n          this.quill.hasFocus()\n        ) {\n          this.hide();\n        }\n      },\n    );\n  }\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root.querySelector('.ql-close').addEventListener('click', () => {\n      this.root.classList.remove('ql-editing');\n    });\n    this.quill.on(Emitter.events.SCROLL_OPTIMIZE, () => {\n      // Let selection be restored by toolbar handlers before repositioning\n      setTimeout(() => {\n        if (this.root.classList.contains('ql-hidden')) return;\n        const range = this.quill.getSelection();\n        if (range != null) {\n          const bounds = this.quill.getBounds(range);\n          if (bounds != null) {\n            this.position(bounds);\n          }\n        }\n      }, 1);\n    });\n  }\n\n  cancel() {\n    this.show();\n  }\n\n  position(reference: Bounds) {\n    const shift = super.position(reference);\n    const arrow = this.root.querySelector('.ql-tooltip-arrow');\n    // @ts-expect-error\n    arrow.style.marginLeft = '';\n    if (shift !== 0) {\n      // @ts-expect-error\n      arrow.style.marginLeft = `${-1 * shift - arrow.offsetWidth / 2}px`;\n    }\n    return shift;\n  }\n}\n\nclass BubbleTheme extends BaseTheme {\n  tooltip: BubbleTooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-bubble');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    // @ts-expect-error\n    this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);\n    if (toolbar.container != null) {\n      this.tooltip.root.appendChild<HTMLElement>(toolbar.container);\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n    }\n  }\n}\nBubbleTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (!value) {\n            this.quill.format('link', false, Quill.sources.USER);\n          } else {\n            // @ts-expect-error\n            this.quill.theme.tooltip.edit();\n          }\n        },\n      },\n    },\n  },\n} satisfies ThemeOptions);\n\nexport { BubbleTooltip, BubbleTheme as default };\n", "import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport LinkBlot from '../formats/link.js';\nimport { Range } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport Quill from '../core/quill.js';\nimport type { Context } from '../modules/keyboard.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\nimport type { ThemeOptions } from '../core/theme.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  [{ header: ['1', '2', '3', false] }],\n  ['bold', 'italic', 'underline', 'link'],\n  [{ list: 'ordered' }, { list: 'bullet' }],\n  ['clean'],\n];\n\nclass SnowTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<a class=\"ql-preview\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"about:blank\"></a>',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-action\"></a>',\n    '<a class=\"ql-remove\"></a>',\n  ].join('');\n\n  preview = this.root.querySelector('a.ql-preview');\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-action')\n      .addEventListener('click', (event) => {\n        if (this.root.classList.contains('ql-editing')) {\n          this.save();\n        } else {\n          // @ts-expect-error Fix me later\n          this.edit('link', this.preview.textContent);\n        }\n        event.preventDefault();\n      });\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-remove')\n      .addEventListener('click', (event) => {\n        if (this.linkRange != null) {\n          const range = this.linkRange;\n          this.restoreFocus();\n          this.quill.formatText(range, 'link', false, Emitter.sources.USER);\n          delete this.linkRange;\n        }\n        event.preventDefault();\n        this.hide();\n      });\n    this.quill.on(\n      Emitter.events.SELECTION_CHANGE,\n      (range, oldRange, source) => {\n        if (range == null) return;\n        if (range.length === 0 && source === Emitter.sources.USER) {\n          const [link, offset] = this.quill.scroll.descendant(\n            LinkBlot,\n            range.index,\n          );\n          if (link != null) {\n            this.linkRange = new Range(range.index - offset, link.length());\n            const preview = LinkBlot.formats(link.domNode);\n            // @ts-expect-error Fix me later\n            this.preview.textContent = preview;\n            // @ts-expect-error Fix me later\n            this.preview.setAttribute('href', preview);\n            this.show();\n            const bounds = this.quill.getBounds(this.linkRange);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n            return;\n          }\n        } else {\n          delete this.linkRange;\n        }\n        this.hide();\n      },\n    );\n  }\n\n  show() {\n    super.show();\n    this.root.removeAttribute('data-mode');\n  }\n}\n\nclass SnowTheme extends BaseTheme {\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-snow');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    if (toolbar.container != null) {\n      toolbar.container.classList.add('ql-snow');\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n      // @ts-expect-error\n      this.tooltip = new SnowTooltip(this.quill, this.options.bounds);\n      if (toolbar.container.querySelector('.ql-link')) {\n        this.quill.keyboard.addBinding(\n          { key: 'k', shortKey: true },\n          (_range: Range, context: Context) => {\n            toolbar.handlers.link.call(toolbar, !context.format.link);\n          },\n        );\n      }\n    }\n  }\n}\nSnowTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (value) {\n            const range = this.quill.getSelection();\n            if (range == null || range.length === 0) return;\n            let preview = this.quill.getText(range);\n            if (\n              /^\\S+@\\S+\\.\\S+$/.test(preview) &&\n              preview.indexOf('mailto:') !== 0\n            ) {\n              preview = `mailto:${preview}`;\n            }\n            // @ts-expect-error\n            const { tooltip } = this.quill.theme;\n            tooltip.edit('link', preview);\n          } else {\n            this.quill.format('link', false, Quill.sources.USER);\n          }\n        },\n      },\n    },\n  },\n} satisfies ThemeOptions);\n\nexport default SnowTheme;\n", "import Quill from './core.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core.js';\n\nimport { AlignClass, AlignStyle } from './formats/align.js';\nimport {\n  DirectionAttribute,\n  DirectionClass,\n  DirectionStyle,\n} from './formats/direction.js';\nimport Indent from './formats/indent.js';\n\nimport Blockquote from './formats/blockquote.js';\nimport Header from './formats/header.js';\nimport List from './formats/list.js';\n\nimport { BackgroundClass, BackgroundStyle } from './formats/background.js';\nimport { ColorClass, ColorStyle } from './formats/color.js';\nimport { FontClass, FontStyle } from './formats/font.js';\nimport { SizeClass, SizeStyle } from './formats/size.js';\n\nimport Bold from './formats/bold.js';\nimport Italic from './formats/italic.js';\nimport Link from './formats/link.js';\nimport Script from './formats/script.js';\nimport Strike from './formats/strike.js';\nimport Underline from './formats/underline.js';\n\nimport Formula from './formats/formula.js';\nimport Image from './formats/image.js';\nimport Video from './formats/video.js';\n\nimport CodeBlock, { Code as InlineCode } from './formats/code.js';\n\nimport Syntax from './modules/syntax.js';\nimport Table from './modules/table.js';\nimport Toolbar from './modules/toolbar.js';\n\nimport Icons from './ui/icons.js';\nimport Picker from './ui/picker.js';\nimport ColorPicker from './ui/color-picker.js';\nimport IconPicker from './ui/icon-picker.js';\nimport Tooltip from './ui/tooltip.js';\n\nimport BubbleTheme from './themes/bubble.js';\nimport SnowTheme from './themes/snow.js';\n\nQuill.register(\n  {\n    'attributors/attribute/direction': DirectionAttribute,\n\n    'attributors/class/align': AlignClass,\n    'attributors/class/background': BackgroundClass,\n    'attributors/class/color': ColorClass,\n    'attributors/class/direction': DirectionClass,\n    'attributors/class/font': FontClass,\n    'attributors/class/size': SizeClass,\n\n    'attributors/style/align': AlignStyle,\n    'attributors/style/background': BackgroundStyle,\n    'attributors/style/color': ColorStyle,\n    'attributors/style/direction': DirectionStyle,\n    'attributors/style/font': FontStyle,\n    'attributors/style/size': SizeStyle,\n  },\n  true,\n);\n\nQuill.register(\n  {\n    'formats/align': AlignClass,\n    'formats/direction': DirectionClass,\n    'formats/indent': Indent,\n\n    'formats/background': BackgroundStyle,\n    'formats/color': ColorStyle,\n    'formats/font': FontClass,\n    'formats/size': SizeClass,\n\n    'formats/blockquote': Blockquote,\n    'formats/code-block': CodeBlock,\n    'formats/header': Header,\n    'formats/list': List,\n\n    'formats/bold': Bold,\n    'formats/code': InlineCode,\n    'formats/italic': Italic,\n    'formats/link': Link,\n    'formats/script': Script,\n    'formats/strike': Strike,\n    'formats/underline': Underline,\n\n    'formats/formula': Formula,\n    'formats/image': Image,\n    'formats/video': Video,\n\n    'modules/syntax': Syntax,\n    'modules/table': Table,\n    'modules/toolbar': Toolbar,\n\n    'themes/bubble': BubbleTheme,\n    'themes/snow': SnowTheme,\n\n    'ui/icons': Icons,\n    'ui/picker': Picker,\n    'ui/icon-picker': IconPicker,\n    'ui/color-picker': ColorPicker,\n    'ui/tooltip': Tooltip,\n  },\n  true,\n);\n\nexport {\n  AttributeMap,\n  Delta,\n  Module,\n  Op,\n  OpIterator,\n  Parchment,\n  Range,\n} from './core.js';\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\n\nexport default Quill;\n", "import Bold from './bold.js';\n\nclass Italic extends Bold {\n  static blotName = 'italic';\n  static tagName = ['EM', 'I'];\n}\n\nexport default Italic;\n", "import Bold from './bold.js';\n\nclass Strike extends Bold {\n  static blotName = 'strike';\n  static tagName = ['S', 'STRIKE'];\n}\n\nexport default Strike;\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "self", "t", "e", "n", "r", "Block", "BlockBlot", "cache", "delta", "this", "blockDelta", "deleteAt", "index", "length", "super", "formatAt", "name", "value", "scroll", "query", "Scope", "BLOCK", "format", "Math", "min", "insertAt", "def", "lines", "split", "text", "shift", "children", "tail", "block", "reduce", "lineIndex", "line", "insertBefore", "blot", "ref", "head", "Break", "remove", "moveChildren", "target", "optimize", "context", "path", "removeChild", "child", "force", "arguments", "clone", "parent", "next", "blotName", "tagName", "defaultChild", "allowedChildren", "Inline", "EmbedBlot", "TextBlot", "BlockEmbed", "attach", "attributes", "AttributorStore", "domNode", "Delta", "insert", "formats", "values", "attribute", "BLOCK_ATTRIBUTE", "pop", "blocks", "map", "create", "forEach", "filter", "descendants", "LeafBlot", "leaf", "bubbleFormats", "statics", "scope", "BLOCK_BLOT", "prev", "Container", "ContainerBlot", "Cursor", "static", "constructor", "selection", "textNode", "document", "createTextNode", "CONTENTS", "appendChild", "savedLength", "detach", "offset", "node", "position", "data", "restore", "composing", "range", "getNativeRange", "lastChild", "parentNode", "prevTextBlot", "prevTextLength", "nextTextBlot", "nextText", "newText", "join", "mergedTextBlot", "newTextNode", "remapOffset", "start", "end", "startNode", "startOffset", "endNode", "endOffset", "update", "mutations", "some", "mutation", "type", "isolate", "unwrap", "GUARD_TEXT", "Embed", "contentNode", "createElement", "setAttribute", "Array", "from", "childNodes", "childNode", "leftGuard", "rightGuard", "prevLength", "InlineBlot", "Text", "other", "selfIndex", "order", "indexOf", "otherIndex", "compare", "BLOT", "wrap", "entityMap", "escapeText", "replace", "s", "isLine", "isUpdatable", "updateContent", "Scroll", "ScrollBlot", "registry", "_ref", "emitter", "batch", "enable", "addEventListener", "handleDragStart", "batchStart", "isArray", "batchEnd", "emitMount", "emit", "Emitter", "events", "SCROLL_BLOT_MOUNT", "emitUnmount", "SCROLL_BLOT_UNMOUNT", "emitEmbedUpdate", "change", "SCROLL_EMBED_UPDATE", "first", "last", "enabled", "endsWith", "slice", "embed", "INLINE_BLOT", "wrapper", "insertContents", "renderBlocks", "deltaToRenderBlocks", "concat", "shouldInsertNewlineChar", "descendant", "key", "insertInlineContents", "newlineCharLength", "lineEndIndex", "AttributeMap", "diff", "Object", "keys", "refBlot", "refBlotOffset", "find", "renderBlock", "createBlock", "undefined", "blockEmbed", "isEnabled", "getAttribute", "Number", "MAX_VALUE", "getLines", "blotIndex", "blotLength", "lengthLeft", "forEachAt", "childIndex", "childLength", "push", "SCROLL_OPTIMIZE", "source", "sources", "USER", "observer", "takeRecords", "_ref2", "SCROLL_BEFORE_UPDATE", "SCROLL_UPDATE", "updateEmbedAt", "b", "event", "preventDefault", "currentBlockDelta", "op", "splitted", "INLINE", "entries", "_ref3", "_ref4", "inlineContents", "Op", "History", "Module", "delay", "maxStack", "userOnly", "lastRecorded", "ignoreChange", "stack", "undo", "redo", "currentRange", "quill", "options", "on", "Quill", "EDITOR_CHANGE", "eventName", "oldValue", "SELECTION_CHANGE", "SILENT", "TEXT_CHANGE", "transform", "record", "transformRange", "keyboard", "addBinding", "shortKey", "bind", "shiftKey", "test", "navigator", "platform", "inputType", "dest", "item", "base", "getContents", "inverseDelta", "invert", "updateContents", "restoreSelection", "clear", "cutoff", "changeDelta", "oldDelta", "ops", "undoDelta", "undoRange", "timestamp", "Date", "now", "compose", "transformStack", "stackItem", "setSelection", "deleteLength", "delete", "changeIndex", "lastOp", "attr", "remoteDelta", "i", "oldItem", "splice", "transformPosition", "Uploader", "native", "caretRangeFromPoint", "clientX", "clientY", "caretPositionFromPoint", "createRange", "setStart", "offsetNode", "setEnd", "normalized", "normalizeNative", "normalizedToRange", "dataTransfer", "files", "upload", "uploads", "file", "mimetypes", "includes", "handler", "call", "DEFAULTS", "promises", "Promise", "resolve", "reader", "FileReader", "onload", "result", "readAsDataURL", "all", "then", "images", "image", "retain", "INSERT_TYPES", "Input", "handleBeforeInput", "userAgent", "COMPOSITION_BEFORE_START", "handleCompositionStart", "deleteRange", "replaceText", "getFormat", "composition", "isComposing", "defaultPrevented", "staticRange", "getTargetRanges", "collapsed", "types", "getData", "getSelection", "isMac", "UINode", "isListening", "selectionChangeDeadline", "handleArrowKeys", "handleNavigationShortcuts", "ParentBlot", "uiNode", "isRTL", "getComputedStyle", "ctrlKey", "ensureListeningToSelectionChange", "listener", "handleSelectionChange", "once", "getRangeAt", "startContainer", "newRange", "setStartAfter", "setEndAfter", "removeAllRanges", "addRange", "register", "Clipboard", "Keyboard", "debug", "logger", "_len", "args", "_key", "querySelectorAll", "instances", "get", "handleDOM", "EventEmitter", "COMPOSITION_START", "COMPOSITION_BEFORE_END", "COMPOSITION_END", "API", "domListeners", "error", "_len2", "_key2", "log", "_len3", "_key3", "contains", "listenDOM", "WeakMap", "levels", "level", "method", "console", "namespace", "ns", "newLevel", "ASCII", "convertListHTML", "items", "lastIndent", "endTag", "getListType", "indent", "rest", "tag", "convertHTML", "previousType", "isRoot", "html", "replaceAll", "list", "parts", "outerHTML", "innerHTML", "Element", "combineFormats", "combined", "merged", "combinedValue", "normalizeDelta", "normalizedDelta", "shiftRange", "amount", "Range", "getDelta", "applyDelta", "scrollLength", "deleteDelta", "isImplicitNewlinePrepended", "isImplicitNewlineAppended", "merge", "isInlineEmbed", "prependedLength", "addedLength", "deleteText", "formatLine", "max", "cloneDeep", "formatText", "leaves", "lineFormats", "leafFormats", "blots", "getHTML", "lineOffset", "lineLength", "getText", "contents", "insertEmbed", "insertText", "isBlank", "removeFormat", "suffixLength", "suffix", "selectionInfo", "match", "textBlot", "CursorBlot", "oldText", "relativeSelectionInfo", "oldRange", "isEqual", "setupListeners", "queueMicrotask", "handleCompositionEnd", "Node", "getElementRect", "element", "rect", "getBoundingClientRect", "scaleX", "abs", "width", "offsetWidth", "scaleY", "height", "offsetHeight", "top", "right", "left", "clientWidth", "bottom", "clientHeight", "paddingValueToInt", "number", "parseInt", "isNaN", "getScrollDistance", "targetStart", "targetEnd", "scrollStart", "scrollEnd", "scrollPaddingStart", "scrollPaddingEnd", "CORE_FORMATS", "globalRegistry", "Parchment", "uiClass", "bounds", "modules", "clipboard", "history", "uploader", "placeholder", "readOnly", "theme", "parchment", "Theme", "limit", "bubble", "imports", "overwrite", "attrName", "warn", "startsWith", "container", "containerOrSelector", "resolveSelector", "Error", "import", "quillModuleDefaults", "quillDefaults", "themeModuleDefaults", "themeDefaults", "userModuleOptions", "expandModuleConfig", "toolbar", "config", "omitUndefinedValuesFromOptions", "createRegistryWithFormats", "sourceRegistry", "Registry", "coreBlot", "iterations", "requiredContainer", "modulesWithDefaults", "moduleClass", "trim", "classList", "add", "set", "addContainer", "scrollBlotName", "editor", "Editor", "Selection", "Composition", "addModule", "init", "toggle", "lastRange", "getRange", "modify", "convert", "setContents", "disable", "allowReadOnlyEdits", "refNode", "className", "blur", "setRange", "overload", "editReadOnly", "modifier", "focus", "preventScroll", "scrollSelectionIntoView", "getBounds", "containerBounds", "getLength", "getIndex", "getLeaf", "getLine", "getModule", "getSemanticHTML", "hasFocus", "off", "scrollRectIntoView", "targetRect", "ownerDocument", "current", "isDocumentBody", "body", "bounding", "window", "visualViewport", "documentElement", "style", "scrollDistanceX", "scrollPaddingLeft", "scrollPaddingRight", "scrollDistanceY", "scrollPaddingTop", "scrollPaddingBottom", "defaultView", "scrollBy", "scrollLeft", "scrollTop", "scrolledLeft", "scrolledTop", "parentElement", "getRootNode", "host", "scrollIntoView", "delete1", "applied", "delete2", "setText", "selector", "querySelector", "expanded", "obj", "fromEntries", "entry", "lengthOrSource", "pos", "mouseDown", "cursor", "savedRange", "lastNative", "handleComposition", "handleDragging", "setTimeout", "setNativeRange", "triggeredByTyping", "ignored", "nativeRange", "after", "nextLine", "side", "rangeCount", "info", "isConnected", "activeElement", "positions", "indexes", "endContainer", "rangeToNative", "getPosition", "inclusive", "leafOffset", "default", "ModuleClass", "whitelist", "AlignAttribute", "Attributor", "AlignClass", "ClassAttributor", "AlignStyle", "StyleAttributor", "BackgroundClass", "BackgroundStyle", "ColorAttributor", "CodeBlockContainer", "code", "innerText", "CodeBlock", "Code", "component", "toString", "ColorClass", "ColorStyle", "DirectionAttribute", "DirectionClass", "DirectionStyle", "FontClass", "FontStyleAttributor", "FontStyle", "SizeClass", "SizeStyle", "normalWeightRegexp", "blockTagNames", "isBlockElement", "ignoreRegexp", "idRegexp", "indentRegexp", "NORMALIZERS", "doc", "msoList", "others", "listItems", "parseListItem", "idMatch", "id", "indentMatch", "typeRegexp", "RegExp", "typeMatch", "parsed", "childListItems", "nextElementSibling", "ul", "listItem", "li", "replaceChild", "fragment", "createDocumentFragment", "append", "br", "previousElementSibling", "CLIPBOARD_CONFIG", "TEXT_NODE", "isPre", "previousSibling", "nextSibling", "matchNewline", "deltaEndsWith", "ELEMENT_NODE", "prototype", "applyFormat", "classes", "styles", "ATTRIBUTE", "ATTRIBUTE_ATTRIBUTORS", "keyName", "STYLE_ATTRIBUTORS", "newDelta", "fontStyle", "italic", "textDecoration", "underline", "strike", "fontWeight", "bold", "_ref5", "parseFloat", "textIndent", "composed", "checkedAttr", "table", "createMatchAlias", "memo", "matchers", "onCaptureCopy", "onCapturePaste", "matcher", "addMatcher", "normalizeHTML", "normalize", "DOMParser", "parseFromString", "nodeMatches", "elementMatchers", "textMatchers", "prepareMatching", "traverse", "dangerouslyPasteHTML", "paste", "isCut", "onCopy", "clipboardData", "setData", "normalizeURIList", "urlList", "url", "childElementCount", "firstElementChild", "onPaste", "pastedDelta", "pair", "has", "matches", "endText", "toLowerCase", "preNodes", "nodeType", "childrenDelta", "reducedDelta", "_node", "HTMLParagraphElement", "firstChild", "SHORTKEY", "evt", "binding", "which", "bindings", "handleEnter", "metaKey", "altKey", "handleBackspace", "handleDelete", "prefix", "handleDeleteRange", "listen", "keyBinding", "singleBinding", "keyCode", "leafStart", "offsetStart", "leafEnd", "offsetEnd", "prefixText", "suffixText", "curContext", "empty", "every", "curFormats", "prevFormats", "formatDelta", "nextFormats", "defaultOptions", "makeFormatHandler", "outdent", "makeCodeBlockHandler", "tab", "header", "row", "cell", "getTable", "_table", "blockquote", "numLines", "cur", "makeEmbedArrowHandler", "makeTableArrowHandler", "TAB", "textContent", "up", "targetRow", "targetCell", "targetLine", "firstFormats", "lastFormats", "hasOwnProperty", "Events", "EE", "fn", "addListener", "TypeError", "_events", "_eventsCount", "clearEvent", "__proto__", "eventNames", "names", "getOwnPropertySymbols", "listeners", "handlers", "l", "ee", "listenerCount", "a1", "a2", "a3", "a4", "a5", "len", "removeListener", "apply", "j", "removeAllListeners", "prefixed", "DIFF_DELETE", "DIFF_INSERT", "DIFF_EQUAL", "diff_main", "text1", "text2", "cursor_pos", "cleanup", "_fix_unicode", "editdiff", "oldLength", "newLength", "oldCursor", "oldBefore", "oldAfter", "maybeNewCursor", "newCursor", "newBefore", "newAfter", "prefixLength", "oldPrefix", "newPrefix", "make_edit_splice", "oldSuffix", "newSuffix", "commonlength", "diff_commonPrefix", "commonprefix", "substring", "diff_commonSuffix", "commonsuffix", "diffs", "longtext", "shorttext", "hm", "diff_halfMatchI_", "best_longtext_a", "best_longtext_b", "best_shorttext_a", "best_shorttext_b", "seed", "floor", "best_common", "text1_a", "text1_b", "text2_a", "text2_b", "hm1", "ceil", "hm2", "mid_common", "diffs_a", "diffs_b", "text1_length", "text2_length", "max_d", "v_offset", "v_length", "v1", "v2", "x", "front", "k1start", "k1end", "k2start", "k2end", "d", "k1", "k1_offset", "y1", "x1", "charAt", "k2_offset", "x2", "diff_bisectSplit_", "k2", "y2", "unshift", "diff_cleanupMerge", "changes", "equalities", "equalitiesLength", "lastequality", "pointer", "length_insertions1", "length_deletions1", "length_insertions2", "length_deletions2", "diff_cleanupSemanticScore_", "one", "two", "char1", "char2", "nonAlphaNumeric1", "nonAlphaNumericRegex_", "nonAlphaNumeric2", "whitespace1", "whitespaceRegex_", "whitespace2", "lineBreak1", "linebreakRegex_", "lineBreak2", "blankLine1", "blanklineEndRegex_", "blankLine2", "blanklineStartRegex_", "equality1", "edit", "equality2", "commonOffset", "commonString", "bestEquality1", "bestEdit", "bestEquality2", "bestScore", "score", "deletion", "insertion", "overlap_length1", "diff_commonOverlap_", "overlap_length2", "y", "text1a", "text2a", "text1b", "text2b", "diffsb", "pointermin", "pointermax", "pointermid", "pointerstart", "is_surrogate_pair_start", "charCodeAt", "text_length", "best", "pattern", "found", "pointerend", "is_surrogate_pair_end", "fix_unicode", "count_delete", "count_insert", "text_delete", "text_insert", "previous_equality", "ends_with_pair_start", "stray", "k", "starts_with_pair_end", "charCode", "str", "before", "oldMiddle", "newMiddle", "tuples", "ret", "INSERT", "DELETE", "EQUAL", "HASH_UNDEFINED", "MAX_SAFE_INTEGER", "argsTag", "boolTag", "dateTag", "funcTag", "genTag", "mapTag", "numberTag", "objectTag", "promiseTag", "regexpTag", "setTag", "stringTag", "symbolTag", "weakMapTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "reFlags", "reIsHostCtor", "reIsUint", "cloneableTags", "freeGlobal", "g", "freeSelf", "Function", "freeExports", "freeModule", "moduleExports", "addMapEntry", "addSetEntry", "arrayReduce", "array", "iteratee", "accumulator", "initAccum", "isHostObject", "mapToArray", "size", "overArg", "func", "arg", "setToArray", "uid", "arrayProto", "funcProto", "objectProto", "coreJsData", "maskSrcKey", "exec", "IE_PROTO", "funcToString", "objectToString", "reIsNative", "Buffer", "Symbol", "Uint8Array", "getPrototype", "getPrototypeOf", "objectCreate", "propertyIsEnumerable", "nativeGetSymbols", "nativeIsBuffer", "isBuffer", "nativeKeys", "DataView", "getNative", "Map", "Set", "nativeCreate", "dataViewCtorString", "toSource", "mapCtorString", "promiseCtorString", "setCtorString", "weakMapCtorString", "symbolProto", "symbolValueOf", "valueOf", "Hash", "ListCache", "MapCache", "Stack", "__data__", "assignValue", "object", "objValue", "eq", "assocIndexOf", "baseClone", "isDeep", "isFull", "customizer", "isObject", "isArr", "input", "getTag", "isFunc", "buffer", "copy", "isPrototype", "proto", "copyObject", "getSymbols", "cloneFunc", "symbol", "Ctor", "cloneArrayBuffer", "dataView", "byteOffset", "byteLength", "typedArray", "regexp", "lastIndex", "stacked", "props", "keysFunc", "symbolsFunc", "subValue", "arrayBuffer", "newValue", "getMapData", "isFunction", "pairs", "LARGE_ARRAY_SIZE", "isIndex", "ArrayBuffer", "ctorString", "isArrayLike", "inherited", "String", "skipIndexes", "COMPARE_PARTIAL_FLAG", "COMPARE_UNORDERED_FLAG", "arrayTag", "asyncTag", "errorTag", "nullTag", "proxyTag", "undefinedTag", "typedArrayTags", "freeProcess", "process", "nodeUtil", "nodeIsTypedArray", "isTypedArray", "arraySome", "predicate", "nativeObjectToString", "symToStringTag", "toStringTag", "SetCache", "baseGetTag", "isOwn", "unmasked", "baseIsArguments", "isObjectLike", "baseIsEqual", "bitmask", "equalFunc", "objIsArr", "othIsArr", "objTag", "othTag", "objIsObj", "othIsObj", "isSameTag", "equalArrays", "message", "isPartial", "objIsWrapped", "othIsWrapped", "objUnwrapped", "othUnwrapped", "objProps", "getAllKeys", "objLength", "skipCtor", "othValue", "compared", "objCtor", "othCtor", "arrLength", "othLength", "seen", "arrValue", "othIndex", "resIndex", "isArguments", "isLength", "isArg", "isBuff", "isType", "a", "keepNull", "attrs", "baseInverted", "priority", "OpIterator", "NULL_CHARACTER", "fromCharCode", "getEmbedTypeAndData", "embedType", "newOp", "chop", "passed", "failed", "initialValue", "changeLength", "elem", "Infinity", "iter", "hasNext", "nextOp", "thisIter", "otherIter", "firstOther", "peek", "firstLeft", "peekType", "peekLength", "thisOp", "otherOp", "action", "thisData", "otherData", "getHandler", "strings", "retDelta", "diffResult", "opLength", "newline", "inverted", "baseIndex", "baseOp", "opData", "baseOpData", "transformedData", "nextType", "retOp", "substr", "allocUnsafe", "isNew", "defineProperty", "global", "stubArray", "require", "keysIn", "nodeIsMap", "isMap", "nodeIsSet", "isSet", "isFlat", "arrStacked", "othStacked", "objStacked", "isProto", "count", "lastCalled", "assigner", "iterable", "objectCtorString", "srcIndex", "mergeFunc", "srcValue", "isCommon", "isTyped", "baseMerge", "nativeMax", "string", "nativeNow", "stamp", "remaining", "otherArgs", "thisArg", "guard", "TYPE", "LEVEL", "INLINE_ATTRIBUTE", "ANY", "attributeBit", "canAdd", "removeAttribute", "ParchmentError", "tags", "blotClass", "inline", "definitions", "definition", "isBlot", "isAttr", "toUpperCase", "camelize", "part", "build", "rawValue", "cloneNode", "_context", "replacement", "_force", "_mutations", "ShadowBlot", "_domNode", "compareDocumentPosition", "DOCUMENT_POSITION_CONTAINED_BY", "_inclusive", "LinkedList", "nodes", "iterator", "curNode", "callback", "curIndex", "curLength", "makeAttachedBlot", "reverse", "err", "criteria", "enforceAllowedChildren", "done", "splitAfter", "childBlot", "refDomNode", "targetParent", "replaceWith", "_length", "addedNodes", "removedNodes", "sort", "DOCUMENT_POSITION_FOLLOWING", "obj1", "obj2", "prop", "move", "checkMerge", "_scroll", "OBSERVER_CONFIG", "characterData", "characterDataOldValue", "childList", "subtree", "MutationObserver", "observe", "disconnect", "mutationsMap", "records", "mark", "markParent", "o", "grandChild", "splitText", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "loaded", "__webpack_modules__", "getter", "__esModule", "enumerable", "globalThis", "nmd", "paths", "IndentAttributor", "normalizedValue", "Blockquote", "Header", "ListContainer", "ListItem", "ui", "listEventHandler", "attachUI", "Bold", "Link", "sanitize", "PROTOCOL_WHITELIST", "SANITIZED_URL", "protocols", "anchor", "href", "protocol", "Script", "Underline", "Formula", "katex", "render", "throwOnError", "errorColor", "formula", "ATTRIBUTES", "Image", "hasAttribute", "Video", "video", "TokenAttributor", "CodeToken", "SyntaxCodeBlock", "SyntaxCodeBlockContainer", "forceNext", "highlight", "forced", "language", "cachedText", "codeBlock", "BreakBlot", "Syntax", "hljs", "languages", "highlightBlot", "initListener", "initTimer", "select", "label", "option", "timer", "clearTimeout", "interval", "lib", "versionString", "majorVersion", "nodeText", "TableCell", "tableId", "cellOffset", "rowOffset", "TableRow", "thisHead", "thisTail", "nextHead", "nextTail", "childFormats", "TableBody", "TableContainer", "balanceCells", "rows", "maxColumns", "fill", "cells", "column", "at", "deleteColumn", "insertColumn", "insertRow", "random", "Table", "listenBalanceCells", "balanceTables", "deleteRow", "deleteTable", "insertColumnLeft", "insertColumnRight", "insertRowAbove", "insertRowBelow", "insertTable", "columns", "old", "Toolbar", "groups", "controls", "group", "control", "addButton", "HTMLElement", "addHandler", "selectedIndex", "selected", "prompt", "isActive", "clean", "direction", "align", "link", "center", "justify", "background", "codeIcon", "color", "rtl", "bullet", "check", "ordered", "script", "sub", "optionsCounter", "toggleAriaAttribute", "buildPicker", "display", "togglePicker", "escape", "buildItem", "tabIndex", "selectItem", "buildLabel", "buildOptions", "close", "trigger", "dispatchEvent", "Event", "Picker", "backgroundColor", "colorLabel", "stroke", "icons", "defaultItem", "boundsContainer", "TEMPLATE", "el", "overflowY", "marginTop", "hide", "reference", "rootBounds", "verticalShift", "show", "ALIGNS", "COLORS", "FONTS", "HEADERS", "SIZES", "BaseTheme", "tooltip", "textbox", "pickers", "picker", "removeEventListener", "extendToolbar", "buildButtons", "buttons", "button", "buildPickers", "selects", "fillSelect", "IconPicker", "ColorPicker", "fileInput", "click", "BaseTooltip", "Tooltip", "save", "cancel", "restoreFocus", "mode", "preview", "linkRange", "defaultValue", "TOOLBAR_CONFIG", "BubbleTooltip", "lastLine", "indexBounds", "arrow", "marginLeft", "BubbleTheme", "SnowTooltip", "LinkBlot", "SnowTheme", "_range", "Indent", "List", "InlineCode", "Icons"]
}
